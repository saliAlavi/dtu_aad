/var/spool/slurmd/job246782/slurm_script: line 14: cd: /users/PAS2301/alialavi/projects/AAD-CMAA/create_dataset/{dtu_td_cmaa_50ov_30s}: No such file or directory
2024-11-08 01:57:43.525556: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-11-08 01:57:45.718137: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-08 01:57:47.910255: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/cv2/../../lib64:/apps/spack/0.17/ascend/linux-rhel8-zen/cudnn/gcc/8.4.1/8.6.0.163-11.8-hrxt3zr/lib:/apps/spack/0.17/root/linux-rhel8-zen/cuda/gcc/8.4.1/11.8.0-eyqbbsj/lib64:/apps/spack/0.17/ascend/linux-rhel8-zen2/mvapich2/intel/2021.4.0/2.3.7-tlkt2xz/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib/x64:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib/emu:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/compiler/lib/intel64_lin:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/lib:/apps/spack/0.17/root/linux-rhel8-zen/intel-oneapi-mkl/gcc/8.4.1/2021.4.0-nr36qjw/mkl/2021.4.0/lib/intel64:/apps/spack/0.17/root/linux-rhel8-zen/intel-oneapi-mkl/gcc/8.4.1/2021.4.0-nr36qjw/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/gcc/gcc/8.4.1/10.3.0-btgsyjw/lib64:/apps/spack/0.17/ascend/linux-rhel8-zen/gcc/gcc/8.4.1/10.3.0-btgsyjw/lib
2024-11-08 01:57:47.913068: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/cv2/../../lib64:/apps/spack/0.17/ascend/linux-rhel8-zen/cudnn/gcc/8.4.1/8.6.0.163-11.8-hrxt3zr/lib:/apps/spack/0.17/root/linux-rhel8-zen/cuda/gcc/8.4.1/11.8.0-eyqbbsj/lib64:/apps/spack/0.17/ascend/linux-rhel8-zen2/mvapich2/intel/2021.4.0/2.3.7-tlkt2xz/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib/x64:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/lib/emu:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/compiler/2021.4.0/linux/compiler/lib/intel64_lin:/apps/spack/0.17/ascend/linux-rhel8-zen/intel-oneapi-compilers/gcc/8.4.1/2021.4.0-4num6om/lib:/apps/spack/0.17/root/linux-rhel8-zen/intel-oneapi-mkl/gcc/8.4.1/2021.4.0-nr36qjw/mkl/2021.4.0/lib/intel64:/apps/spack/0.17/root/linux-rhel8-zen/intel-oneapi-mkl/gcc/8.4.1/2021.4.0-nr36qjw/lib:/apps/spack/0.17/ascend/linux-rhel8-zen/gcc/gcc/8.4.1/10.3.0-btgsyjw/lib64:/apps/spack/0.17/ascend/linux-rhel8-zen/gcc/gcc/8.4.1/10.3.0-btgsyjw/lib
2024-11-08 01:57:47.913082: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2024-11-08 01:57:48.682655: E tensorflow/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
2024-11-08 01:57:48.682695: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: a0008.ten.osc.edu
2024-11-08 01:57:48.682705: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: a0008.ten.osc.edu
2024-11-08 01:57:48.682796: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:200] libcuda reported version is: 550.90.12
2024-11-08 01:57:48.682820: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:204] kernel reported version is: 550.90.12
2024-11-08 01:57:48.682828: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:310] kernel version seems to match DSO: 550.90.12
2024-11-08 01:57:52.198942: W tensorflow/core/platform/cloud/google_auth_provider.cc:184] All attempts to get a Google authentication bearer token failed, returning an empty token. Retrieving token from files failed with "NOT_FOUND: Could not locate the credentials file.". Retrieving token from GCE failed with "FAILED_PRECONDITION: Error executing an HTTP request: libcurl code 6 meaning 'Couldn't resolve host name', error details: Could not resolve host: metadata".
INFO[build.py]: Loading dataset  from path: /users/PAS2301/alialavi/projects/AAD-CMAA/create_dataset/dtu_td_cmaa_50ov_30s/dtu_td_cmaa_50ov_30s_dataset_builder.py
INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub1/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:35, 35.67s/ examples][A
Generating train examples...: 7 examples [00:36,  3.88s/ examples][A
Generating train examples...: 13 examples [00:37,  1.80s/ examples][A
Generating train examples...: 19 examples [00:38,  1.07s/ examples][A
Generating train examples...: 25 examples [00:39,  1.39 examples/s][A
Generating train examples...: 31 examples [00:40,  1.91 examples/s][A
Generating train examples...: 37 examples [00:41,  2.48 examples/s][A
Generating train examples...: 43 examples [00:42,  3.07 examples/s][A
Generating train examples...: 49 examples [00:43,  3.63 examples/s][A
Generating train examples...: 55 examples [00:44,  4.13 examples/s][A
Generating train examples...: 61 examples [00:45,  4.56 examples/s][A
Generating train examples...: 67 examples [00:46,  4.92 examples/s][A
Generating train examples...: 73 examples [00:47,  5.20 examples/s][A
Generating train examples...: 79 examples [00:48,  5.41 examples/s][A
Generating train examples...: 85 examples [00:49,  5.56 examples/s][A
Generating train examples...: 91 examples [00:50,  5.67 examples/s][A
Generating train examples...: 97 examples [00:51,  5.76 examples/s][A
Generating train examples...: 103 examples [00:52,  5.82 examples/s][A
Generating train examples...: 109 examples [00:53,  5.86 examples/s][A
Generating train examples...: 115 examples [00:54,  5.89 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 103.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 107.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 108.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 109.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 109.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 109.79 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:56<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:56<00:56, 56.78s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:06,  6.33s/ examples][A
Generating test examples...: 7 examples [00:07,  1.23 examples/s][A
Generating test examples...: 13 examples [00:08,  2.22 examples/s][A
Generating test examples...: 19 examples [00:09,  3.08 examples/s][A
Generating test examples...: 25 examples [00:10,  3.79 examples/s][A
Generating test examples...: 31 examples [00:11,  4.35 examples/s][A
Generating test examples...: 37 examples [00:12,  4.78 examples/s][A
Generating test examples...: 43 examples [00:13,  5.11 examples/s][A
Generating test examples...: 49 examples [00:14,  5.35 examples/s][A
Generating test examples...: 55 examples [00:15,  5.53 examples/s][A
Generating test examples...: 61 examples [00:16,  5.65 examples/s][A
Generating test examples...: 67 examples [00:17,  5.74 examples/s][A
Generating test examples...: 73 examples [00:18,  5.81 examples/s][A
Generating test examples...: 79 examples [00:19,  5.85 examples/s][A
Generating test examples...: 85 examples [00:20,  5.87 examples/s][A
Generating test examples...: 91 examples [00:21,  5.90 examples/s][A
Generating test examples...: 97 examples [00:22,  5.92 examples/s][A
Generating test examples...: 103 examples [00:23,  5.93 examples/s][A
Generating test examples...: 109 examples [00:24,  5.94 examples/s][A
Generating test examples...: 115 examples [00:25,  5.95 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 96.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 98.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 97.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 95.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 95.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 96.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 97.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 100.90 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [01:24<00:56, 56.78s/ splits]Generating splits...: 100%|██████████| 2/2 [01:24<00:00, 39.62s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0.incompleteEDRR2P/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub1/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 1
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub1/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub2/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:09,  9.38s/ examples][A
Generating train examples...: 7 examples [00:10,  1.13s/ examples][A
Generating train examples...: 13 examples [00:11,  1.69 examples/s][A
Generating train examples...: 19 examples [00:12,  2.48 examples/s][A
Generating train examples...: 25 examples [00:13,  3.21 examples/s][A
Generating train examples...: 31 examples [00:14,  3.85 examples/s][A
Generating train examples...: 37 examples [00:15,  4.37 examples/s][A
Generating train examples...: 43 examples [00:16,  4.78 examples/s][A
Generating train examples...: 49 examples [00:17,  5.10 examples/s][A
Generating train examples...: 55 examples [00:18,  5.33 examples/s][A
Generating train examples...: 61 examples [00:19,  5.50 examples/s][A
Generating train examples...: 67 examples [00:20,  5.63 examples/s][A
Generating train examples...: 73 examples [00:21,  5.71 examples/s][A
Generating train examples...: 79 examples [00:22,  5.78 examples/s][A
Generating train examples...: 85 examples [00:23,  5.83 examples/s][A
Generating train examples...: 91 examples [00:24,  5.86 examples/s][A
Generating train examples...: 97 examples [00:25,  5.88 examples/s][A
Generating train examples...: 103 examples [00:26,  5.91 examples/s][A
Generating train examples...: 109 examples [00:27,  5.92 examples/s][A
Generating train examples...: 115 examples [00:28,  5.93 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 109.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 109.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 110.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 110.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 109.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 110.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 110.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.26 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:30<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:30<00:30, 30.54s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.42s/ examples][A
Generating test examples...: 7 examples [00:06,  1.40 examples/s][A
Generating test examples...: 13 examples [00:07,  2.45 examples/s][A
Generating test examples...: 19 examples [00:08,  3.32 examples/s][A
Generating test examples...: 25 examples [00:09,  4.01 examples/s][A
Generating test examples...: 31 examples [00:10,  4.54 examples/s][A
Generating test examples...: 37 examples [00:11,  4.94 examples/s][A
Generating test examples...: 43 examples [00:12,  5.23 examples/s][A
Generating test examples...: 49 examples [00:13,  5.45 examples/s][A
Generating test examples...: 55 examples [00:14,  5.59 examples/s][A
Generating test examples...: 61 examples [00:15,  5.70 examples/s][A
Generating test examples...: 67 examples [00:16,  5.78 examples/s][A
Generating test examples...: 73 examples [00:17,  5.84 examples/s][A
Generating test examples...: 79 examples [00:18,  5.88 examples/s][A
Generating test examples...: 85 examples [00:19,  5.90 examples/s][A
Generating test examples...: 91 examples [00:20,  5.92 examples/s][A
Generating test examples...: 97 examples [00:21,  5.93 examples/s][A
Generating test examples...: 103 examples [00:22,  5.94 examples/s][A
Generating test examples...: 109 examples [00:23,  5.94 examples/s][A
Generating test examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 93.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 95.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 96.58 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 99.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 102.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 104.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 106.37 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:57<00:30, 30.54s/ splits]Generating splits...: 100%|██████████| 2/2 [00:57<00:00, 28.23s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0.incompleteGP1HZZ/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub2/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 2
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub2/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub3/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.51s/ examples][A
Generating train examples...: 7 examples [00:07,  1.20 examples/s][A
Generating train examples...: 13 examples [00:08,  2.18 examples/s][A
Generating train examples...: 19 examples [00:09,  3.04 examples/s][A
Generating train examples...: 25 examples [00:10,  3.76 examples/s][A
Generating train examples...: 31 examples [00:11,  4.32 examples/s][A
Generating train examples...: 37 examples [00:12,  4.77 examples/s][A
Generating train examples...: 43 examples [00:13,  5.10 examples/s][A
Generating train examples...: 49 examples [00:14,  5.35 examples/s][A
Generating train examples...: 55 examples [00:15,  5.53 examples/s][A
Generating train examples...: 61 examples [00:16,  5.65 examples/s][A
Generating train examples...: 67 examples [00:17,  5.74 examples/s][A
Generating train examples...: 73 examples [00:18,  5.81 examples/s][A
Generating train examples...: 79 examples [00:19,  5.83 examples/s][A
Generating train examples...: 85 examples [00:20,  5.87 examples/s][A
Generating train examples...: 91 examples [00:21,  5.89 examples/s][A
Generating train examples...: 97 examples [00:22,  5.92 examples/s][A
Generating train examples...: 103 examples [00:23,  5.93 examples/s][A
Generating train examples...: 109 examples [00:24,  5.94 examples/s][A
Generating train examples...: 115 examples [00:25,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 99.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 99.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 99.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 98.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 100.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 102.16 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 104.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 103.84 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.72s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.49s/ examples][A
Generating test examples...: 7 examples [00:06,  1.38 examples/s][A
Generating test examples...: 13 examples [00:07,  2.43 examples/s][A
Generating test examples...: 19 examples [00:08,  3.30 examples/s][A
Generating test examples...: 25 examples [00:09,  3.99 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.93 examples/s][A
Generating test examples...: 43 examples [00:12,  5.23 examples/s][A
Generating test examples...: 49 examples [00:13,  5.45 examples/s][A
Generating test examples...: 55 examples [00:14,  5.60 examples/s][A
Generating test examples...: 61 examples [00:15,  5.71 examples/s][A
Generating test examples...: 67 examples [00:16,  5.78 examples/s][A
Generating test examples...: 73 examples [00:17,  5.83 examples/s][A
Generating test examples...: 79 examples [00:18,  5.87 examples/s][A
Generating test examples...: 85 examples [00:19,  5.89 examples/s][A
Generating test examples...: 91 examples [00:20,  5.91 examples/s][A
Generating test examples...: 97 examples [00:21,  5.93 examples/s][A
Generating test examples...: 103 examples [00:22,  5.94 examples/s][A
Generating test examples...: 109 examples [00:23,  5.95 examples/s][A
Generating test examples...: 115 examples [00:24,  5.96 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 111.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 108.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 109.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 109.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 108.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 110.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.40 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.72s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.05s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0.incompletePZD4SZ/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub3/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 3
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub3/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub4/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:07,  7.93s/ examples][A
Generating train examples...: 7 examples [00:08,  1.02 examples/s][A
Generating train examples...: 13 examples [00:09,  1.91 examples/s][A
Generating train examples...: 19 examples [00:10,  2.74 examples/s][A
Generating train examples...: 25 examples [00:11,  3.46 examples/s][A
Generating train examples...: 31 examples [00:12,  4.07 examples/s][A
Generating train examples...: 37 examples [00:13,  4.57 examples/s][A
Generating train examples...: 43 examples [00:14,  4.94 examples/s][A
Generating train examples...: 49 examples [00:15,  5.22 examples/s][A
Generating train examples...: 55 examples [00:17,  5.42 examples/s][A
Generating train examples...: 61 examples [00:18,  5.57 examples/s][A
Generating train examples...: 67 examples [00:19,  5.68 examples/s][A
Generating train examples...: 73 examples [00:20,  5.75 examples/s][A
Generating train examples...: 79 examples [00:21,  5.81 examples/s][A
Generating train examples...: 85 examples [00:22,  5.85 examples/s][A
Generating train examples...: 91 examples [00:23,  5.88 examples/s][A
Generating train examples...: 97 examples [00:24,  5.90 examples/s][A
Generating train examples...: 103 examples [00:25,  5.92 examples/s][A
Generating train examples...: 109 examples [00:26,  5.94 examples/s][A
Generating train examples...: 115 examples [00:27,  5.95 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 95.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 101.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 104.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 106.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 108.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 107.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 108.54 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:29<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:29<00:29, 29.10s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.76s/ examples][A
Generating test examples...: 7 examples [00:06,  1.33 examples/s][A
Generating test examples...: 13 examples [00:07,  2.35 examples/s][A
Generating test examples...: 19 examples [00:08,  3.21 examples/s][A
Generating test examples...: 25 examples [00:09,  3.90 examples/s][A
Generating test examples...: 31 examples [00:10,  4.44 examples/s][A
Generating test examples...: 37 examples [00:11,  4.84 examples/s][A
Generating test examples...: 43 examples [00:12,  5.15 examples/s][A
Generating test examples...: 49 examples [00:13,  5.36 examples/s][A
Generating test examples...: 55 examples [00:14,  5.52 examples/s][A
Generating test examples...: 61 examples [00:15,  5.65 examples/s][A
Generating test examples...: 67 examples [00:16,  5.74 examples/s][A
Generating test examples...: 73 examples [00:17,  5.80 examples/s][A
Generating test examples...: 79 examples [00:18,  5.83 examples/s][A
Generating test examples...: 85 examples [00:19,  5.86 examples/s][A
Generating test examples...: 91 examples [00:20,  5.88 examples/s][A
Generating test examples...: 97 examples [00:21,  5.91 examples/s][A
Generating test examples...: 103 examples [00:22,  5.92 examples/s][A
Generating test examples...: 109 examples [00:23,  5.92 examples/s][A
Generating test examples...: 115 examples [00:25,  5.91 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 107.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 108.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 103.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 104.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 104.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 105.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 106.91 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:56<00:29, 29.10s/ splits]Generating splits...: 100%|██████████| 2/2 [00:56<00:00, 27.89s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0.incompleteCDHO6V/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub4/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 4
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub4/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub5/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.06s/ examples][A
Generating train examples...: 7 examples [00:07,  1.28 examples/s][A
Generating train examples...: 13 examples [00:08,  2.28 examples/s][A
Generating train examples...: 19 examples [00:09,  3.14 examples/s][A
Generating train examples...: 25 examples [00:10,  3.85 examples/s][A
Generating train examples...: 31 examples [00:11,  4.40 examples/s][A
Generating train examples...: 37 examples [00:12,  4.82 examples/s][A
Generating train examples...: 43 examples [00:13,  5.13 examples/s][A
Generating train examples...: 49 examples [00:14,  5.36 examples/s][A
Generating train examples...: 55 examples [00:15,  5.53 examples/s][A
Generating train examples...: 61 examples [00:16,  5.65 examples/s][A
Generating train examples...: 67 examples [00:17,  5.73 examples/s][A
Generating train examples...: 73 examples [00:18,  5.79 examples/s][A
Generating train examples...: 79 examples [00:19,  5.84 examples/s][A
Generating train examples...: 85 examples [00:20,  5.86 examples/s][A
Generating train examples...: 91 examples [00:21,  5.89 examples/s][A
Generating train examples...: 97 examples [00:22,  5.91 examples/s][A
Generating train examples...: 103 examples [00:23,  5.91 examples/s][A
Generating train examples...: 109 examples [00:24,  5.92 examples/s][A
Generating train examples...: 115 examples [00:25,  5.93 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 95.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 93.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 95.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 99.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 103.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 105.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 107.08 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.34s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.57s/ examples][A
Generating test examples...: 8 examples [00:06,  1.52 examples/s][A
Generating test examples...: 15 examples [00:07,  2.64 examples/s][A
Generating test examples...: 22 examples [00:09,  3.52 examples/s][A
Generating test examples...: 29 examples [00:10,  4.20 examples/s][A
Generating test examples...: 36 examples [00:11,  4.72 examples/s][A
Generating test examples...: 43 examples [00:12,  5.10 examples/s][A
Generating test examples...: 50 examples [00:13,  5.37 examples/s][A
Generating test examples...: 57 examples [00:14,  5.56 examples/s][A
Generating test examples...: 64 examples [00:16,  5.70 examples/s][A
Generating test examples...: 71 examples [00:17,  5.80 examples/s][A
Generating test examples...: 77 examples [00:18,  5.86 examples/s][A
Generating test examples...: 84 examples [00:19,  5.90 examples/s][A
Generating test examples...: 91 examples [00:20,  5.95 examples/s][A
Generating test examples...: 98 examples [00:21,  5.97 examples/s][A
Generating test examples...: 105 examples [00:22,  5.99 examples/s][A
Generating test examples...: 112 examples [00:23,  6.02 examples/s][A
Generating test examples...: 119 examples [00:25,  6.02 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 105.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 108.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.99 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 107.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 107.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 108.18 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 109.08 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:27, 27.34s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.81s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0.incompleteNFXIKX/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub5/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 5
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub5/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub6/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.34s/ examples][A
Generating train examples...: 7 examples [00:07,  1.23 examples/s][A
Generating train examples...: 13 examples [00:08,  2.22 examples/s][A
Generating train examples...: 19 examples [00:09,  3.08 examples/s][A
Generating train examples...: 25 examples [00:10,  3.79 examples/s][A
Generating train examples...: 31 examples [00:11,  4.36 examples/s][A
Generating train examples...: 37 examples [00:12,  4.79 examples/s][A
Generating train examples...: 43 examples [00:13,  5.12 examples/s][A
Generating train examples...: 49 examples [00:14,  5.36 examples/s][A
Generating train examples...: 55 examples [00:15,  5.52 examples/s][A
Generating train examples...: 61 examples [00:16,  5.64 examples/s][A
Generating train examples...: 67 examples [00:17,  5.74 examples/s][A
Generating train examples...: 73 examples [00:18,  5.80 examples/s][A
Generating train examples...: 79 examples [00:19,  5.85 examples/s][A
Generating train examples...: 85 examples [00:20,  5.87 examples/s][A
Generating train examples...: 91 examples [00:21,  5.88 examples/s][A
Generating train examples...: 97 examples [00:22,  5.90 examples/s][A
Generating train examples...: 103 examples [00:23,  5.92 examples/s][A
Generating train examples...: 109 examples [00:24,  5.93 examples/s][A
Generating train examples...: 115 examples [00:25,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 103.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 106.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 109.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 106.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 106.66 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.52s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.40s/ examples][A
Generating test examples...: 7 examples [00:06,  1.40 examples/s][A
Generating test examples...: 13 examples [00:07,  2.45 examples/s][A
Generating test examples...: 19 examples [00:08,  3.32 examples/s][A
Generating test examples...: 25 examples [00:09,  4.01 examples/s][A
Generating test examples...: 31 examples [00:10,  4.53 examples/s][A
Generating test examples...: 37 examples [00:11,  4.92 examples/s][A
Generating test examples...: 43 examples [00:12,  5.22 examples/s][A
Generating test examples...: 49 examples [00:13,  5.42 examples/s][A
Generating test examples...: 55 examples [00:14,  5.58 examples/s][A
Generating test examples...: 61 examples [00:15,  5.68 examples/s][A
Generating test examples...: 67 examples [00:16,  5.75 examples/s][A
Generating test examples...: 73 examples [00:17,  5.80 examples/s][A
Generating test examples...: 79 examples [00:18,  5.83 examples/s][A
Generating test examples...: 85 examples [00:19,  5.85 examples/s][A
Generating test examples...: 91 examples [00:20,  5.86 examples/s][A
Generating test examples...: 97 examples [00:21,  5.88 examples/s][A
Generating test examples...: 103 examples [00:22,  5.89 examples/s][A
Generating test examples...: 109 examples [00:23,  5.89 examples/s][A
Generating test examples...: 115 examples [00:24,  5.91 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 99.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 103.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 106.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 105.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 105.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 106.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 108.22 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.52s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.01s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0.incompleteM0E985/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub6/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 6
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub6/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub7/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.39s/ examples][A
Generating train examples...: 7 examples [00:07,  1.22 examples/s][A
Generating train examples...: 13 examples [00:08,  2.21 examples/s][A
Generating train examples...: 19 examples [00:09,  3.07 examples/s][A
Generating train examples...: 25 examples [00:10,  3.78 examples/s][A
Generating train examples...: 31 examples [00:11,  4.35 examples/s][A
Generating train examples...: 37 examples [00:12,  4.78 examples/s][A
Generating train examples...: 43 examples [00:13,  5.12 examples/s][A
Generating train examples...: 49 examples [00:14,  5.35 examples/s][A
Generating train examples...: 55 examples [00:15,  5.52 examples/s][A
Generating train examples...: 61 examples [00:16,  5.65 examples/s][A
Generating train examples...: 67 examples [00:17,  5.74 examples/s][A
Generating train examples...: 73 examples [00:18,  5.81 examples/s][A
Generating train examples...: 79 examples [00:19,  5.86 examples/s][A
Generating train examples...: 85 examples [00:20,  5.87 examples/s][A
Generating train examples...: 91 examples [00:21,  5.90 examples/s][A
Generating train examples...: 97 examples [00:22,  5.92 examples/s][A
Generating train examples...: 103 examples [00:23,  5.94 examples/s][A
Generating train examples...: 109 examples [00:24,  5.94 examples/s][A
Generating train examples...: 115 examples [00:25,  5.95 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 100.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 98.03 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 97.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 96.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 99.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 102.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 104.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 105.46 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.58s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.98s/ examples][A
Generating test examples...: 7 examples [00:06,  1.29 examples/s][A
Generating test examples...: 13 examples [00:07,  2.30 examples/s][A
Generating test examples...: 19 examples [00:09,  3.17 examples/s][A
Generating test examples...: 25 examples [00:10,  3.87 examples/s][A
Generating test examples...: 31 examples [00:11,  4.42 examples/s][A
Generating test examples...: 37 examples [00:12,  4.84 examples/s][A
Generating test examples...: 43 examples [00:13,  5.16 examples/s][A
Generating test examples...: 49 examples [00:14,  5.39 examples/s][A
Generating test examples...: 55 examples [00:15,  5.56 examples/s][A
Generating test examples...: 61 examples [00:16,  5.68 examples/s][A
Generating test examples...: 67 examples [00:17,  5.76 examples/s][A
Generating test examples...: 73 examples [00:18,  5.82 examples/s][A
Generating test examples...: 79 examples [00:19,  5.86 examples/s][A
Generating test examples...: 85 examples [00:20,  5.89 examples/s][A
Generating test examples...: 91 examples [00:21,  5.92 examples/s][A
Generating test examples...: 97 examples [00:22,  5.93 examples/s][A
Generating test examples...: 103 examples [00:23,  5.94 examples/s][A
Generating test examples...: 109 examples [00:24,  5.94 examples/s][A
Generating test examples...: 115 examples [00:25,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 100.05 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 104.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 105.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 105.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 105.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 106.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 102.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 101.65 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.58s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.34s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0.incompleteB5Y0YF/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub7/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 7
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub7/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub8/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.89s/ examples][A
Generating train examples...: 7 examples [00:07,  1.15 examples/s][A
Generating train examples...: 13 examples [00:08,  2.10 examples/s][A
Generating train examples...: 19 examples [00:09,  2.95 examples/s][A
Generating train examples...: 25 examples [00:10,  3.67 examples/s][A
Generating train examples...: 31 examples [00:11,  4.25 examples/s][A
Generating train examples...: 37 examples [00:12,  4.70 examples/s][A
Generating train examples...: 43 examples [00:13,  5.06 examples/s][A
Generating train examples...: 49 examples [00:14,  5.31 examples/s][A
Generating train examples...: 55 examples [00:15,  5.50 examples/s][A
Generating train examples...: 61 examples [00:16,  5.64 examples/s][A
Generating train examples...: 67 examples [00:17,  5.73 examples/s][A
Generating train examples...: 73 examples [00:18,  5.80 examples/s][A
Generating train examples...: 79 examples [00:19,  5.85 examples/s][A
Generating train examples...: 85 examples [00:20,  5.88 examples/s][A
Generating train examples...: 91 examples [00:21,  5.90 examples/s][A
Generating train examples...: 97 examples [00:22,  5.92 examples/s][A
Generating train examples...: 103 examples [00:24,  5.93 examples/s][A
Generating train examples...: 109 examples [00:25,  5.93 examples/s][A
Generating train examples...: 115 examples [00:26,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 109.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 105.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 103.18 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 104.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 106.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 107.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 108.73 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:28<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:28<00:28, 28.05s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.43s/ examples][A
Generating test examples...: 7 examples [00:06,  1.39 examples/s][A
Generating test examples...: 13 examples [00:07,  2.45 examples/s][A
Generating test examples...: 19 examples [00:08,  3.32 examples/s][A
Generating test examples...: 25 examples [00:09,  4.01 examples/s][A
Generating test examples...: 31 examples [00:10,  4.54 examples/s][A
Generating test examples...: 37 examples [00:11,  4.93 examples/s][A
Generating test examples...: 43 examples [00:12,  5.23 examples/s][A
Generating test examples...: 49 examples [00:13,  5.44 examples/s][A
Generating test examples...: 55 examples [00:14,  5.59 examples/s][A
Generating test examples...: 61 examples [00:15,  5.70 examples/s][A
Generating test examples...: 67 examples [00:16,  5.77 examples/s][A
Generating test examples...: 73 examples [00:17,  5.82 examples/s][A
Generating test examples...: 79 examples [00:18,  5.86 examples/s][A
Generating test examples...: 85 examples [00:19,  5.88 examples/s][A
Generating test examples...: 91 examples [00:20,  5.89 examples/s][A
Generating test examples...: 97 examples [00:21,  5.91 examples/s][A
Generating test examples...: 103 examples [00:22,  5.92 examples/s][A
Generating test examples...: 109 examples [00:23,  5.93 examples/s][A
Generating test examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 104.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 106.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 110.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 111.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 112.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 110.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.57 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:28, 28.05s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.19s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0.incompleteGGEKDH/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub8/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 8
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub8/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub9/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.76s/ examples][A
Generating train examples...: 7 examples [00:06,  1.33 examples/s][A
Generating train examples...: 13 examples [00:07,  2.35 examples/s][A
Generating train examples...: 19 examples [00:08,  3.21 examples/s][A
Generating train examples...: 25 examples [00:09,  3.91 examples/s][A
Generating train examples...: 31 examples [00:10,  4.45 examples/s][A
Generating train examples...: 37 examples [00:11,  4.87 examples/s][A
Generating train examples...: 43 examples [00:12,  5.18 examples/s][A
Generating train examples...: 49 examples [00:13,  5.40 examples/s][A
Generating train examples...: 55 examples [00:14,  5.55 examples/s][A
Generating train examples...: 61 examples [00:15,  5.67 examples/s][A
Generating train examples...: 67 examples [00:16,  5.76 examples/s][A
Generating train examples...: 73 examples [00:17,  5.82 examples/s][A
Generating train examples...: 79 examples [00:18,  5.85 examples/s][A
Generating train examples...: 85 examples [00:19,  5.89 examples/s][A
Generating train examples...: 91 examples [00:20,  5.91 examples/s][A
Generating train examples...: 97 examples [00:21,  5.92 examples/s][A
Generating train examples...: 103 examples [00:22,  5.93 examples/s][A
Generating train examples...: 109 examples [00:23,  5.94 examples/s][A
Generating train examples...: 115 examples [00:24,  5.95 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 107.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 106.71 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 99.09 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 100.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 98.02 examples/s] [A
                                                                                                                                                                                                        [A                                                                Generating splits...:   0%|          | 0/2 [00:26<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.01s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.48s/ examples][A
Generating test examples...: 7 examples [00:06,  1.38 examples/s][A
Generating test examples...: 13 examples [00:07,  2.43 examples/s][A
Generating test examples...: 19 examples [00:08,  3.29 examples/s][A
Generating test examples...: 25 examples [00:09,  3.99 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.92 examples/s][A
Generating test examples...: 43 examples [00:12,  5.21 examples/s][A
Generating test examples...: 49 examples [00:13,  5.43 examples/s][A
Generating test examples...: 55 examples [00:14,  5.59 examples/s][A
Generating test examples...: 61 examples [00:15,  5.70 examples/s][A
Generating test examples...: 67 examples [00:16,  5.77 examples/s][A
Generating test examples...: 73 examples [00:17,  5.82 examples/s][A
Generating test examples...: 79 examples [00:18,  5.85 examples/s][A
Generating test examples...: 85 examples [00:19,  5.87 examples/s][A
Generating test examples...: 91 examples [00:20,  5.89 examples/s][A
Generating test examples...: 97 examples [00:21,  5.91 examples/s][A
Generating test examples...: 103 examples [00:22,  5.92 examples/s][A
Generating test examples...: 109 examples [00:23,  5.93 examples/s][A
Generating test examples...: 115 examples [00:24,  5.95 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 107.16 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 108.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 107.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 106.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 106.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 107.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 108.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 108.78 examples/s][A
                                                                                                                                                                                                        [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:27, 27.01s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.81s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0.incomplete95U3TM/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub9/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 9
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub9/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub10/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.94s/ examples][A
Generating train examples...: 7 examples [00:07,  1.14 examples/s][A
Generating train examples...: 13 examples [00:08,  2.09 examples/s][A
Generating train examples...: 19 examples [00:09,  2.94 examples/s][A
Generating train examples...: 25 examples [00:10,  3.66 examples/s][A
Generating train examples...: 31 examples [00:11,  4.25 examples/s][A
Generating train examples...: 37 examples [00:12,  4.71 examples/s][A
Generating train examples...: 43 examples [00:13,  5.04 examples/s][A
Generating train examples...: 49 examples [00:15,  5.28 examples/s][A
Generating train examples...: 55 examples [00:16,  5.47 examples/s][A
Generating train examples...: 61 examples [00:17,  5.59 examples/s][A
Generating train examples...: 67 examples [00:18,  5.70 examples/s][A
Generating train examples...: 73 examples [00:19,  5.78 examples/s][A
Generating train examples...: 79 examples [00:20,  5.83 examples/s][A
Generating train examples...: 85 examples [00:21,  5.86 examples/s][A
Generating train examples...: 91 examples [00:22,  5.89 examples/s][A
Generating train examples...: 97 examples [00:23,  5.91 examples/s][A
Generating train examples...: 103 examples [00:24,  5.92 examples/s][A
Generating train examples...: 109 examples [00:25,  5.94 examples/s][A
Generating train examples...: 115 examples [00:26,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 99.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 88.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 86.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 88.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 89.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 90.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 92.23 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:28<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:28<00:28, 28.32s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.51s/ examples][A
Generating test examples...: 7 examples [00:06,  1.38 examples/s][A
Generating test examples...: 13 examples [00:07,  2.42 examples/s][A
Generating test examples...: 19 examples [00:08,  3.29 examples/s][A
Generating test examples...: 25 examples [00:09,  3.99 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.92 examples/s][A
Generating test examples...: 43 examples [00:12,  5.22 examples/s][A
Generating test examples...: 49 examples [00:13,  5.43 examples/s][A
Generating test examples...: 55 examples [00:14,  5.58 examples/s][A
Generating test examples...: 61 examples [00:15,  5.68 examples/s][A
Generating test examples...: 67 examples [00:16,  5.76 examples/s][A
Generating test examples...: 73 examples [00:17,  5.82 examples/s][A
Generating test examples...: 79 examples [00:18,  5.86 examples/s][A
Generating test examples...: 85 examples [00:19,  5.88 examples/s][A
Generating test examples...: 91 examples [00:20,  5.90 examples/s][A
Generating test examples...: 97 examples [00:21,  5.92 examples/s][A
Generating test examples...: 103 examples [00:22,  5.92 examples/s][A
Generating test examples...: 109 examples [00:23,  5.93 examples/s][A
Generating test examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 95.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 103.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 103.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 104.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 106.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 108.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 109.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 111.50 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:28, 28.32s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.35s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0.incompleteUVJGG9/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub10/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 10
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub10/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub11/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.81s/ examples][A
Generating train examples...: 7 examples [00:06,  1.32 examples/s][A
Generating train examples...: 13 examples [00:07,  2.35 examples/s][A
Generating train examples...: 19 examples [00:08,  3.22 examples/s][A
Generating train examples...: 25 examples [00:09,  3.92 examples/s][A
Generating train examples...: 31 examples [00:10,  4.47 examples/s][A
Generating train examples...: 37 examples [00:11,  4.88 examples/s][A
Generating train examples...: 43 examples [00:12,  5.18 examples/s][A
Generating train examples...: 49 examples [00:13,  5.39 examples/s][A
Generating train examples...: 55 examples [00:14,  5.56 examples/s][A
Generating train examples...: 61 examples [00:15,  5.68 examples/s][A
Generating train examples...: 67 examples [00:16,  5.76 examples/s][A
Generating train examples...: 73 examples [00:17,  5.82 examples/s][A
Generating train examples...: 79 examples [00:18,  5.86 examples/s][A
Generating train examples...: 85 examples [00:19,  5.90 examples/s][A
Generating train examples...: 91 examples [00:20,  5.92 examples/s][A
Generating train examples...: 97 examples [00:21,  5.93 examples/s][A
Generating train examples...: 103 examples [00:22,  5.94 examples/s][A
Generating train examples...: 109 examples [00:23,  5.94 examples/s][A
Generating train examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 105.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 106.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 106.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 105.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 108.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 109.04 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:26<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:26<00:26, 26.95s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.56s/ examples][A
Generating test examples...: 7 examples [00:06,  1.37 examples/s][A
Generating test examples...: 13 examples [00:07,  2.41 examples/s][A
Generating test examples...: 19 examples [00:08,  3.28 examples/s][A
Generating test examples...: 25 examples [00:09,  3.97 examples/s][A
Generating test examples...: 31 examples [00:10,  4.49 examples/s][A
Generating test examples...: 37 examples [00:11,  4.90 examples/s][A
Generating test examples...: 43 examples [00:12,  5.19 examples/s][A
Generating test examples...: 49 examples [00:13,  5.41 examples/s][A
Generating test examples...: 55 examples [00:14,  5.56 examples/s][A
Generating test examples...: 61 examples [00:15,  5.67 examples/s][A
Generating test examples...: 67 examples [00:16,  5.75 examples/s][A
Generating test examples...: 73 examples [00:17,  5.81 examples/s][A
Generating test examples...: 79 examples [00:18,  5.84 examples/s][A
Generating test examples...: 85 examples [00:19,  5.87 examples/s][A
Generating test examples...: 91 examples [00:20,  5.90 examples/s][A
Generating test examples...: 97 examples [00:21,  5.92 examples/s][A
Generating test examples...: 103 examples [00:22,  5.92 examples/s][A
Generating test examples...: 109 examples [00:23,  5.93 examples/s][A
Generating test examples...: 115 examples [00:24,  5.93 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 99.93 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 98.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 98.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 98.18 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 99.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 99.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 101.41 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:26, 26.95s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.90s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0.incomplete9KGGHE/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub11/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 11
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub11/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub12/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.28s/ examples][A
Generating train examples...: 7 examples [00:07,  1.24 examples/s][A
Generating train examples...: 13 examples [00:08,  2.23 examples/s][A
Generating train examples...: 19 examples [00:09,  3.10 examples/s][A
Generating train examples...: 25 examples [00:10,  3.81 examples/s][A
Generating train examples...: 31 examples [00:11,  4.38 examples/s][A
Generating train examples...: 37 examples [00:12,  4.81 examples/s][A
Generating train examples...: 43 examples [00:13,  5.14 examples/s][A
Generating train examples...: 49 examples [00:14,  5.37 examples/s][A
Generating train examples...: 55 examples [00:15,  5.54 examples/s][A
Generating train examples...: 61 examples [00:16,  5.67 examples/s][A
Generating train examples...: 67 examples [00:17,  5.75 examples/s][A
Generating train examples...: 73 examples [00:18,  5.81 examples/s][A
Generating train examples...: 79 examples [00:19,  5.86 examples/s][A
Generating train examples...: 85 examples [00:20,  5.89 examples/s][A
Generating train examples...: 91 examples [00:21,  5.92 examples/s][A
Generating train examples...: 97 examples [00:22,  5.93 examples/s][A
Generating train examples...: 103 examples [00:23,  5.94 examples/s][A
Generating train examples...: 109 examples [00:24,  5.95 examples/s][A
Generating train examples...: 115 examples [00:25,  5.96 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 103.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 105.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 101.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 99.06 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 100.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 103.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 106.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 107.58 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.42s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:06,  6.01s/ examples][A
Generating test examples...: 7 examples [00:07,  1.28 examples/s][A
Generating test examples...: 13 examples [00:08,  2.30 examples/s][A
Generating test examples...: 19 examples [00:09,  3.16 examples/s][A
Generating test examples...: 25 examples [00:10,  3.86 examples/s][A
Generating test examples...: 31 examples [00:11,  4.42 examples/s][A
Generating test examples...: 37 examples [00:12,  4.85 examples/s][A
Generating test examples...: 43 examples [00:13,  5.16 examples/s][A
Generating test examples...: 49 examples [00:14,  5.38 examples/s][A
Generating test examples...: 55 examples [00:15,  5.54 examples/s][A
Generating test examples...: 61 examples [00:16,  5.65 examples/s][A
Generating test examples...: 67 examples [00:17,  5.73 examples/s][A
Generating test examples...: 73 examples [00:18,  5.78 examples/s][A
Generating test examples...: 79 examples [00:19,  5.83 examples/s][A
Generating test examples...: 85 examples [00:20,  5.87 examples/s][A
Generating test examples...: 91 examples [00:21,  5.90 examples/s][A
Generating test examples...: 97 examples [00:22,  5.92 examples/s][A
Generating test examples...: 103 examples [00:23,  5.94 examples/s][A
Generating test examples...: 109 examples [00:24,  5.95 examples/s][A
Generating test examples...: 115 examples [00:25,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 111.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 110.96 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 113.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 114.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 115.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 112.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 111.73 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.42s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.26s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0.incompleteWXXONL/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub12/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 12
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub12/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub13/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.67s/ examples][A
Generating train examples...: 7 examples [00:06,  1.35 examples/s][A
Generating train examples...: 13 examples [00:07,  2.38 examples/s][A
Generating train examples...: 19 examples [00:08,  3.25 examples/s][A
Generating train examples...: 25 examples [00:09,  3.95 examples/s][A
Generating train examples...: 31 examples [00:10,  4.49 examples/s][A
Generating train examples...: 37 examples [00:11,  4.90 examples/s][A
Generating train examples...: 43 examples [00:12,  5.20 examples/s][A
Generating train examples...: 49 examples [00:13,  5.41 examples/s][A
Generating train examples...: 55 examples [00:14,  5.56 examples/s][A
Generating train examples...: 61 examples [00:15,  5.67 examples/s][A
Generating train examples...: 67 examples [00:16,  5.75 examples/s][A
Generating train examples...: 73 examples [00:17,  5.80 examples/s][A
Generating train examples...: 79 examples [00:18,  5.84 examples/s][A
Generating train examples...: 85 examples [00:19,  5.86 examples/s][A
Generating train examples...: 91 examples [00:20,  5.88 examples/s][A
Generating train examples...: 97 examples [00:21,  5.90 examples/s][A
Generating train examples...: 103 examples [00:22,  5.92 examples/s][A
Generating train examples...: 109 examples [00:23,  5.93 examples/s][A
Generating train examples...: 115 examples [00:24,  5.93 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 102.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 100.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 99.36 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 99.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 98.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 98.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 95.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 96.94 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:26<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:26<00:26, 26.97s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.46s/ examples][A
Generating test examples...: 7 examples [00:06,  1.39 examples/s][A
Generating test examples...: 13 examples [00:07,  2.44 examples/s][A
Generating test examples...: 19 examples [00:08,  3.31 examples/s][A
Generating test examples...: 25 examples [00:09,  3.99 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.91 examples/s][A
Generating test examples...: 43 examples [00:12,  5.20 examples/s][A
Generating test examples...: 49 examples [00:13,  5.40 examples/s][A
Generating test examples...: 55 examples [00:14,  5.56 examples/s][A
Generating test examples...: 61 examples [00:15,  5.66 examples/s][A
Generating test examples...: 67 examples [00:16,  5.74 examples/s][A
Generating test examples...: 73 examples [00:17,  5.79 examples/s][A
Generating test examples...: 79 examples [00:18,  5.83 examples/s][A
Generating test examples...: 85 examples [00:19,  5.87 examples/s][A
Generating test examples...: 91 examples [00:20,  5.90 examples/s][A
Generating test examples...: 97 examples [00:21,  5.92 examples/s][A
Generating test examples...: 103 examples [00:22,  5.93 examples/s][A
Generating test examples...: 109 examples [00:23,  5.94 examples/s][A
Generating test examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 112.95 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 115.95 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 98.82 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 97.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 102.71 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 106.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 108.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.71 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:26, 26.97s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.80s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0.incompleteTUFEOR/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub13/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 13
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub13/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub14/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.07s/ examples][A
Generating train examples...: 7 examples [00:07,  1.27 examples/s][A
Generating train examples...: 13 examples [00:08,  2.28 examples/s][A
Generating train examples...: 19 examples [00:09,  3.15 examples/s][A
Generating train examples...: 25 examples [00:10,  3.86 examples/s][A
Generating train examples...: 31 examples [00:11,  4.42 examples/s][A
Generating train examples...: 37 examples [00:12,  4.84 examples/s][A
Generating train examples...: 43 examples [00:13,  5.16 examples/s][A
Generating train examples...: 49 examples [00:14,  5.39 examples/s][A
Generating train examples...: 55 examples [00:15,  5.56 examples/s][A
Generating train examples...: 61 examples [00:16,  5.68 examples/s][A
Generating train examples...: 67 examples [00:17,  5.77 examples/s][A
Generating train examples...: 73 examples [00:18,  5.83 examples/s][A
Generating train examples...: 79 examples [00:19,  5.88 examples/s][A
Generating train examples...: 85 examples [00:20,  5.91 examples/s][A
Generating train examples...: 91 examples [00:21,  5.93 examples/s][A
Generating train examples...: 97 examples [00:22,  5.94 examples/s][A
Generating train examples...: 103 examples [00:23,  5.96 examples/s][A
Generating train examples...: 109 examples [00:24,  5.96 examples/s][A
Generating train examples...: 115 examples [00:25,  5.96 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 104.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 108.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 109.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 110.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 110.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 110.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 107.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 108.87 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.15s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.54s/ examples][A
Generating test examples...: 7 examples [00:06,  1.37 examples/s][A
Generating test examples...: 13 examples [00:07,  2.42 examples/s][A
Generating test examples...: 19 examples [00:08,  3.29 examples/s][A
Generating test examples...: 25 examples [00:09,  3.98 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.92 examples/s][A
Generating test examples...: 43 examples [00:12,  5.22 examples/s][A
Generating test examples...: 49 examples [00:13,  5.44 examples/s][A
Generating test examples...: 55 examples [00:14,  5.59 examples/s][A
Generating test examples...: 61 examples [00:15,  5.71 examples/s][A
Generating test examples...: 67 examples [00:16,  5.78 examples/s][A
Generating test examples...: 73 examples [00:17,  5.83 examples/s][A
Generating test examples...: 79 examples [00:18,  5.86 examples/s][A
Generating test examples...: 85 examples [00:19,  5.88 examples/s][A
Generating test examples...: 91 examples [00:20,  5.90 examples/s][A
Generating test examples...: 97 examples [00:21,  5.92 examples/s][A
Generating test examples...: 103 examples [00:22,  5.91 examples/s][A
Generating test examples...: 109 examples [00:23,  5.93 examples/s][A
Generating test examples...: 115 examples [00:24,  5.94 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 106.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.95 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 81.68 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 87.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 92.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 96.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 101.54 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:27, 27.15s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.95s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0.incompleteTBSB2U/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub14/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 14
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub14/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub15/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.96s/ examples][A
Generating train examples...: 7 examples [00:06,  1.30 examples/s][A
Generating train examples...: 13 examples [00:07,  2.31 examples/s][A
Generating train examples...: 19 examples [00:08,  3.17 examples/s][A
Generating train examples...: 25 examples [00:09,  3.88 examples/s][A
Generating train examples...: 31 examples [00:10,  4.43 examples/s][A
Generating train examples...: 37 examples [00:11,  4.85 examples/s][A
Generating train examples...: 43 examples [00:12,  5.17 examples/s][A
Generating train examples...: 49 examples [00:14,  5.39 examples/s][A
Generating train examples...: 55 examples [00:15,  5.55 examples/s][A
Generating train examples...: 61 examples [00:16,  5.67 examples/s][A
Generating train examples...: 67 examples [00:17,  5.76 examples/s][A
Generating train examples...: 73 examples [00:18,  5.83 examples/s][A
Generating train examples...: 79 examples [00:19,  5.87 examples/s][A
Generating train examples...: 85 examples [00:20,  5.89 examples/s][A
Generating train examples...: 91 examples [00:21,  5.92 examples/s][A
Generating train examples...: 97 examples [00:22,  5.92 examples/s][A
Generating train examples...: 103 examples [00:23,  5.93 examples/s][A
Generating train examples...: 109 examples [00:24,  5.94 examples/s][A
Generating train examples...: 115 examples [00:25,  5.94 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 100.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 91.49 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 95.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 96.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 100.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 103.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 105.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 101.61 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.19s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:06,  6.26s/ examples][A
Generating test examples...: 7 examples [00:07,  1.24 examples/s][A
Generating test examples...: 13 examples [00:08,  2.24 examples/s][A
Generating test examples...: 19 examples [00:09,  3.10 examples/s][A
Generating test examples...: 25 examples [00:10,  3.81 examples/s][A
Generating test examples...: 31 examples [00:11,  4.36 examples/s][A
Generating test examples...: 37 examples [00:12,  4.79 examples/s][A
Generating test examples...: 43 examples [00:13,  5.11 examples/s][A
Generating test examples...: 49 examples [00:14,  5.35 examples/s][A
Generating test examples...: 55 examples [00:15,  5.52 examples/s][A
Generating test examples...: 61 examples [00:16,  5.65 examples/s][A
Generating test examples...: 67 examples [00:17,  5.74 examples/s][A
Generating test examples...: 73 examples [00:18,  5.80 examples/s][A
Generating test examples...: 79 examples [00:19,  5.84 examples/s][A
Generating test examples...: 85 examples [00:20,  5.89 examples/s][A
Generating test examples...: 91 examples [00:21,  5.91 examples/s][A
Generating test examples...: 97 examples [00:22,  5.93 examples/s][A
Generating test examples...: 104 examples [00:23,  5.96 examples/s][A
Generating test examples...: 110 examples [00:24,  5.96 examples/s][A
Generating test examples...: 116 examples [00:25,  5.97 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 111.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 112.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 112.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 108.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 109.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 110.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 112.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 112.52 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.19s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.29s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0.incomplete14IFWB/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub15/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 15
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub15/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub16/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.19s/ examples][A
Generating train examples...: 7 examples [00:07,  1.25 examples/s][A
Generating train examples...: 13 examples [00:08,  2.25 examples/s][A
Generating train examples...: 19 examples [00:09,  3.11 examples/s][A
Generating train examples...: 25 examples [00:10,  3.82 examples/s][A
Generating train examples...: 31 examples [00:11,  4.38 examples/s][A
Generating train examples...: 37 examples [00:12,  4.82 examples/s][A
Generating train examples...: 44 examples [00:13,  5.19 examples/s][A
Generating train examples...: 50 examples [00:14,  5.40 examples/s][A
Generating train examples...: 56 examples [00:15,  5.55 examples/s][A
Generating train examples...: 62 examples [00:16,  5.68 examples/s][A
Generating train examples...: 68 examples [00:17,  5.76 examples/s][A
Generating train examples...: 74 examples [00:18,  5.82 examples/s][A
Generating train examples...: 80 examples [00:19,  5.86 examples/s][A
Generating train examples...: 86 examples [00:20,  5.89 examples/s][A
Generating train examples...: 92 examples [00:21,  5.91 examples/s][A
Generating train examples...: 98 examples [00:22,  5.93 examples/s][A
Generating train examples...: 104 examples [00:23,  5.94 examples/s][A
Generating train examples...: 110 examples [00:24,  5.95 examples/s][A
Generating train examples...: 116 examples [00:25,  5.95 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 108.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 105.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 109.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 110.18 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 110.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 110.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 110.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.63 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.30s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.30s/ examples][A
Generating test examples...: 7 examples [00:06,  1.42 examples/s][A
Generating test examples...: 13 examples [00:07,  2.48 examples/s][A
Generating test examples...: 19 examples [00:08,  3.35 examples/s][A
Generating test examples...: 25 examples [00:09,  4.03 examples/s][A
Generating test examples...: 31 examples [00:10,  4.56 examples/s][A
Generating test examples...: 37 examples [00:11,  4.94 examples/s][A
Generating test examples...: 43 examples [00:12,  5.22 examples/s][A
Generating test examples...: 49 examples [00:13,  5.42 examples/s][A
Generating test examples...: 55 examples [00:14,  5.57 examples/s][A
Generating test examples...: 61 examples [00:15,  5.68 examples/s][A
Generating test examples...: 67 examples [00:16,  5.76 examples/s][A
Generating test examples...: 73 examples [00:17,  5.81 examples/s][A
Generating test examples...: 79 examples [00:18,  5.85 examples/s][A
Generating test examples...: 85 examples [00:19,  5.88 examples/s][A
Generating test examples...: 91 examples [00:20,  5.91 examples/s][A
Generating test examples...: 97 examples [00:21,  5.93 examples/s][A
Generating test examples...: 103 examples [00:22,  5.95 examples/s][A
Generating test examples...: 109 examples [00:23,  5.96 examples/s][A
Generating test examples...: 115 examples [00:24,  5.96 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 100.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 101.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 102.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 99.06 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 100.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 101.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 102.16 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:53<00:27, 27.30s/ splits]Generating splits...: 100%|██████████| 2/2 [00:53<00:00, 26.86s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0.incompleteM7DED4/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub16/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 16
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub16/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub17/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  7.00s/ examples][A
Generating train examples...: 7 examples [00:08,  1.13 examples/s][A
Generating train examples...: 13 examples [00:09,  2.07 examples/s][A
Generating train examples...: 19 examples [00:10,  2.92 examples/s][A
Generating train examples...: 25 examples [00:11,  3.63 examples/s][A
Generating train examples...: 31 examples [00:12,  4.21 examples/s][A
Generating train examples...: 37 examples [00:13,  4.66 examples/s][A
Generating train examples...: 43 examples [00:14,  5.00 examples/s][A
Generating train examples...: 49 examples [00:15,  5.25 examples/s][A
Generating train examples...: 55 examples [00:16,  5.44 examples/s][A
Generating train examples...: 61 examples [00:17,  5.57 examples/s][A
Generating train examples...: 67 examples [00:18,  5.67 examples/s][A
Generating train examples...: 73 examples [00:19,  5.75 examples/s][A
Generating train examples...: 79 examples [00:20,  5.80 examples/s][A
Generating train examples...: 85 examples [00:21,  5.84 examples/s][A
Generating train examples...: 91 examples [00:22,  5.86 examples/s][A
Generating train examples...: 97 examples [00:23,  5.88 examples/s][A
Generating train examples...: 103 examples [00:24,  5.90 examples/s][A
Generating train examples...: 109 examples [00:25,  5.90 examples/s][A
Generating train examples...: 115 examples [00:26,  5.91 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 114.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 110.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 110.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 110.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 111.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 101.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 103.10 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [00:28<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:28<00:28, 28.31s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.56s/ examples][A
Generating test examples...: 7 examples [00:06,  1.37 examples/s][A
Generating test examples...: 13 examples [00:07,  2.41 examples/s][A
Generating test examples...: 19 examples [00:08,  3.28 examples/s][A
Generating test examples...: 25 examples [00:09,  3.97 examples/s][A
Generating test examples...: 31 examples [00:10,  4.51 examples/s][A
Generating test examples...: 37 examples [00:11,  4.91 examples/s][A
Generating test examples...: 43 examples [00:12,  5.21 examples/s][A
Generating test examples...: 49 examples [00:13,  5.43 examples/s][A
Generating test examples...: 55 examples [00:14,  5.59 examples/s][A
Generating test examples...: 61 examples [00:15,  5.70 examples/s][A
Generating test examples...: 67 examples [00:16,  5.78 examples/s][A
Generating test examples...: 73 examples [00:17,  5.83 examples/s][A
Generating test examples...: 79 examples [00:18,  5.87 examples/s][A
Generating test examples...: 85 examples [00:19,  5.90 examples/s][A
Generating test examples...: 91 examples [00:20,  5.92 examples/s][A
Generating test examples...: 97 examples [00:21,  5.93 examples/s][A
Generating test examples...: 103 examples [00:22,  5.94 examples/s][A
Generating test examples...: 109 examples [00:23,  5.95 examples/s][A
Generating test examples...: 115 examples [00:24,  5.95 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 106.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 109.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 111.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 108.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 109.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 109.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 110.44 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:28, 28.31s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.35s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0.incompleteQH68MT/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub17/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 17
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub17/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/sub18/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.36s/ examples][A
Generating train examples...: 7 examples [00:07,  1.23 examples/s][A
Generating train examples...: 13 examples [00:08,  2.22 examples/s][A
Generating train examples...: 19 examples [00:09,  3.08 examples/s][A
Generating train examples...: 25 examples [00:10,  3.79 examples/s][A
Generating train examples...: 31 examples [00:11,  4.35 examples/s][A
Generating train examples...: 37 examples [00:12,  4.78 examples/s][A
Generating train examples...: 43 examples [00:13,  5.11 examples/s][A
Generating train examples...: 49 examples [00:14,  5.35 examples/s][A
Generating train examples...: 55 examples [00:15,  5.52 examples/s][A
Generating train examples...: 61 examples [00:16,  5.64 examples/s][A
Generating train examples...: 67 examples [00:17,  5.73 examples/s][A
Generating train examples...: 73 examples [00:18,  5.80 examples/s][A
Generating train examples...: 79 examples [00:19,  5.84 examples/s][A
Generating train examples...: 85 examples [00:20,  5.87 examples/s][A
Generating train examples...: 91 examples [00:21,  5.89 examples/s][A
Generating train examples...: 97 examples [00:22,  5.90 examples/s][A
Generating train examples...: 103 examples [00:23,  5.91 examples/s][A
Generating train examples...: 109 examples [00:24,  5.92 examples/s][A
Generating train examples...: 115 examples [00:25,  5.93 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 113.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 113.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 112.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 112.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 112.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 112.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 84.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 90.67 examples/s][A
                                                                                                                                                                                                         [A                                                                Generating splits...:   0%|          | 0/2 [00:27<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [00:27<00:27, 27.63s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.70s/ examples][A
Generating test examples...: 8 examples [00:06,  1.50 examples/s][A
Generating test examples...: 15 examples [00:08,  2.60 examples/s][A
Generating test examples...: 21 examples [00:09,  3.38 examples/s][A
Generating test examples...: 27 examples [00:10,  4.03 examples/s][A
Generating test examples...: 33 examples [00:11,  4.53 examples/s][A
Generating test examples...: 39 examples [00:12,  4.93 examples/s][A
Generating test examples...: 45 examples [00:13,  5.22 examples/s][A
Generating test examples...: 51 examples [00:14,  5.44 examples/s][A
Generating test examples...: 57 examples [00:15,  5.59 examples/s][A
Generating test examples...: 63 examples [00:16,  5.71 examples/s][A
Generating test examples...: 69 examples [00:17,  5.79 examples/s][A
Generating test examples...: 75 examples [00:18,  5.84 examples/s][A
Generating test examples...: 81 examples [00:19,  5.88 examples/s][A
Generating test examples...: 87 examples [00:20,  5.89 examples/s][A
Generating test examples...: 93 examples [00:21,  5.91 examples/s][A
Generating test examples...: 99 examples [00:22,  5.93 examples/s][A
Generating test examples...: 105 examples [00:23,  5.94 examples/s][A
Generating test examples...: 111 examples [00:24,  5.95 examples/s][A
Generating test examples...: 117 examples [00:25,  5.96 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 98.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 99.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 99.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 99.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 102.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 103.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 103.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 105.53 examples/s][A
                                                                                                                                                                                                         [A                                                                        Generating splits...:  50%|█████     | 1/2 [00:54<00:27, 27.63s/ splits]Generating splits...: 100%|██████████| 2/2 [00:54<00:00, 27.16s/ splits]                                                                        INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0.incompleteBGF4EY/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/sub18/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, subject 18
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/sub18/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=1.09 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=120, num_shards=8>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.34s/ examples][A
Generating train examples...: 7 examples [00:06,  1.41 examples/s][A
Generating train examples...: 13 examples [00:07,  2.47 examples/s][A
Generating train examples...: 19 examples [00:08,  3.34 examples/s][A
Generating train examples...: 25 examples [00:09,  4.03 examples/s][A
Generating train examples...: 31 examples [00:10,  4.56 examples/s][A
Generating train examples...: 37 examples [00:11,  4.95 examples/s][A
Generating train examples...: 43 examples [00:12,  5.23 examples/s][A
Generating train examples...: 49 examples [00:13,  5.44 examples/s][A
Generating train examples...: 55 examples [00:14,  5.59 examples/s][A
Generating train examples...: 61 examples [00:15,  5.70 examples/s][A
Generating train examples...: 67 examples [00:16,  5.77 examples/s][A
Generating train examples...: 73 examples [00:17,  5.83 examples/s][A
Generating train examples...: 79 examples [00:18,  5.87 examples/s][A
Generating train examples...: 85 examples [00:19,  5.89 examples/s][A
Generating train examples...: 91 examples [00:20,  5.91 examples/s][A
Generating train examples...: 97 examples [00:21,  5.92 examples/s][A
Generating train examples...: 103 examples [00:22,  5.93 examples/s][A
Generating train examples...: 109 examples [00:23,  5.93 examples/s][A
Generating train examples...: 115 examples [00:24,  5.94 examples/s][Acsp shape (120, 64, 1920)
Subject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 121 examples [00:30,  2.34 examples/s][A
Generating train examples...: 127 examples [00:31,  2.87 examples/s][A
Generating train examples...: 133 examples [00:32,  3.40 examples/s][A
Generating train examples...: 139 examples [00:33,  3.90 examples/s][A
Generating train examples...: 145 examples [00:34,  4.36 examples/s][A
Generating train examples...: 151 examples [00:35,  4.74 examples/s][A
Generating train examples...: 157 examples [00:36,  5.06 examples/s][A
Generating train examples...: 163 examples [00:37,  5.30 examples/s][A
Generating train examples...: 169 examples [00:38,  5.48 examples/s][A
Generating train examples...: 175 examples [00:39,  5.63 examples/s][A
Generating train examples...: 181 examples [00:40,  5.73 examples/s][A
Generating train examples...: 187 examples [00:41,  5.80 examples/s][A
Generating train examples...: 193 examples [00:42,  5.86 examples/s][A
Generating train examples...: 199 examples [00:43,  5.89 examples/s][A
Generating train examples...: 205 examples [00:44,  5.91 examples/s][A
Generating train examples...: 211 examples [00:45,  5.93 examples/s][A
Generating train examples...: 217 examples [00:47,  5.12 examples/s][A
Generating train examples...: 223 examples [00:48,  5.34 examples/s][A
Generating train examples...: 229 examples [00:49,  5.51 examples/s][A
Generating train examples...: 235 examples [00:50,  5.63 examples/s][Acsp shape (120, 64, 1920)
Subject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 241 examples [00:57,  2.04 examples/s][A
Generating train examples...: 247 examples [00:58,  2.53 examples/s][A
Generating train examples...: 253 examples [00:59,  3.06 examples/s][A
Generating train examples...: 259 examples [01:00,  3.58 examples/s][A
Generating train examples...: 265 examples [01:01,  4.06 examples/s][A
Generating train examples...: 271 examples [01:02,  4.48 examples/s][A
Generating train examples...: 277 examples [01:03,  4.83 examples/s][A
Generating train examples...: 283 examples [01:04,  5.10 examples/s][A
Generating train examples...: 289 examples [01:05,  5.32 examples/s][A
Generating train examples...: 295 examples [01:06,  5.49 examples/s][A
Generating train examples...: 301 examples [01:07,  5.61 examples/s][A
Generating train examples...: 307 examples [01:08,  5.70 examples/s][A
Generating train examples...: 313 examples [01:09,  5.76 examples/s][A
Generating train examples...: 319 examples [01:10,  5.81 examples/s][A
Generating train examples...: 325 examples [01:11,  5.84 examples/s][A
Generating train examples...: 331 examples [01:12,  5.87 examples/s][A
Generating train examples...: 337 examples [01:13,  5.88 examples/s][A
Generating train examples...: 343 examples [01:14,  5.90 examples/s][A
Generating train examples...: 349 examples [01:15,  5.90 examples/s][A
Generating train examples...: 355 examples [01:16,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 361 examples [01:22,  2.38 examples/s][A
Generating train examples...: 367 examples [01:23,  2.90 examples/s][A
Generating train examples...: 373 examples [01:24,  3.42 examples/s][A
Generating train examples...: 379 examples [01:25,  3.92 examples/s][A
Generating train examples...: 385 examples [01:27,  4.36 examples/s][A
Generating train examples...: 391 examples [01:28,  4.73 examples/s][A
Generating train examples...: 397 examples [01:29,  5.03 examples/s][A
Generating train examples...: 403 examples [01:30,  5.26 examples/s][A
Generating train examples...: 409 examples [01:31,  5.44 examples/s][A
Generating train examples...: 415 examples [01:32,  5.57 examples/s][A
Generating train examples...: 421 examples [01:33,  5.67 examples/s][A
Generating train examples...: 427 examples [01:34,  5.74 examples/s][A
Generating train examples...: 433 examples [01:35,  5.79 examples/s][A
Generating train examples...: 439 examples [01:36,  5.82 examples/s][A
Generating train examples...: 445 examples [01:37,  5.85 examples/s][A
Generating train examples...: 451 examples [01:38,  5.86 examples/s][A
Generating train examples...: 457 examples [01:39,  5.86 examples/s][A
Generating train examples...: 463 examples [01:40,  5.86 examples/s][A
Generating train examples...: 469 examples [01:41,  5.87 examples/s][A
Generating train examples...: 475 examples [01:42,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 481 examples [01:48,  2.27 examples/s][A
Generating train examples...: 487 examples [01:49,  2.78 examples/s][A
Generating train examples...: 493 examples [01:50,  3.31 examples/s][A
Generating train examples...: 499 examples [01:51,  3.81 examples/s][A
Generating train examples...: 505 examples [01:52,  4.27 examples/s][A
Generating train examples...: 511 examples [01:53,  4.66 examples/s][A
Generating train examples...: 517 examples [01:54,  4.98 examples/s][A
Generating train examples...: 523 examples [01:55,  5.23 examples/s][A
Generating train examples...: 529 examples [01:56,  5.42 examples/s][A
Generating train examples...: 535 examples [01:57,  5.56 examples/s][A
Generating train examples...: 541 examples [01:58,  5.66 examples/s][A
Generating train examples...: 547 examples [01:59,  5.74 examples/s][A
Generating train examples...: 553 examples [02:00,  5.79 examples/s][A
Generating train examples...: 559 examples [02:01,  5.83 examples/s][A
Generating train examples...: 565 examples [02:02,  5.86 examples/s][A
Generating train examples...: 571 examples [02:03,  5.89 examples/s][A
Generating train examples...: 577 examples [02:04,  5.90 examples/s][A
Generating train examples...: 583 examples [02:05,  5.91 examples/s][A
Generating train examples...: 589 examples [02:06,  5.91 examples/s][A
Generating train examples...: 595 examples [02:07,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 601 examples [02:14,  2.34 examples/s][A
Generating train examples...: 607 examples [02:15,  2.86 examples/s][A
Generating train examples...: 613 examples [02:16,  3.39 examples/s][A
Generating train examples...: 619 examples [02:17,  3.88 examples/s][A
Generating train examples...: 625 examples [02:18,  4.33 examples/s][A
Generating train examples...: 631 examples [02:19,  4.71 examples/s][A
Generating train examples...: 637 examples [02:20,  5.01 examples/s][A
Generating train examples...: 643 examples [02:21,  5.25 examples/s][A
Generating train examples...: 649 examples [02:22,  5.43 examples/s][A
Generating train examples...: 655 examples [02:23,  5.56 examples/s][A
Generating train examples...: 661 examples [02:24,  5.66 examples/s][A
Generating train examples...: 667 examples [02:25,  5.73 examples/s][A
Generating train examples...: 673 examples [02:26,  5.78 examples/s][A
Generating train examples...: 679 examples [02:27,  5.83 examples/s][A
Generating train examples...: 685 examples [02:28,  5.86 examples/s][A
Generating train examples...: 691 examples [02:29,  5.89 examples/s][A
Generating train examples...: 697 examples [02:30,  5.90 examples/s][A
Generating train examples...: 703 examples [02:31,  5.91 examples/s][A
Generating train examples...: 709 examples [02:32,  5.92 examples/s][A
Generating train examples...: 715 examples [02:33,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 721 examples [02:39,  2.35 examples/s][A
Generating train examples...: 727 examples [02:40,  2.87 examples/s][A
Generating train examples...: 733 examples [02:41,  3.40 examples/s][A
Generating train examples...: 739 examples [02:42,  3.90 examples/s][A
Generating train examples...: 745 examples [02:43,  4.34 examples/s][A
Generating train examples...: 751 examples [02:44,  4.72 examples/s][A
Generating train examples...: 757 examples [02:45,  5.02 examples/s][A
Generating train examples...: 763 examples [02:46,  5.25 examples/s][A
Generating train examples...: 769 examples [02:47,  5.43 examples/s][A
Generating train examples...: 775 examples [02:48,  5.57 examples/s][A
Generating train examples...: 781 examples [02:49,  5.67 examples/s][A
Generating train examples...: 787 examples [02:50,  5.73 examples/s][A
Generating train examples...: 793 examples [02:51,  5.79 examples/s][A
Generating train examples...: 799 examples [02:52,  5.82 examples/s][A
Generating train examples...: 805 examples [02:53,  5.85 examples/s][A
Generating train examples...: 811 examples [02:54,  5.86 examples/s][A
Generating train examples...: 817 examples [02:55,  5.88 examples/s][A
Generating train examples...: 823 examples [02:56,  5.89 examples/s][A
Generating train examples...: 829 examples [02:57,  5.90 examples/s][A
Generating train examples...: 835 examples [02:58,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 841 examples [03:05,  2.29 examples/s][A
Generating train examples...: 847 examples [03:06,  2.81 examples/s][A
Generating train examples...: 853 examples [03:07,  3.33 examples/s][A
Generating train examples...: 859 examples [03:08,  3.84 examples/s][A
Generating train examples...: 865 examples [03:09,  4.29 examples/s][A
Generating train examples...: 871 examples [03:10,  4.68 examples/s][A
Generating train examples...: 877 examples [03:11,  4.99 examples/s][A
Generating train examples...: 883 examples [03:12,  5.23 examples/s][A
Generating train examples...: 889 examples [03:13,  5.42 examples/s][A
Generating train examples...: 895 examples [03:14,  5.57 examples/s][A
Generating train examples...: 901 examples [03:15,  5.66 examples/s][A
Generating train examples...: 907 examples [03:16,  5.74 examples/s][A
Generating train examples...: 913 examples [03:17,  5.80 examples/s][A
Generating train examples...: 919 examples [03:18,  5.84 examples/s][A
Generating train examples...: 925 examples [03:19,  5.87 examples/s][A
Generating train examples...: 931 examples [03:20,  5.88 examples/s][A
Generating train examples...: 937 examples [03:21,  5.90 examples/s][A
Generating train examples...: 943 examples [03:22,  5.91 examples/s][A
Generating train examples...: 949 examples [03:23,  5.92 examples/s][A
Generating train examples...: 955 examples [03:24,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 961 examples [03:30,  2.32 examples/s][A
Generating train examples...: 967 examples [03:31,  2.83 examples/s][A
Generating train examples...: 973 examples [03:32,  3.36 examples/s][A
Generating train examples...: 979 examples [03:33,  3.86 examples/s][A
Generating train examples...: 985 examples [03:34,  4.30 examples/s][A
Generating train examples...: 991 examples [03:35,  4.69 examples/s][A
Generating train examples...: 997 examples [03:36,  5.00 examples/s][A
Generating train examples...: 1003 examples [03:37,  5.24 examples/s][A
Generating train examples...: 1009 examples [03:38,  5.42 examples/s][A
Generating train examples...: 1015 examples [03:39,  5.56 examples/s][A
Generating train examples...: 1021 examples [03:40,  5.67 examples/s][A
Generating train examples...: 1027 examples [03:41,  5.74 examples/s][A
Generating train examples...: 1033 examples [03:42,  5.80 examples/s][A
Generating train examples...: 1039 examples [03:43,  5.84 examples/s][A
Generating train examples...: 1045 examples [03:44,  5.87 examples/s][A
Generating train examples...: 1051 examples [03:45,  5.88 examples/s][A
Generating train examples...: 1057 examples [03:46,  5.90 examples/s][A
Generating train examples...: 1063 examples [03:47,  5.90 examples/s][A
Generating train examples...: 1069 examples [03:48,  5.91 examples/s][A
Generating train examples...: 1075 examples [03:49,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1081 examples [03:56,  2.27 examples/s][A
Generating train examples...: 1087 examples [03:57,  2.79 examples/s][A
Generating train examples...: 1093 examples [03:58,  3.31 examples/s][A
Generating train examples...: 1099 examples [03:59,  3.82 examples/s][A
Generating train examples...: 1105 examples [04:00,  4.27 examples/s][A
Generating train examples...: 1111 examples [04:01,  4.66 examples/s][A
Generating train examples...: 1117 examples [04:02,  4.97 examples/s][A
Generating train examples...: 1123 examples [04:03,  5.22 examples/s][A
Generating train examples...: 1129 examples [04:04,  5.42 examples/s][A
Generating train examples...: 1135 examples [04:05,  5.55 examples/s][A
Generating train examples...: 1141 examples [04:06,  5.66 examples/s][A
Generating train examples...: 1147 examples [04:07,  5.73 examples/s][A
Generating train examples...: 1153 examples [04:08,  5.77 examples/s][A
Generating train examples...: 1159 examples [04:09,  5.81 examples/s][A
Generating train examples...: 1165 examples [04:10,  5.85 examples/s][A
Generating train examples...: 1171 examples [04:11,  5.88 examples/s][A
Generating train examples...: 1177 examples [04:12,  5.89 examples/s][A
Generating train examples...: 1183 examples [04:13,  5.90 examples/s][A
Generating train examples...: 1189 examples [04:14,  5.90 examples/s][A
Generating train examples...: 1195 examples [04:15,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1201 examples [04:22,  2.28 examples/s][A
Generating train examples...: 1207 examples [04:23,  2.80 examples/s][A
Generating train examples...: 1213 examples [04:24,  3.33 examples/s][A
Generating train examples...: 1219 examples [04:25,  3.83 examples/s][A
Generating train examples...: 1225 examples [04:26,  4.29 examples/s][A
Generating train examples...: 1231 examples [04:27,  4.67 examples/s][A
Generating train examples...: 1237 examples [04:28,  4.99 examples/s][A
Generating train examples...: 1243 examples [04:29,  5.24 examples/s][A
Generating train examples...: 1249 examples [04:30,  5.43 examples/s][A
Generating train examples...: 1255 examples [04:31,  5.57 examples/s][A
Generating train examples...: 1261 examples [04:32,  5.66 examples/s][A
Generating train examples...: 1267 examples [04:33,  5.73 examples/s][A
Generating train examples...: 1273 examples [04:34,  5.78 examples/s][A
Generating train examples...: 1279 examples [04:35,  5.81 examples/s][A
Generating train examples...: 1285 examples [04:36,  5.84 examples/s][A
Generating train examples...: 1291 examples [04:37,  5.85 examples/s][A
Generating train examples...: 1297 examples [04:38,  5.86 examples/s][A
Generating train examples...: 1303 examples [04:39,  5.88 examples/s][A
Generating train examples...: 1309 examples [04:40,  5.90 examples/s][A
Generating train examples...: 1315 examples [04:41,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1321 examples [04:48,  2.20 examples/s][A
Generating train examples...: 1327 examples [04:49,  2.71 examples/s][A
Generating train examples...: 1333 examples [04:50,  3.24 examples/s][A
Generating train examples...: 1339 examples [04:51,  3.74 examples/s][A
Generating train examples...: 1345 examples [04:52,  4.20 examples/s][A
Generating train examples...: 1351 examples [04:53,  4.59 examples/s][A
Generating train examples...: 1357 examples [04:54,  4.91 examples/s][A
Generating train examples...: 1363 examples [04:55,  5.16 examples/s][A
Generating train examples...: 1369 examples [04:56,  5.36 examples/s][A
Generating train examples...: 1375 examples [04:57,  5.50 examples/s][A
Generating train examples...: 1381 examples [04:58,  5.62 examples/s][A
Generating train examples...: 1387 examples [04:59,  5.70 examples/s][A
Generating train examples...: 1393 examples [05:00,  5.75 examples/s][A
Generating train examples...: 1399 examples [05:01,  5.79 examples/s][A
Generating train examples...: 1405 examples [05:02,  5.83 examples/s][A
Generating train examples...: 1411 examples [05:03,  5.85 examples/s][A
Generating train examples...: 1417 examples [05:04,  5.86 examples/s][A
Generating train examples...: 1423 examples [05:05,  5.88 examples/s][A
Generating train examples...: 1429 examples [05:06,  5.89 examples/s][A
Generating train examples...: 1435 examples [05:07,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1441 examples [05:13,  2.27 examples/s][A
Generating train examples...: 1447 examples [05:14,  2.79 examples/s][A
Generating train examples...: 1453 examples [05:15,  3.31 examples/s][A
Generating train examples...: 1459 examples [05:16,  3.82 examples/s][A
Generating train examples...: 1465 examples [05:17,  4.27 examples/s][A
Generating train examples...: 1471 examples [05:18,  4.66 examples/s][A
Generating train examples...: 1477 examples [05:19,  4.98 examples/s][A
Generating train examples...: 1483 examples [05:20,  5.22 examples/s][A
Generating train examples...: 1489 examples [05:21,  5.41 examples/s][A
Generating train examples...: 1495 examples [05:22,  5.55 examples/s][A
Generating train examples...: 1501 examples [05:23,  5.65 examples/s][A
Generating train examples...: 1507 examples [05:24,  5.73 examples/s][A
Generating train examples...: 1513 examples [05:25,  5.79 examples/s][A
Generating train examples...: 1519 examples [05:27,  5.82 examples/s][A
Generating train examples...: 1525 examples [05:28,  5.84 examples/s][A
Generating train examples...: 1531 examples [05:29,  5.86 examples/s][A
Generating train examples...: 1537 examples [05:30,  5.88 examples/s][A
Generating train examples...: 1543 examples [05:31,  5.90 examples/s][A
Generating train examples...: 1549 examples [05:32,  5.91 examples/s][A
Generating train examples...: 1555 examples [05:33,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1561 examples [05:39,  2.32 examples/s][A
Generating train examples...: 1567 examples [05:40,  2.84 examples/s][A
Generating train examples...: 1573 examples [05:41,  3.36 examples/s][A
Generating train examples...: 1579 examples [05:42,  3.86 examples/s][A
Generating train examples...: 1585 examples [05:43,  4.30 examples/s][A
Generating train examples...: 1591 examples [05:44,  4.68 examples/s][A
Generating train examples...: 1597 examples [05:45,  4.99 examples/s][A
Generating train examples...: 1603 examples [05:46,  5.23 examples/s][A
Generating train examples...: 1609 examples [05:47,  5.42 examples/s][A
Generating train examples...: 1615 examples [05:48,  5.55 examples/s][A
Generating train examples...: 1621 examples [05:49,  5.65 examples/s][A
Generating train examples...: 1627 examples [05:50,  5.71 examples/s][A
Generating train examples...: 1633 examples [05:51,  5.77 examples/s][A
Generating train examples...: 1639 examples [05:52,  5.81 examples/s][A
Generating train examples...: 1645 examples [05:53,  5.83 examples/s][A
Generating train examples...: 1651 examples [05:54,  5.85 examples/s][A
Generating train examples...: 1657 examples [05:55,  5.86 examples/s][A
Generating train examples...: 1663 examples [05:56,  5.87 examples/s][A
Generating train examples...: 1669 examples [05:57,  5.88 examples/s][A
Generating train examples...: 1675 examples [05:58,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1681 examples [06:05,  2.25 examples/s][A
Generating train examples...: 1687 examples [06:06,  2.77 examples/s][A
Generating train examples...: 1693 examples [06:07,  3.30 examples/s][A
Generating train examples...: 1699 examples [06:08,  3.80 examples/s][A
Generating train examples...: 1705 examples [06:09,  4.24 examples/s][A
Generating train examples...: 1711 examples [06:10,  4.64 examples/s][A
Generating train examples...: 1717 examples [06:11,  4.97 examples/s][A
Generating train examples...: 1723 examples [06:12,  5.22 examples/s][A
Generating train examples...: 1729 examples [06:13,  5.41 examples/s][A
Generating train examples...: 1735 examples [06:14,  5.56 examples/s][A
Generating train examples...: 1741 examples [06:15,  5.65 examples/s][A
Generating train examples...: 1747 examples [06:16,  5.73 examples/s][A
Generating train examples...: 1753 examples [06:17,  5.78 examples/s][A
Generating train examples...: 1759 examples [06:18,  5.81 examples/s][A
Generating train examples...: 1765 examples [06:19,  5.84 examples/s][A
Generating train examples...: 1771 examples [06:20,  5.87 examples/s][A
Generating train examples...: 1777 examples [06:21,  5.88 examples/s][A
Generating train examples...: 1783 examples [06:22,  5.89 examples/s][A
Generating train examples...: 1789 examples [06:23,  5.90 examples/s][A
Generating train examples...: 1795 examples [06:24,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1801 examples [06:30,  2.39 examples/s][A
Generating train examples...: 1807 examples [06:31,  2.91 examples/s][A
Generating train examples...: 1813 examples [06:32,  3.43 examples/s][A
Generating train examples...: 1819 examples [06:33,  3.92 examples/s][A
Generating train examples...: 1825 examples [06:34,  4.35 examples/s][A
Generating train examples...: 1831 examples [06:35,  4.73 examples/s][A
Generating train examples...: 1837 examples [06:36,  5.04 examples/s][A
Generating train examples...: 1843 examples [06:37,  5.28 examples/s][A
Generating train examples...: 1849 examples [06:38,  5.45 examples/s][A
Generating train examples...: 1855 examples [06:39,  5.59 examples/s][A
Generating train examples...: 1861 examples [06:40,  5.68 examples/s][A
Generating train examples...: 1867 examples [06:41,  5.74 examples/s][A
Generating train examples...: 1873 examples [06:42,  5.79 examples/s][A
Generating train examples...: 1879 examples [06:43,  5.83 examples/s][A
Generating train examples...: 1885 examples [06:44,  5.85 examples/s][A
Generating train examples...: 1891 examples [06:45,  5.86 examples/s][A
Generating train examples...: 1897 examples [06:46,  5.87 examples/s][A
Generating train examples...: 1903 examples [06:47,  5.88 examples/s][A
Generating train examples...: 1909 examples [06:48,  5.88 examples/s][A
Generating train examples...: 1915 examples [06:49,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1921 examples [06:56,  2.24 examples/s][A
Generating train examples...: 1927 examples [06:57,  2.75 examples/s][A
Generating train examples...: 1933 examples [06:58,  3.27 examples/s][A
Generating train examples...: 1939 examples [06:59,  3.78 examples/s][A
Generating train examples...: 1945 examples [07:00,  4.24 examples/s][A
Generating train examples...: 1951 examples [07:01,  4.64 examples/s][A
Generating train examples...: 1957 examples [07:02,  4.96 examples/s][A
Generating train examples...: 1963 examples [07:03,  5.21 examples/s][A
Generating train examples...: 1969 examples [07:04,  5.41 examples/s][A
Generating train examples...: 1975 examples [07:05,  5.56 examples/s][A
Generating train examples...: 1981 examples [07:06,  5.66 examples/s][A
Generating train examples...: 1987 examples [07:07,  5.73 examples/s][A
Generating train examples...: 1993 examples [07:08,  5.79 examples/s][A
Generating train examples...: 1999 examples [07:09,  5.83 examples/s][A
Generating train examples...: 2005 examples [07:10,  5.86 examples/s][A
Generating train examples...: 2011 examples [07:11,  5.89 examples/s][A
Generating train examples...: 2017 examples [07:12,  5.90 examples/s][A
Generating train examples...: 2023 examples [07:13,  5.91 examples/s][A
Generating train examples...: 2029 examples [07:14,  5.92 examples/s][A
Generating train examples...: 2035 examples [07:15,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 2041 examples [07:22,  2.07 examples/s][A
Generating train examples...: 2047 examples [07:23,  2.58 examples/s][A
Generating train examples...: 2053 examples [07:24,  3.10 examples/s][A
Generating train examples...: 2059 examples [07:25,  3.62 examples/s][A
Generating train examples...: 2065 examples [07:26,  4.09 examples/s][A
Generating train examples...: 2071 examples [07:27,  4.51 examples/s][A
Generating train examples...: 2077 examples [07:28,  4.85 examples/s][A
Generating train examples...: 2083 examples [07:29,  5.13 examples/s][A
Generating train examples...: 2089 examples [07:30,  5.34 examples/s][A
Generating train examples...: 2095 examples [07:31,  5.50 examples/s][A
Generating train examples...: 2101 examples [07:32,  5.62 examples/s][A
Generating train examples...: 2107 examples [07:34,  5.71 examples/s][A
Generating train examples...: 2113 examples [07:35,  5.78 examples/s][A
Generating train examples...: 2119 examples [07:36,  5.83 examples/s][A
Generating train examples...: 2125 examples [07:37,  5.85 examples/s][A
Generating train examples...: 2131 examples [07:38,  5.86 examples/s][A
Generating train examples...: 2137 examples [07:39,  5.87 examples/s][A
Generating train examples...: 2143 examples [07:40,  5.88 examples/s][A
Generating train examples...: 2149 examples [07:41,  5.89 examples/s][A
Generating train examples...: 2155 examples [07:42,  5.89 examples/s][A
                                                                     [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/2160 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 1/2160 [00:55<33:34:06, 55.97s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   1%|          | 17/2160 [00:56<1:24:10,  2.36s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 34/2160 [00:56<34:13,  1.04 examples/s]  [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 51/2160 [00:56<18:32,  1.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   3%|▎         | 68/2160 [00:56<11:14,  3.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   4%|▍         | 84/2160 [00:56<07:24,  4.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▍         | 101/2160 [00:57<04:59,  6.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▌         | 118/2160 [00:57<03:25,  9.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   6%|▋         | 135/2160 [00:57<02:25, 13.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   7%|▋         | 152/2160 [00:57<01:45, 19.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   8%|▊         | 169/2160 [00:57<01:17, 25.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▊         | 186/2160 [00:57<00:59, 33.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▉         | 202/2160 [00:58<00:46, 41.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  10%|█         | 219/2160 [00:58<00:37, 51.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  11%|█         | 236/2160 [00:58<00:31, 61.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▏        | 253/2160 [00:58<00:26, 70.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 270/2160 [00:58<00:23, 78.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  13%|█▎        | 287/2160 [00:58<00:22, 83.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  14%|█▍        | 304/2160 [00:59<00:20, 89.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  15%|█▍        | 321/2160 [00:59<00:19, 93.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▌        | 338/2160 [00:59<00:28, 64.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▋        | 354/2160 [00:59<00:25, 71.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  17%|█▋        | 371/2160 [00:59<00:22, 79.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  18%|█▊        | 388/2160 [01:00<00:20, 85.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  19%|█▉        | 405/2160 [01:00<00:19, 92.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|█▉        | 422/2160 [01:00<00:17, 96.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|██        | 439/2160 [01:00<00:16, 101.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  21%|██        | 456/2160 [01:00<00:16, 103.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  22%|██▏       | 472/2160 [01:00<00:16, 105.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 489/2160 [01:01<00:15, 108.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 506/2160 [01:01<00:15, 106.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  24%|██▍       | 523/2160 [01:01<00:15, 105.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 540/2160 [01:01<00:15, 106.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  26%|██▌       | 557/2160 [01:01<00:14, 108.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 574/2160 [01:01<00:14, 107.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 591/2160 [01:01<00:14, 108.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  28%|██▊       | 608/2160 [01:02<00:13, 110.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  29%|██▉       | 624/2160 [01:02<00:13, 112.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|██▉       | 641/2160 [01:02<00:13, 112.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|███       | 658/2160 [01:02<00:13, 113.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  31%|███▏      | 675/2160 [01:02<00:13, 113.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  32%|███▏      | 692/2160 [01:02<00:12, 113.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  33%|███▎      | 709/2160 [01:02<00:12, 112.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▎      | 726/2160 [01:03<00:12, 114.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▍      | 742/2160 [01:03<00:19, 70.95 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  35%|███▌      | 759/2160 [01:03<00:18, 77.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  36%|███▌      | 776/2160 [01:03<00:16, 83.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  37%|███▋      | 793/2160 [01:04<00:15, 89.93 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 810/2160 [01:04<00:14, 96.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 827/2160 [01:04<00:13, 100.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  39%|███▉      | 844/2160 [01:04<00:12, 102.95 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  40%|███▉      | 861/2160 [01:04<00:12, 105.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████      | 878/2160 [01:04<00:12, 106.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████▏     | 894/2160 [01:04<00:11, 108.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  42%|████▏     | 911/2160 [01:05<00:11, 110.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  43%|████▎     | 928/2160 [01:05<00:11, 111.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  44%|████▍     | 945/2160 [01:05<00:10, 111.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▍     | 962/2160 [01:05<00:10, 112.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▌     | 979/2160 [01:05<00:16, 72.89 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  46%|████▌     | 996/2160 [01:06<00:14, 80.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  47%|████▋     | 1012/2160 [01:06<00:13, 87.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 1029/2160 [01:06<00:12, 93.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 1046/2160 [01:06<00:11, 98.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  49%|████▉     | 1063/2160 [01:06<00:10, 100.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 1080/2160 [01:06<00:10, 103.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  51%|█████     | 1097/2160 [01:07<00:10, 105.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1114/2160 [01:07<00:09, 105.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1131/2160 [01:07<00:09, 107.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  53%|█████▎    | 1148/2160 [01:07<00:09, 109.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  54%|█████▍    | 1164/2160 [01:07<00:09, 110.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▍    | 1181/2160 [01:07<00:09, 108.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▌    | 1198/2160 [01:07<00:08, 110.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  56%|█████▋    | 1215/2160 [01:08<00:08, 111.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  57%|█████▋    | 1232/2160 [01:08<00:08, 108.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  58%|█████▊    | 1249/2160 [01:08<00:08, 106.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▊    | 1266/2160 [01:08<00:08, 99.71 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▉    | 1282/2160 [01:08<00:08, 98.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  60%|██████    | 1299/2160 [01:09<00:08, 98.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  61%|██████    | 1316/2160 [01:09<00:08, 102.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▏   | 1333/2160 [01:09<00:07, 105.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 1350/2160 [01:09<00:07, 107.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  63%|██████▎   | 1367/2160 [01:09<00:07, 109.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  64%|██████▍   | 1384/2160 [01:09<00:07, 110.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  65%|██████▍   | 1401/2160 [01:09<00:06, 108.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▌   | 1418/2160 [01:10<00:06, 110.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▋   | 1434/2160 [01:10<00:06, 111.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  67%|██████▋   | 1451/2160 [01:10<00:06, 108.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  68%|██████▊   | 1468/2160 [01:10<00:06, 103.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  69%|██████▉   | 1485/2160 [01:10<00:06, 105.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|██████▉   | 1502/2160 [01:10<00:06, 105.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|███████   | 1519/2160 [01:11<00:05, 108.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  71%|███████   | 1536/2160 [01:11<00:05, 109.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  72%|███████▏  | 1552/2160 [01:11<00:05, 111.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1569/2160 [01:11<00:05, 112.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1586/2160 [01:11<00:05, 112.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  74%|███████▍  | 1603/2160 [01:11<00:04, 112.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 1620/2160 [01:11<00:04, 110.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  76%|███████▌  | 1637/2160 [01:12<00:04, 112.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1654/2160 [01:12<00:04, 111.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1671/2160 [01:12<00:04, 113.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  78%|███████▊  | 1688/2160 [01:12<00:04, 109.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  79%|███████▉  | 1704/2160 [01:12<00:04, 106.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|███████▉  | 1721/2160 [01:12<00:04, 101.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|████████  | 1738/2160 [01:13<00:04, 101.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  81%|████████▏ | 1755/2160 [01:13<00:03, 103.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  82%|████████▏ | 1772/2160 [01:13<00:03, 104.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  83%|████████▎ | 1789/2160 [01:13<00:03, 106.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▎ | 1806/2160 [01:13<00:03, 109.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▍ | 1822/2160 [01:13<00:03, 106.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  85%|████████▌ | 1839/2160 [01:13<00:02, 107.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  86%|████████▌ | 1856/2160 [01:14<00:02, 109.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  87%|████████▋ | 1873/2160 [01:14<00:02, 111.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1890/2160 [01:14<00:02, 108.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1907/2160 [01:14<00:02, 101.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  89%|████████▉ | 1924/2160 [01:14<00:02, 102.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  90%|████████▉ | 1941/2160 [01:14<00:02, 104.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████ | 1958/2160 [01:15<00:01, 106.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████▏| 1974/2160 [01:15<00:01, 108.57 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  92%|█████████▏| 1991/2160 [01:15<00:01, 110.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  93%|█████████▎| 2008/2160 [01:15<00:01, 112.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  94%|█████████▍| 2025/2160 [01:15<00:01, 112.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▍| 2042/2160 [01:15<00:01, 110.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▌| 2059/2160 [01:15<00:00, 111.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  96%|█████████▌| 2076/2160 [01:16<00:00, 111.71 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  97%|█████████▋| 2092/2160 [01:16<00:00, 112.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2109/2160 [01:16<00:00, 113.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2126/2160 [01:16<00:00, 111.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  99%|█████████▉| 2143/2160 [01:16<00:00, 107.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 2160/2160 [01:16<00:00, 103.50 examples/s][A
                                                                                                                                                                                                          [A                                                                Generating splits...:   0%|          | 0/2 [09:00<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [09:00<09:00, 540.40s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 2160 (shards: [17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.88s/ examples][A
Generating test examples...: 7 examples [00:06,  1.31 examples/s][A
Generating test examples...: 13 examples [00:07,  2.32 examples/s][A
Generating test examples...: 19 examples [00:08,  3.18 examples/s][A
Generating test examples...: 25 examples [00:09,  3.87 examples/s][A
Generating test examples...: 31 examples [00:10,  4.41 examples/s][A
Generating test examples...: 37 examples [00:11,  4.80 examples/s][A
Generating test examples...: 43 examples [00:13,  5.12 examples/s][A
Generating test examples...: 49 examples [00:14,  5.35 examples/s][A
Generating test examples...: 55 examples [00:15,  5.51 examples/s][A
Generating test examples...: 61 examples [00:16,  5.63 examples/s][A
Generating test examples...: 67 examples [00:17,  5.70 examples/s][A
Generating test examples...: 73 examples [00:18,  5.76 examples/s][A
Generating test examples...: 79 examples [00:19,  5.72 examples/s][A
Generating test examples...: 85 examples [00:20,  5.78 examples/s][A
Generating test examples...: 91 examples [00:21,  5.81 examples/s][A
Generating test examples...: 97 examples [00:22,  5.84 examples/s][A
Generating test examples...: 103 examples [00:23,  5.84 examples/s][A
Generating test examples...: 109 examples [00:24,  5.86 examples/s][A
Generating test examples...: 115 examples [00:25,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 121 examples [00:32,  2.03 examples/s][A
Generating test examples...: 127 examples [00:33,  2.53 examples/s][A
Generating test examples...: 133 examples [00:34,  3.06 examples/s][A
Generating test examples...: 139 examples [00:35,  3.58 examples/s][A
Generating test examples...: 145 examples [00:36,  4.07 examples/s][A
Generating test examples...: 151 examples [00:37,  4.50 examples/s][A
Generating test examples...: 157 examples [00:38,  4.86 examples/s][A
Generating test examples...: 163 examples [00:39,  5.15 examples/s][A
Generating test examples...: 169 examples [00:40,  5.37 examples/s][A
Generating test examples...: 175 examples [00:41,  5.53 examples/s][A
Generating test examples...: 181 examples [00:42,  5.66 examples/s][A
Generating test examples...: 187 examples [00:43,  5.75 examples/s][A
Generating test examples...: 193 examples [00:44,  5.81 examples/s][A
Generating test examples...: 199 examples [00:45,  5.86 examples/s][A
Generating test examples...: 205 examples [00:46,  5.89 examples/s][A
Generating test examples...: 211 examples [00:47,  5.92 examples/s][A
Generating test examples...: 217 examples [00:49,  4.94 examples/s][A
Generating test examples...: 223 examples [00:50,  5.21 examples/s][A
Generating test examples...: 229 examples [00:51,  5.41 examples/s][A
Generating test examples...: 235 examples [00:52,  5.56 examples/s][Acsp shape (120, 64, 1920)
Subject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 241 examples [00:59,  2.16 examples/s][A
Generating test examples...: 247 examples [01:00,  2.67 examples/s][A
Generating test examples...: 253 examples [01:01,  3.19 examples/s][A
Generating test examples...: 259 examples [01:02,  3.71 examples/s][A
Generating test examples...: 265 examples [01:03,  4.17 examples/s][A
Generating test examples...: 271 examples [01:04,  4.57 examples/s][A
Generating test examples...: 277 examples [01:05,  4.90 examples/s][A
Generating test examples...: 283 examples [01:06,  5.16 examples/s][A
Generating test examples...: 289 examples [01:07,  5.37 examples/s][A
Generating test examples...: 295 examples [01:08,  5.52 examples/s][A
Generating test examples...: 301 examples [01:09,  5.63 examples/s][A
Generating test examples...: 307 examples [01:10,  5.71 examples/s][A
Generating test examples...: 313 examples [01:11,  5.77 examples/s][A
Generating test examples...: 319 examples [01:12,  5.81 examples/s][A
Generating test examples...: 325 examples [01:13,  5.85 examples/s][A
Generating test examples...: 331 examples [01:14,  5.87 examples/s][A
Generating test examples...: 337 examples [01:15,  5.89 examples/s][A
Generating test examples...: 343 examples [01:16,  5.90 examples/s][A
Generating test examples...: 349 examples [01:17,  5.90 examples/s][A
Generating test examples...: 355 examples [01:18,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 361 examples [01:24,  2.29 examples/s][A
Generating test examples...: 367 examples [01:25,  2.80 examples/s][A
Generating test examples...: 373 examples [01:26,  3.32 examples/s][A
Generating test examples...: 379 examples [01:27,  3.82 examples/s][A
Generating test examples...: 385 examples [01:28,  4.27 examples/s][A
Generating test examples...: 391 examples [01:30,  4.65 examples/s][A
Generating test examples...: 397 examples [01:31,  4.95 examples/s][A
Generating test examples...: 403 examples [01:32,  5.20 examples/s][A
Generating test examples...: 409 examples [01:33,  5.38 examples/s][A
Generating test examples...: 415 examples [01:34,  5.52 examples/s][A
Generating test examples...: 421 examples [01:35,  5.62 examples/s][A
Generating test examples...: 427 examples [01:36,  5.70 examples/s][A
Generating test examples...: 433 examples [01:37,  5.75 examples/s][A
Generating test examples...: 439 examples [01:38,  5.79 examples/s][A
Generating test examples...: 445 examples [01:39,  5.81 examples/s][A
Generating test examples...: 451 examples [01:40,  5.83 examples/s][A
Generating test examples...: 457 examples [01:41,  5.85 examples/s][A
Generating test examples...: 463 examples [01:42,  5.85 examples/s][A
Generating test examples...: 469 examples [01:43,  5.86 examples/s][A
Generating test examples...: 475 examples [01:44,  5.87 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 481 examples [01:50,  2.24 examples/s][A
Generating test examples...: 487 examples [01:51,  2.75 examples/s][A
Generating test examples...: 493 examples [01:52,  3.28 examples/s][A
Generating test examples...: 499 examples [01:53,  3.78 examples/s][A
Generating test examples...: 505 examples [01:54,  4.24 examples/s][A
Generating test examples...: 511 examples [01:55,  4.62 examples/s][A
Generating test examples...: 517 examples [01:56,  4.94 examples/s][A
Generating test examples...: 523 examples [01:57,  5.19 examples/s][A
Generating test examples...: 529 examples [01:59,  5.38 examples/s][A
Generating test examples...: 535 examples [02:00,  5.52 examples/s][A
Generating test examples...: 541 examples [02:01,  5.62 examples/s][A
Generating test examples...: 547 examples [02:02,  5.70 examples/s][A
Generating test examples...: 553 examples [02:03,  5.75 examples/s][A
Generating test examples...: 559 examples [02:04,  5.80 examples/s][A
Generating test examples...: 565 examples [02:05,  5.81 examples/s][A
Generating test examples...: 571 examples [02:06,  5.84 examples/s][A
Generating test examples...: 577 examples [02:07,  5.85 examples/s][A
Generating test examples...: 583 examples [02:08,  5.88 examples/s][A
Generating test examples...: 589 examples [02:09,  5.89 examples/s][A
Generating test examples...: 595 examples [02:10,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 601 examples [02:16,  2.31 examples/s][A
Generating test examples...: 607 examples [02:17,  2.82 examples/s][A
Generating test examples...: 613 examples [02:18,  3.35 examples/s][A
Generating test examples...: 619 examples [02:19,  3.85 examples/s][A
Generating test examples...: 625 examples [02:20,  4.30 examples/s][A
Generating test examples...: 631 examples [02:21,  4.69 examples/s][A
Generating test examples...: 637 examples [02:22,  5.00 examples/s][A
Generating test examples...: 643 examples [02:23,  5.24 examples/s][A
Generating test examples...: 649 examples [02:24,  5.42 examples/s][A
Generating test examples...: 655 examples [02:25,  5.55 examples/s][A
Generating test examples...: 661 examples [02:26,  5.65 examples/s][A
Generating test examples...: 667 examples [02:27,  5.72 examples/s][A
Generating test examples...: 673 examples [02:28,  5.77 examples/s][A
Generating test examples...: 679 examples [02:29,  5.80 examples/s][A
Generating test examples...: 685 examples [02:30,  5.84 examples/s][A
Generating test examples...: 691 examples [02:31,  5.86 examples/s][A
Generating test examples...: 697 examples [02:32,  5.86 examples/s][A
Generating test examples...: 703 examples [02:33,  5.87 examples/s][A
Generating test examples...: 709 examples [02:34,  5.87 examples/s][A
Generating test examples...: 715 examples [02:35,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 721 examples [02:42,  2.13 examples/s][A
Generating test examples...: 727 examples [02:43,  2.63 examples/s][A
Generating test examples...: 733 examples [02:44,  3.16 examples/s][A
Generating test examples...: 739 examples [02:45,  3.68 examples/s][A
Generating test examples...: 745 examples [02:46,  4.15 examples/s][A
Generating test examples...: 751 examples [02:47,  4.55 examples/s][A
Generating test examples...: 757 examples [02:48,  4.89 examples/s][A
Generating test examples...: 763 examples [02:49,  5.16 examples/s][A
Generating test examples...: 769 examples [02:50,  5.38 examples/s][A
Generating test examples...: 775 examples [02:51,  5.54 examples/s][A
Generating test examples...: 781 examples [02:52,  5.64 examples/s][A
Generating test examples...: 787 examples [02:53,  5.73 examples/s][A
Generating test examples...: 793 examples [02:54,  5.79 examples/s][A
Generating test examples...: 799 examples [02:56,  5.84 examples/s][A
Generating test examples...: 805 examples [02:57,  5.87 examples/s][A
Generating test examples...: 811 examples [02:58,  5.89 examples/s][A
Generating test examples...: 817 examples [02:59,  5.90 examples/s][A
Generating test examples...: 823 examples [03:00,  5.91 examples/s][A
Generating test examples...: 829 examples [03:01,  5.92 examples/s][A
Generating test examples...: 835 examples [03:02,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 841 examples [03:08,  2.16 examples/s][A
Generating test examples...: 847 examples [03:09,  2.67 examples/s][A
Generating test examples...: 853 examples [03:10,  3.20 examples/s][A
Generating test examples...: 859 examples [03:11,  3.71 examples/s][A
Generating test examples...: 865 examples [03:13,  4.18 examples/s][A
Generating test examples...: 871 examples [03:14,  4.58 examples/s][A
Generating test examples...: 877 examples [03:15,  4.92 examples/s][A
Generating test examples...: 883 examples [03:16,  5.18 examples/s][A
Generating test examples...: 889 examples [03:17,  5.38 examples/s][A
Generating test examples...: 895 examples [03:18,  5.53 examples/s][A
Generating test examples...: 901 examples [03:19,  5.64 examples/s][A
Generating test examples...: 907 examples [03:20,  5.72 examples/s][A
Generating test examples...: 913 examples [03:21,  5.77 examples/s][A
Generating test examples...: 919 examples [03:22,  5.82 examples/s][A
Generating test examples...: 925 examples [03:23,  5.84 examples/s][A
Generating test examples...: 931 examples [03:24,  5.86 examples/s][A
Generating test examples...: 937 examples [03:25,  5.87 examples/s][A
Generating test examples...: 943 examples [03:26,  5.90 examples/s][A
Generating test examples...: 949 examples [03:27,  5.89 examples/s][A
Generating test examples...: 955 examples [03:28,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 961 examples [03:34,  2.38 examples/s][A
Generating test examples...: 967 examples [03:35,  2.90 examples/s][A
Generating test examples...: 973 examples [03:36,  3.42 examples/s][A
Generating test examples...: 979 examples [03:37,  3.92 examples/s][A
Generating test examples...: 985 examples [03:38,  4.36 examples/s][A
Generating test examples...: 991 examples [03:39,  4.74 examples/s][A
Generating test examples...: 997 examples [03:40,  5.03 examples/s][A
Generating test examples...: 1003 examples [03:41,  5.26 examples/s][A
Generating test examples...: 1009 examples [03:42,  5.44 examples/s][A
Generating test examples...: 1015 examples [03:43,  5.58 examples/s][A
Generating test examples...: 1021 examples [03:44,  5.68 examples/s][A
Generating test examples...: 1027 examples [03:45,  5.75 examples/s][A
Generating test examples...: 1033 examples [03:46,  5.79 examples/s][A
Generating test examples...: 1039 examples [03:47,  5.83 examples/s][A
Generating test examples...: 1045 examples [03:48,  5.85 examples/s][A
Generating test examples...: 1051 examples [03:49,  5.86 examples/s][A
Generating test examples...: 1057 examples [03:50,  5.88 examples/s][A
Generating test examples...: 1063 examples [03:51,  5.89 examples/s][A
Generating test examples...: 1069 examples [03:52,  5.89 examples/s][A
Generating test examples...: 1075 examples [03:53,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1081 examples [04:00,  2.21 examples/s][A
Generating test examples...: 1087 examples [04:01,  2.72 examples/s][A
Generating test examples...: 1093 examples [04:02,  3.24 examples/s][A
Generating test examples...: 1099 examples [04:03,  3.75 examples/s][A
Generating test examples...: 1105 examples [04:04,  4.20 examples/s][A
Generating test examples...: 1111 examples [04:05,  4.58 examples/s][A
Generating test examples...: 1117 examples [04:06,  4.90 examples/s][A
Generating test examples...: 1123 examples [04:07,  5.16 examples/s][A
Generating test examples...: 1129 examples [04:08,  5.35 examples/s][A
Generating test examples...: 1135 examples [04:09,  5.50 examples/s][A
Generating test examples...: 1141 examples [04:10,  5.61 examples/s][A
Generating test examples...: 1147 examples [04:11,  5.68 examples/s][A
Generating test examples...: 1153 examples [04:12,  5.74 examples/s][A
Generating test examples...: 1159 examples [04:13,  5.78 examples/s][A
Generating test examples...: 1165 examples [04:14,  5.80 examples/s][A
Generating test examples...: 1171 examples [04:15,  5.83 examples/s][A
Generating test examples...: 1177 examples [04:16,  5.84 examples/s][A
Generating test examples...: 1183 examples [04:17,  5.85 examples/s][A
Generating test examples...: 1189 examples [04:18,  5.85 examples/s][A
Generating test examples...: 1195 examples [04:19,  5.86 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1201 examples [04:26,  2.18 examples/s][A
Generating test examples...: 1207 examples [04:27,  2.69 examples/s][A
Generating test examples...: 1213 examples [04:28,  3.21 examples/s][A
Generating test examples...: 1219 examples [04:29,  3.72 examples/s][A
Generating test examples...: 1225 examples [04:30,  4.19 examples/s][A
Generating test examples...: 1231 examples [04:31,  4.60 examples/s][A
Generating test examples...: 1237 examples [04:32,  4.93 examples/s][A
Generating test examples...: 1243 examples [04:33,  5.19 examples/s][A
Generating test examples...: 1249 examples [04:34,  5.39 examples/s][A
Generating test examples...: 1255 examples [04:35,  5.53 examples/s][A
Generating test examples...: 1261 examples [04:36,  5.64 examples/s][A
Generating test examples...: 1267 examples [04:37,  5.71 examples/s][A
Generating test examples...: 1273 examples [04:38,  5.76 examples/s][A
Generating test examples...: 1279 examples [04:39,  5.80 examples/s][A
Generating test examples...: 1285 examples [04:40,  5.84 examples/s][A
Generating test examples...: 1291 examples [04:41,  5.87 examples/s][A
Generating test examples...: 1297 examples [04:42,  5.89 examples/s][A
Generating test examples...: 1303 examples [04:43,  5.90 examples/s][A
Generating test examples...: 1309 examples [04:44,  5.90 examples/s][A
Generating test examples...: 1315 examples [04:45,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1321 examples [04:52,  2.31 examples/s][A
Generating test examples...: 1327 examples [04:53,  2.82 examples/s][A
Generating test examples...: 1333 examples [04:54,  3.35 examples/s][A
Generating test examples...: 1339 examples [04:55,  3.85 examples/s][A
Generating test examples...: 1345 examples [04:56,  4.30 examples/s][A
Generating test examples...: 1351 examples [04:57,  4.69 examples/s][A
Generating test examples...: 1357 examples [04:58,  5.00 examples/s][A
Generating test examples...: 1363 examples [04:59,  5.24 examples/s][A
Generating test examples...: 1369 examples [05:00,  5.42 examples/s][A
Generating test examples...: 1375 examples [05:01,  5.56 examples/s][A
Generating test examples...: 1381 examples [05:02,  5.65 examples/s][A
Generating test examples...: 1387 examples [05:03,  5.72 examples/s][A
Generating test examples...: 1393 examples [05:04,  5.77 examples/s][A
Generating test examples...: 1399 examples [05:05,  5.81 examples/s][A
Generating test examples...: 1405 examples [05:06,  5.84 examples/s][A
Generating test examples...: 1411 examples [05:07,  5.85 examples/s][A
Generating test examples...: 1417 examples [05:08,  5.87 examples/s][A
Generating test examples...: 1423 examples [05:09,  5.88 examples/s][A
Generating test examples...: 1429 examples [05:10,  5.89 examples/s][A
Generating test examples...: 1435 examples [05:11,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1441 examples [05:17,  2.32 examples/s][A
Generating test examples...: 1447 examples [05:18,  2.83 examples/s][A
Generating test examples...: 1453 examples [05:19,  3.36 examples/s][A
Generating test examples...: 1459 examples [05:20,  3.86 examples/s][A
Generating test examples...: 1465 examples [05:21,  4.30 examples/s][A
Generating test examples...: 1471 examples [05:22,  4.68 examples/s][A
Generating test examples...: 1477 examples [05:23,  4.99 examples/s][A
Generating test examples...: 1483 examples [05:24,  5.24 examples/s][A
Generating test examples...: 1489 examples [05:25,  5.43 examples/s][A
Generating test examples...: 1495 examples [05:26,  5.55 examples/s][A
Generating test examples...: 1501 examples [05:27,  5.65 examples/s][A
Generating test examples...: 1507 examples [05:28,  5.71 examples/s][A
Generating test examples...: 1513 examples [05:29,  5.77 examples/s][A
Generating test examples...: 1519 examples [05:30,  5.81 examples/s][A
Generating test examples...: 1525 examples [05:31,  5.84 examples/s][A
Generating test examples...: 1531 examples [05:32,  5.87 examples/s][A
Generating test examples...: 1537 examples [05:33,  5.86 examples/s][A
Generating test examples...: 1543 examples [05:34,  5.87 examples/s][A
Generating test examples...: 1549 examples [05:35,  5.89 examples/s][A
Generating test examples...: 1555 examples [05:36,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1561 examples [05:43,  2.29 examples/s][A
Generating test examples...: 1567 examples [05:44,  2.80 examples/s][A
Generating test examples...: 1573 examples [05:45,  3.33 examples/s][A
Generating test examples...: 1579 examples [05:46,  3.83 examples/s][A
Generating test examples...: 1585 examples [05:47,  4.28 examples/s][A
Generating test examples...: 1591 examples [05:48,  4.67 examples/s][A
Generating test examples...: 1597 examples [05:49,  4.98 examples/s][A
Generating test examples...: 1603 examples [05:50,  5.22 examples/s][A
Generating test examples...: 1609 examples [05:51,  5.41 examples/s][A
Generating test examples...: 1615 examples [05:52,  5.55 examples/s][A
Generating test examples...: 1621 examples [05:53,  5.65 examples/s][A
Generating test examples...: 1627 examples [05:54,  5.73 examples/s][A
Generating test examples...: 1633 examples [05:55,  5.79 examples/s][A
Generating test examples...: 1639 examples [05:56,  5.82 examples/s][A
Generating test examples...: 1645 examples [05:57,  5.85 examples/s][A
Generating test examples...: 1651 examples [05:58,  5.87 examples/s][A
Generating test examples...: 1657 examples [05:59,  5.89 examples/s][A
Generating test examples...: 1663 examples [06:00,  5.89 examples/s][A
Generating test examples...: 1669 examples [06:01,  5.90 examples/s][A
Generating test examples...: 1675 examples [06:02,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1681 examples [06:08,  2.27 examples/s][A
Generating test examples...: 1687 examples [06:10,  2.79 examples/s][A
Generating test examples...: 1693 examples [06:11,  3.31 examples/s][A
Generating test examples...: 1699 examples [06:12,  3.81 examples/s][A
Generating test examples...: 1705 examples [06:13,  4.26 examples/s][A
Generating test examples...: 1711 examples [06:14,  4.64 examples/s][A
Generating test examples...: 1717 examples [06:15,  4.96 examples/s][A
Generating test examples...: 1723 examples [06:16,  5.20 examples/s][A
Generating test examples...: 1729 examples [06:17,  5.39 examples/s][A
Generating test examples...: 1735 examples [06:18,  5.52 examples/s][A
Generating test examples...: 1741 examples [06:19,  5.61 examples/s][A
Generating test examples...: 1747 examples [06:20,  5.68 examples/s][A
Generating test examples...: 1753 examples [06:21,  5.73 examples/s][A
Generating test examples...: 1759 examples [06:22,  5.78 examples/s][A
Generating test examples...: 1765 examples [06:23,  5.80 examples/s][A
Generating test examples...: 1771 examples [06:24,  5.83 examples/s][A
Generating test examples...: 1777 examples [06:25,  5.84 examples/s][A
Generating test examples...: 1783 examples [06:26,  5.85 examples/s][A
Generating test examples...: 1789 examples [06:27,  5.86 examples/s][A
Generating test examples...: 1795 examples [06:28,  5.86 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1801 examples [06:34,  2.29 examples/s][A
Generating test examples...: 1807 examples [06:35,  2.80 examples/s][A
Generating test examples...: 1813 examples [06:36,  3.32 examples/s][A
Generating test examples...: 1819 examples [06:37,  3.82 examples/s][A
Generating test examples...: 1825 examples [06:38,  4.26 examples/s][A
Generating test examples...: 1831 examples [06:39,  4.65 examples/s][A
Generating test examples...: 1837 examples [06:40,  4.96 examples/s][A
Generating test examples...: 1843 examples [06:41,  5.21 examples/s][A
Generating test examples...: 1849 examples [06:42,  5.39 examples/s][A
Generating test examples...: 1855 examples [06:43,  5.52 examples/s][A
Generating test examples...: 1861 examples [06:44,  5.62 examples/s][A
Generating test examples...: 1867 examples [06:46,  5.68 examples/s][A
Generating test examples...: 1873 examples [06:47,  5.74 examples/s][A
Generating test examples...: 1879 examples [06:48,  5.77 examples/s][A
Generating test examples...: 1885 examples [06:49,  5.80 examples/s][A
Generating test examples...: 1891 examples [06:50,  5.82 examples/s][A
Generating test examples...: 1897 examples [06:51,  5.84 examples/s][A
Generating test examples...: 1903 examples [06:52,  5.86 examples/s][A
Generating test examples...: 1909 examples [06:53,  5.87 examples/s][A
Generating test examples...: 1915 examples [06:54,  5.87 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1921 examples [07:00,  2.23 examples/s][A
Generating test examples...: 1927 examples [07:01,  2.74 examples/s][A
Generating test examples...: 1933 examples [07:02,  3.26 examples/s][A
Generating test examples...: 1939 examples [07:03,  3.77 examples/s][A
Generating test examples...: 1945 examples [07:04,  4.22 examples/s][A
Generating test examples...: 1951 examples [07:05,  4.61 examples/s][A
Generating test examples...: 1957 examples [07:06,  4.93 examples/s][A
Generating test examples...: 1963 examples [07:07,  5.18 examples/s][A
Generating test examples...: 1969 examples [07:08,  5.37 examples/s][A
Generating test examples...: 1975 examples [07:09,  5.50 examples/s][A
Generating test examples...: 1981 examples [07:10,  5.60 examples/s][A
Generating test examples...: 1987 examples [07:11,  5.69 examples/s][A
Generating test examples...: 1993 examples [07:13,  5.74 examples/s][A
Generating test examples...: 1999 examples [07:14,  5.78 examples/s][A
Generating test examples...: 2005 examples [07:15,  5.80 examples/s][A
Generating test examples...: 2011 examples [07:16,  5.83 examples/s][A
Generating test examples...: 2017 examples [07:17,  5.83 examples/s][A
Generating test examples...: 2023 examples [07:18,  5.84 examples/s][A
Generating test examples...: 2029 examples [07:19,  5.85 examples/s][A
Generating test examples...: 2035 examples [07:20,  5.86 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 2041 examples [07:26,  2.23 examples/s][A
Generating test examples...: 2047 examples [07:27,  2.75 examples/s][A
Generating test examples...: 2053 examples [07:28,  3.28 examples/s][A
Generating test examples...: 2059 examples [07:29,  3.79 examples/s][A
Generating test examples...: 2065 examples [07:30,  4.25 examples/s][A
Generating test examples...: 2071 examples [07:31,  4.64 examples/s][A
Generating test examples...: 2077 examples [07:32,  4.97 examples/s][A
Generating test examples...: 2083 examples [07:33,  5.22 examples/s][A
Generating test examples...: 2089 examples [07:34,  5.42 examples/s][A
Generating test examples...: 2095 examples [07:35,  5.57 examples/s][A
Generating test examples...: 2101 examples [07:36,  5.67 examples/s][A
Generating test examples...: 2107 examples [07:37,  5.75 examples/s][A
Generating test examples...: 2113 examples [07:38,  5.80 examples/s][A
Generating test examples...: 2119 examples [07:39,  5.84 examples/s][A
Generating test examples...: 2125 examples [07:40,  5.87 examples/s][A
Generating test examples...: 2131 examples [07:41,  5.88 examples/s][A
Generating test examples...: 2137 examples [07:42,  5.89 examples/s][A
Generating test examples...: 2143 examples [07:43,  5.90 examples/s][A
Generating test examples...: 2149 examples [07:44,  5.91 examples/s][A
Generating test examples...: 2155 examples [07:45,  5.91 examples/s][A
                                                                    [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/2160 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 1/2160 [00:50<30:06:18, 50.20s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   1%|          | 17/2160 [00:50<1:15:32,  2.12s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   2%|▏         | 34/2160 [00:50<30:45,  1.15 examples/s]  [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   2%|▏         | 51/2160 [00:50<16:40,  2.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   3%|▎         | 68/2160 [00:50<10:07,  3.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   4%|▍         | 84/2160 [00:51<06:41,  5.18 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   5%|▍         | 101/2160 [00:51<04:27,  7.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   5%|▌         | 118/2160 [00:51<03:04, 11.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   6%|▋         | 135/2160 [00:51<02:10, 15.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   7%|▋         | 152/2160 [00:51<01:34, 21.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   8%|▊         | 169/2160 [00:51<01:09, 28.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   9%|▊         | 186/2160 [00:52<00:53, 36.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   9%|▉         | 202/2160 [00:52<00:43, 45.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  10%|█         | 219/2160 [00:52<00:35, 55.05 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  11%|█         | 236/2160 [00:52<00:30, 64.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▏        | 253/2160 [00:52<00:26, 71.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 270/2160 [00:52<00:24, 78.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  13%|█▎        | 287/2160 [00:52<00:21, 85.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  14%|█▍        | 304/2160 [00:53<00:20, 91.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  15%|█▍        | 321/2160 [00:53<00:19, 95.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  16%|█▌        | 338/2160 [00:53<00:18, 99.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  16%|█▋        | 354/2160 [00:53<00:17, 101.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  17%|█▋        | 371/2160 [00:53<00:17, 102.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  18%|█▊        | 388/2160 [00:53<00:17, 103.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  19%|█▉        | 405/2160 [00:54<00:16, 105.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  20%|█▉        | 422/2160 [00:54<00:16, 106.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  20%|██        | 439/2160 [00:54<00:15, 107.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  21%|██        | 456/2160 [00:54<00:16, 105.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  22%|██▏       | 472/2160 [00:54<00:16, 104.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  23%|██▎       | 489/2160 [00:54<00:16, 103.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  23%|██▎       | 506/2160 [00:55<00:16, 102.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  24%|██▍       | 523/2160 [00:55<00:15, 104.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 540/2160 [00:55<00:15, 106.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  26%|██▌       | 557/2160 [00:55<00:14, 107.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  27%|██▋       | 574/2160 [00:55<00:14, 106.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  27%|██▋       | 591/2160 [00:55<00:14, 106.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  28%|██▊       | 608/2160 [00:55<00:14, 108.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  29%|██▉       | 624/2160 [00:56<00:14, 109.16 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  30%|██▉       | 641/2160 [00:56<00:13, 110.57 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  30%|███       | 658/2160 [00:56<00:13, 112.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  31%|███▏      | 675/2160 [00:56<00:13, 108.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  32%|███▏      | 692/2160 [00:56<00:13, 106.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  33%|███▎      | 709/2160 [00:56<00:13, 104.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  34%|███▎      | 726/2160 [00:57<00:13, 104.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  34%|███▍      | 742/2160 [00:57<00:13, 106.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  35%|███▌      | 759/2160 [00:57<00:13, 107.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  36%|███▌      | 776/2160 [00:57<00:12, 107.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  37%|███▋      | 793/2160 [00:57<00:12, 110.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 810/2160 [00:57<00:12, 107.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 827/2160 [00:58<00:12, 104.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  39%|███▉      | 844/2160 [00:58<00:12, 106.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  40%|███▉      | 861/2160 [00:58<00:11, 109.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  41%|████      | 878/2160 [00:58<00:11, 112.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  41%|████▏     | 894/2160 [00:58<00:11, 106.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  42%|████▏     | 911/2160 [00:58<00:12, 103.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  43%|████▎     | 928/2160 [00:58<00:11, 105.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  44%|████▍     | 945/2160 [00:59<00:11, 109.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  45%|████▍     | 962/2160 [00:59<00:10, 112.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  45%|████▌     | 979/2160 [00:59<00:10, 113.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  46%|████▌     | 996/2160 [00:59<00:10, 112.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  47%|████▋     | 1012/2160 [00:59<00:10, 113.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  48%|████▊     | 1029/2160 [00:59<00:09, 114.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  48%|████▊     | 1046/2160 [00:59<00:09, 115.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  49%|████▉     | 1063/2160 [01:00<00:09, 115.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 1080/2160 [01:00<00:09, 117.05 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  51%|█████     | 1097/2160 [01:00<00:09, 117.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  52%|█████▏    | 1114/2160 [01:00<00:09, 115.96 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  52%|█████▏    | 1131/2160 [01:00<00:09, 113.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  53%|█████▎    | 1148/2160 [01:00<00:09, 109.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  54%|█████▍    | 1164/2160 [01:01<00:09, 102.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  55%|█████▍    | 1181/2160 [01:01<00:10, 94.82 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  55%|█████▌    | 1198/2160 [01:01<00:09, 97.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  56%|█████▋    | 1215/2160 [01:01<00:09, 103.16 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  57%|█████▋    | 1232/2160 [01:01<00:08, 106.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  58%|█████▊    | 1249/2160 [01:01<00:08, 109.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  59%|█████▊    | 1266/2160 [01:02<00:08, 111.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  59%|█████▉    | 1282/2160 [01:02<00:07, 112.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  60%|██████    | 1299/2160 [01:02<00:07, 114.58 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  61%|██████    | 1316/2160 [01:02<00:07, 111.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▏   | 1333/2160 [01:02<00:07, 103.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 1350/2160 [01:02<00:07, 101.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  63%|██████▎   | 1367/2160 [01:03<00:07, 103.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  64%|██████▍   | 1384/2160 [01:03<00:07, 106.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  65%|██████▍   | 1401/2160 [01:03<00:06, 108.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  66%|██████▌   | 1418/2160 [01:03<00:06, 110.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  66%|██████▋   | 1434/2160 [01:03<00:06, 110.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  67%|██████▋   | 1451/2160 [01:03<00:06, 113.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  68%|██████▊   | 1468/2160 [01:03<00:06, 113.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  69%|██████▉   | 1485/2160 [01:04<00:05, 114.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  70%|██████▉   | 1502/2160 [01:04<00:05, 114.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  70%|███████   | 1519/2160 [01:04<00:05, 116.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  71%|███████   | 1536/2160 [01:04<00:05, 116.71 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  72%|███████▏  | 1552/2160 [01:04<00:05, 110.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  73%|███████▎  | 1569/2160 [01:04<00:05, 107.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  73%|███████▎  | 1586/2160 [01:04<00:05, 104.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  74%|███████▍  | 1603/2160 [01:05<00:05, 104.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 1620/2160 [01:05<00:05, 105.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  76%|███████▌  | 1637/2160 [01:05<00:04, 107.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  77%|███████▋  | 1654/2160 [01:05<00:04, 107.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  77%|███████▋  | 1671/2160 [01:05<00:04, 107.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  78%|███████▊  | 1688/2160 [01:05<00:04, 108.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  79%|███████▉  | 1704/2160 [01:06<00:04, 110.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  80%|███████▉  | 1721/2160 [01:06<00:03, 110.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  80%|████████  | 1738/2160 [01:06<00:03, 110.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  81%|████████▏ | 1755/2160 [01:06<00:03, 111.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  82%|████████▏ | 1772/2160 [01:06<00:03, 108.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  83%|████████▎ | 1789/2160 [01:06<00:03, 105.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  84%|████████▎ | 1806/2160 [01:07<00:03, 104.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  84%|████████▍ | 1822/2160 [01:07<00:03, 105.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  85%|████████▌ | 1839/2160 [01:07<00:03, 106.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  86%|████████▌ | 1856/2160 [01:07<00:02, 107.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  87%|████████▋ | 1873/2160 [01:07<00:02, 108.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 1890/2160 [01:07<00:02, 110.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 1907/2160 [01:07<00:02, 111.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  89%|████████▉ | 1924/2160 [01:08<00:02, 111.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  90%|████████▉ | 1941/2160 [01:08<00:01, 112.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  91%|█████████ | 1958/2160 [01:08<00:01, 112.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  91%|█████████▏| 1974/2160 [01:08<00:01, 111.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  92%|█████████▏| 1991/2160 [01:08<00:01, 112.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  93%|█████████▎| 2008/2160 [01:08<00:01, 111.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  94%|█████████▍| 2025/2160 [01:08<00:01, 108.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  95%|█████████▍| 2042/2160 [01:09<00:01, 101.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  95%|█████████▌| 2059/2160 [01:09<00:00, 101.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  96%|█████████▌| 2076/2160 [01:09<00:00, 103.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  97%|█████████▋| 2092/2160 [01:09<00:00, 104.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  98%|█████████▊| 2109/2160 [01:09<00:00, 107.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  98%|█████████▊| 2126/2160 [01:09<00:00, 103.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  99%|█████████▉| 2143/2160 [01:10<00:00, 102.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 2160/2160 [01:10<00:00, 104.55 examples/s][A
                                                                                                                                                                                                         [A                                                                         Generating splits...:  50%|█████     | 1/2 [17:57<09:00, 540.40s/ splits]Generating splits...: 100%|██████████| 2/2 [17:57<00:00, 538.73s/ splits]                                                                         INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0.incompleteEDUZQW/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 2160 (shards: [17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 16, 17, 17, 17, 17])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/all/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, all subjects
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=19.53 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=2160, num_shards=128>,
        'train': <SplitInfo num_examples=2160, num_shards=128>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all_e1/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:06,  6.45s/ examples][A
Generating train examples...: 8 examples [00:07,  1.36 examples/s][A
Generating train examples...: 14 examples [00:08,  2.29 examples/s][A
Generating train examples...: 20 examples [00:09,  3.11 examples/s][A
Generating train examples...: 26 examples [00:10,  3.81 examples/s][A
Generating train examples...: 32 examples [00:11,  4.36 examples/s][A
Generating train examples...: 38 examples [00:12,  4.80 examples/s][A
Generating train examples...: 44 examples [00:13,  5.12 examples/s][A
Generating train examples...: 51 examples [00:14,  5.40 examples/s][A
Generating train examples...: 57 examples [00:15,  5.56 examples/s][A
Generating train examples...: 63 examples [00:16,  5.68 examples/s][A
Generating train examples...: 69 examples [00:17,  5.77 examples/s][A
Generating train examples...: 75 examples [00:18,  5.83 examples/s][A
Generating train examples...: 81 examples [00:19,  5.87 examples/s][A
Generating train examples...: 87 examples [00:20,  5.90 examples/s][A
Generating train examples...: 93 examples [00:21,  5.93 examples/s][A
Generating train examples...: 99 examples [00:22,  5.94 examples/s][A
Generating train examples...: 105 examples [00:23,  5.95 examples/s][A
Generating train examples...: 111 examples [00:24,  5.96 examples/s][A
Generating train examples...: 117 examples [00:25,  5.96 examples/s][Acsp shape (120, 64, 1920)
Subject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 123 examples [00:32,  2.24 examples/s][A
Generating train examples...: 130 examples [00:33,  2.83 examples/s][A
Generating train examples...: 136 examples [00:34,  3.34 examples/s][A
Generating train examples...: 142 examples [00:35,  3.83 examples/s][A
Generating train examples...: 148 examples [00:36,  4.28 examples/s][A
Generating train examples...: 154 examples [00:37,  4.67 examples/s][A
Generating train examples...: 160 examples [00:38,  4.99 examples/s][A
Generating train examples...: 166 examples [00:39,  5.25 examples/s][A
Generating train examples...: 172 examples [00:40,  5.45 examples/s][A
Generating train examples...: 178 examples [00:41,  5.60 examples/s][A
Generating train examples...: 184 examples [00:42,  5.70 examples/s][A
Generating train examples...: 190 examples [00:43,  5.78 examples/s][A
Generating train examples...: 196 examples [00:44,  5.84 examples/s][A
Generating train examples...: 202 examples [00:45,  5.88 examples/s][A
Generating train examples...: 208 examples [00:46,  5.91 examples/s][A
Generating train examples...: 214 examples [00:47,  5.93 examples/s][A
Generating train examples...: 220 examples [00:49,  5.04 examples/s][A
Generating train examples...: 226 examples [00:50,  5.26 examples/s][A
Generating train examples...: 232 examples [00:51,  5.44 examples/s][A
Generating train examples...: 238 examples [00:52,  5.57 examples/s][Acsp shape (120, 64, 1920)
Subject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 244 examples [00:58,  2.31 examples/s][A
Generating train examples...: 250 examples [00:59,  2.83 examples/s][A
Generating train examples...: 256 examples [01:00,  3.35 examples/s][A
Generating train examples...: 262 examples [01:01,  3.85 examples/s][A
Generating train examples...: 268 examples [01:02,  4.31 examples/s][A
Generating train examples...: 274 examples [01:03,  4.69 examples/s][A
Generating train examples...: 280 examples [01:04,  5.01 examples/s][A
Generating train examples...: 286 examples [01:05,  5.25 examples/s][A
Generating train examples...: 292 examples [01:06,  5.43 examples/s][A
Generating train examples...: 298 examples [01:07,  5.58 examples/s][A
Generating train examples...: 304 examples [01:08,  5.68 examples/s][A
Generating train examples...: 310 examples [01:09,  5.76 examples/s][A
Generating train examples...: 316 examples [01:10,  5.81 examples/s][A
Generating train examples...: 322 examples [01:11,  5.84 examples/s][A
Generating train examples...: 328 examples [01:12,  5.87 examples/s][A
Generating train examples...: 334 examples [01:13,  5.90 examples/s][A
Generating train examples...: 340 examples [01:14,  5.92 examples/s][A
Generating train examples...: 346 examples [01:15,  5.92 examples/s][A
Generating train examples...: 352 examples [01:16,  5.92 examples/s][A
Generating train examples...: 358 examples [01:17,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 364 examples [01:23,  2.36 examples/s][A
Generating train examples...: 370 examples [01:24,  2.89 examples/s][A
Generating train examples...: 376 examples [01:25,  3.41 examples/s][A
Generating train examples...: 382 examples [01:26,  3.91 examples/s][A
Generating train examples...: 388 examples [01:27,  4.35 examples/s][A
Generating train examples...: 394 examples [01:28,  4.73 examples/s][A
Generating train examples...: 400 examples [01:29,  5.04 examples/s][A
Generating train examples...: 406 examples [01:30,  5.26 examples/s][A
Generating train examples...: 412 examples [01:31,  5.44 examples/s][A
Generating train examples...: 418 examples [01:32,  5.58 examples/s][A
Generating train examples...: 424 examples [01:33,  5.68 examples/s][A
Generating train examples...: 430 examples [01:34,  5.75 examples/s][A
Generating train examples...: 436 examples [01:35,  5.79 examples/s][A
Generating train examples...: 442 examples [01:36,  5.83 examples/s][A
Generating train examples...: 448 examples [01:37,  5.87 examples/s][A
Generating train examples...: 454 examples [01:38,  5.89 examples/s][A
Generating train examples...: 460 examples [01:39,  5.90 examples/s][A
Generating train examples...: 466 examples [01:40,  5.91 examples/s][A
Generating train examples...: 472 examples [01:41,  5.92 examples/s][A
Generating train examples...: 478 examples [01:43,  5.93 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 484 examples [01:49,  2.37 examples/s][A
Generating train examples...: 490 examples [01:50,  2.89 examples/s][A
Generating train examples...: 496 examples [01:51,  3.41 examples/s][A
Generating train examples...: 502 examples [01:52,  3.91 examples/s][A
Generating train examples...: 508 examples [01:53,  4.35 examples/s][A
Generating train examples...: 514 examples [01:54,  4.72 examples/s][A
Generating train examples...: 520 examples [01:55,  5.02 examples/s][A
Generating train examples...: 526 examples [01:56,  5.26 examples/s][A
Generating train examples...: 532 examples [01:57,  5.45 examples/s][A
Generating train examples...: 538 examples [01:58,  5.58 examples/s][A
Generating train examples...: 544 examples [01:59,  5.68 examples/s][A
Generating train examples...: 550 examples [02:00,  5.74 examples/s][A
Generating train examples...: 556 examples [02:01,  5.79 examples/s][A
Generating train examples...: 562 examples [02:02,  5.76 examples/s][A
Generating train examples...: 568 examples [02:03,  5.79 examples/s][A
Generating train examples...: 574 examples [02:04,  5.83 examples/s][A
Generating train examples...: 580 examples [02:05,  5.86 examples/s][A
Generating train examples...: 586 examples [02:06,  5.87 examples/s][A
Generating train examples...: 592 examples [02:07,  5.88 examples/s][A
Generating train examples...: 598 examples [02:08,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 604 examples [02:14,  2.34 examples/s][A
Generating train examples...: 610 examples [02:15,  2.86 examples/s][A
Generating train examples...: 616 examples [02:16,  3.38 examples/s][A
Generating train examples...: 622 examples [02:17,  3.88 examples/s][A
Generating train examples...: 628 examples [02:18,  4.33 examples/s][A
Generating train examples...: 634 examples [02:19,  4.71 examples/s][A
Generating train examples...: 640 examples [02:20,  5.02 examples/s][A
Generating train examples...: 646 examples [02:21,  5.25 examples/s][A
Generating train examples...: 652 examples [02:22,  5.44 examples/s][A
Generating train examples...: 658 examples [02:23,  5.57 examples/s][A
Generating train examples...: 664 examples [02:24,  5.68 examples/s][A
Generating train examples...: 670 examples [02:25,  5.75 examples/s][A
Generating train examples...: 676 examples [02:26,  5.80 examples/s][A
Generating train examples...: 682 examples [02:27,  5.84 examples/s][A
Generating train examples...: 688 examples [02:28,  5.86 examples/s][A
Generating train examples...: 694 examples [02:29,  5.88 examples/s][A
Generating train examples...: 700 examples [02:30,  5.90 examples/s][A
Generating train examples...: 706 examples [02:31,  5.91 examples/s][A
Generating train examples...: 712 examples [02:32,  5.91 examples/s][A
Generating train examples...: 718 examples [02:33,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 724 examples [02:41,  2.02 examples/s][A
Generating train examples...: 730 examples [02:42,  2.52 examples/s][A
Generating train examples...: 736 examples [02:43,  3.04 examples/s][A
Generating train examples...: 742 examples [02:44,  3.55 examples/s][A
Generating train examples...: 748 examples [02:45,  4.03 examples/s][A
Generating train examples...: 754 examples [02:46,  4.45 examples/s][A
Generating train examples...: 760 examples [02:47,  4.80 examples/s][A
Generating train examples...: 766 examples [02:48,  5.08 examples/s][A
Generating train examples...: 772 examples [02:49,  5.30 examples/s][A
Generating train examples...: 778 examples [02:50,  5.46 examples/s][A
Generating train examples...: 784 examples [02:51,  5.58 examples/s][A
Generating train examples...: 790 examples [02:52,  5.67 examples/s][A
Generating train examples...: 796 examples [02:53,  5.73 examples/s][A
Generating train examples...: 802 examples [02:54,  5.77 examples/s][A
Generating train examples...: 808 examples [02:55,  5.79 examples/s][A
Generating train examples...: 814 examples [02:56,  5.82 examples/s][A
Generating train examples...: 820 examples [02:57,  5.83 examples/s][A
Generating train examples...: 826 examples [02:58,  5.83 examples/s][A
Generating train examples...: 832 examples [02:59,  5.84 examples/s][A
Generating train examples...: 838 examples [03:00,  5.85 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 844 examples [03:07,  2.12 examples/s][A
Generating train examples...: 850 examples [03:08,  2.62 examples/s][A
Generating train examples...: 856 examples [03:09,  3.14 examples/s][A
Generating train examples...: 862 examples [03:10,  3.65 examples/s][A
Generating train examples...: 868 examples [03:11,  4.12 examples/s][A
Generating train examples...: 874 examples [03:12,  4.52 examples/s][A
Generating train examples...: 880 examples [03:13,  4.86 examples/s][A
Generating train examples...: 886 examples [03:14,  5.14 examples/s][A
Generating train examples...: 892 examples [03:15,  5.34 examples/s][A
Generating train examples...: 898 examples [03:17,  5.49 examples/s][A
Generating train examples...: 904 examples [03:18,  5.58 examples/s][A
Generating train examples...: 910 examples [03:19,  5.66 examples/s][A
Generating train examples...: 916 examples [03:20,  5.73 examples/s][A
Generating train examples...: 922 examples [03:21,  5.77 examples/s][A
Generating train examples...: 928 examples [03:22,  5.80 examples/s][A
Generating train examples...: 934 examples [03:23,  5.83 examples/s][A
Generating train examples...: 940 examples [03:24,  5.84 examples/s][A
Generating train examples...: 946 examples [03:25,  5.84 examples/s][A
Generating train examples...: 952 examples [03:26,  5.85 examples/s][A
Generating train examples...: 958 examples [03:27,  5.85 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 964 examples [03:33,  2.22 examples/s][A
Generating train examples...: 970 examples [03:34,  2.73 examples/s][A
Generating train examples...: 976 examples [03:35,  3.25 examples/s][A
Generating train examples...: 982 examples [03:36,  3.75 examples/s][A
Generating train examples...: 988 examples [03:37,  4.21 examples/s][A
Generating train examples...: 994 examples [03:38,  4.60 examples/s][A
Generating train examples...: 1000 examples [03:39,  4.92 examples/s][A
Generating train examples...: 1006 examples [03:41,  5.17 examples/s][A
Generating train examples...: 1012 examples [03:42,  5.36 examples/s][A
Generating train examples...: 1018 examples [03:43,  5.51 examples/s][A
Generating train examples...: 1024 examples [03:44,  5.61 examples/s][A
Generating train examples...: 1030 examples [03:45,  5.69 examples/s][A
Generating train examples...: 1036 examples [03:46,  5.74 examples/s][A
Generating train examples...: 1042 examples [03:47,  5.78 examples/s][A
Generating train examples...: 1048 examples [03:48,  5.81 examples/s][A
Generating train examples...: 1054 examples [03:49,  5.83 examples/s][A
Generating train examples...: 1060 examples [03:50,  5.84 examples/s][A
Generating train examples...: 1066 examples [03:51,  5.86 examples/s][A
Generating train examples...: 1072 examples [03:52,  5.88 examples/s][A
Generating train examples...: 1078 examples [03:53,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1084 examples [03:59,  2.24 examples/s][A
Generating train examples...: 1090 examples [04:00,  2.76 examples/s][A
Generating train examples...: 1096 examples [04:01,  3.28 examples/s][A
Generating train examples...: 1102 examples [04:02,  3.80 examples/s][A
Generating train examples...: 1108 examples [04:03,  4.26 examples/s][A
Generating train examples...: 1114 examples [04:04,  4.65 examples/s][A
Generating train examples...: 1120 examples [04:05,  4.98 examples/s][A
Generating train examples...: 1126 examples [04:06,  5.22 examples/s][A
Generating train examples...: 1132 examples [04:07,  5.42 examples/s][A
Generating train examples...: 1138 examples [04:08,  5.56 examples/s][A
Generating train examples...: 1144 examples [04:09,  5.67 examples/s][A
Generating train examples...: 1150 examples [04:10,  5.74 examples/s][A
Generating train examples...: 1156 examples [04:11,  5.80 examples/s][A
Generating train examples...: 1162 examples [04:12,  5.84 examples/s][A
Generating train examples...: 1168 examples [04:13,  5.86 examples/s][A
Generating train examples...: 1174 examples [04:14,  5.88 examples/s][A
Generating train examples...: 1180 examples [04:15,  5.90 examples/s][A
Generating train examples...: 1186 examples [04:16,  5.91 examples/s][A
Generating train examples...: 1192 examples [04:18,  5.92 examples/s][A
Generating train examples...: 1198 examples [04:19,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1204 examples [04:25,  2.29 examples/s][A
Generating train examples...: 1210 examples [04:26,  2.80 examples/s][A
Generating train examples...: 1216 examples [04:27,  3.33 examples/s][A
Generating train examples...: 1222 examples [04:28,  3.83 examples/s][A
Generating train examples...: 1228 examples [04:29,  4.29 examples/s][A
Generating train examples...: 1234 examples [04:30,  4.67 examples/s][A
Generating train examples...: 1240 examples [04:31,  4.99 examples/s][A
Generating train examples...: 1246 examples [04:32,  5.24 examples/s][A
Generating train examples...: 1252 examples [04:33,  5.43 examples/s][A
Generating train examples...: 1258 examples [04:34,  5.57 examples/s][A
Generating train examples...: 1264 examples [04:35,  5.67 examples/s][A
Generating train examples...: 1270 examples [04:36,  5.75 examples/s][A
Generating train examples...: 1276 examples [04:37,  5.80 examples/s][A
Generating train examples...: 1282 examples [04:38,  5.84 examples/s][A
Generating train examples...: 1288 examples [04:39,  5.87 examples/s][A
Generating train examples...: 1294 examples [04:40,  5.88 examples/s][A
Generating train examples...: 1300 examples [04:41,  5.88 examples/s][A
Generating train examples...: 1306 examples [04:42,  5.89 examples/s][A
Generating train examples...: 1312 examples [04:43,  5.90 examples/s][A
Generating train examples...: 1318 examples [04:44,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1324 examples [04:51,  2.12 examples/s][A
Generating train examples...: 1330 examples [04:52,  2.63 examples/s][A
Generating train examples...: 1336 examples [04:53,  3.15 examples/s][A
Generating train examples...: 1342 examples [04:54,  3.66 examples/s][A
Generating train examples...: 1348 examples [04:55,  4.13 examples/s][A
Generating train examples...: 1354 examples [04:56,  4.54 examples/s][A
Generating train examples...: 1360 examples [04:57,  4.88 examples/s][A
Generating train examples...: 1366 examples [04:58,  5.15 examples/s][A
Generating train examples...: 1372 examples [04:59,  5.36 examples/s][A
Generating train examples...: 1378 examples [05:00,  5.51 examples/s][A
Generating train examples...: 1384 examples [05:01,  5.63 examples/s][A
Generating train examples...: 1390 examples [05:02,  5.71 examples/s][A
Generating train examples...: 1396 examples [05:03,  5.77 examples/s][A
Generating train examples...: 1402 examples [05:04,  5.81 examples/s][A
Generating train examples...: 1408 examples [05:05,  5.84 examples/s][A
Generating train examples...: 1414 examples [05:06,  5.86 examples/s][A
Generating train examples...: 1420 examples [05:07,  5.88 examples/s][A
Generating train examples...: 1426 examples [05:08,  5.88 examples/s][A
Generating train examples...: 1432 examples [05:09,  5.89 examples/s][A
Generating train examples...: 1438 examples [05:10,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1444 examples [05:17,  2.20 examples/s][A
Generating train examples...: 1450 examples [05:18,  2.71 examples/s][A
Generating train examples...: 1456 examples [05:19,  3.24 examples/s][A
Generating train examples...: 1462 examples [05:20,  3.75 examples/s][A
Generating train examples...: 1468 examples [05:21,  4.22 examples/s][A
Generating train examples...: 1474 examples [05:22,  4.62 examples/s][A
Generating train examples...: 1480 examples [05:23,  4.95 examples/s][A
Generating train examples...: 1486 examples [05:24,  5.21 examples/s][A
Generating train examples...: 1492 examples [05:25,  5.40 examples/s][A
Generating train examples...: 1498 examples [05:26,  5.54 examples/s][A
Generating train examples...: 1504 examples [05:27,  5.65 examples/s][A
Generating train examples...: 1510 examples [05:28,  5.73 examples/s][A
Generating train examples...: 1516 examples [05:29,  5.79 examples/s][A
Generating train examples...: 1522 examples [05:30,  5.83 examples/s][A
Generating train examples...: 1528 examples [05:31,  5.87 examples/s][A
Generating train examples...: 1534 examples [05:32,  5.89 examples/s][A
Generating train examples...: 1540 examples [05:33,  5.91 examples/s][A
Generating train examples...: 1546 examples [05:34,  5.92 examples/s][A
Generating train examples...: 1552 examples [05:35,  5.93 examples/s][A
Generating train examples...: 1558 examples [05:36,  5.93 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1564 examples [05:42,  2.41 examples/s][A
Generating train examples...: 1570 examples [05:43,  2.93 examples/s][A
Generating train examples...: 1576 examples [05:44,  3.45 examples/s][A
Generating train examples...: 1582 examples [05:45,  3.95 examples/s][A
Generating train examples...: 1588 examples [05:46,  4.39 examples/s][A
Generating train examples...: 1594 examples [05:47,  4.76 examples/s][A
Generating train examples...: 1600 examples [05:48,  5.06 examples/s][A
Generating train examples...: 1606 examples [05:49,  5.29 examples/s][A
Generating train examples...: 1612 examples [05:50,  5.47 examples/s][A
Generating train examples...: 1618 examples [05:51,  5.59 examples/s][A
Generating train examples...: 1624 examples [05:53,  5.69 examples/s][A
Generating train examples...: 1630 examples [05:54,  5.76 examples/s][A
Generating train examples...: 1636 examples [05:55,  5.80 examples/s][A
Generating train examples...: 1642 examples [05:56,  5.83 examples/s][A
Generating train examples...: 1648 examples [05:57,  5.85 examples/s][A
Generating train examples...: 1654 examples [05:58,  5.87 examples/s][A
Generating train examples...: 1660 examples [05:59,  5.88 examples/s][A
Generating train examples...: 1666 examples [06:00,  5.89 examples/s][A
Generating train examples...: 1672 examples [06:01,  5.90 examples/s][A
Generating train examples...: 1678 examples [06:02,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1684 examples [06:08,  2.35 examples/s][A
Generating train examples...: 1690 examples [06:09,  2.86 examples/s][A
Generating train examples...: 1696 examples [06:10,  3.39 examples/s][A
Generating train examples...: 1702 examples [06:11,  3.89 examples/s][A
Generating train examples...: 1708 examples [06:12,  4.34 examples/s][A
Generating train examples...: 1714 examples [06:13,  4.72 examples/s][A
Generating train examples...: 1720 examples [06:14,  5.02 examples/s][A
Generating train examples...: 1726 examples [06:15,  5.26 examples/s][A
Generating train examples...: 1732 examples [06:16,  5.44 examples/s][A
Generating train examples...: 1738 examples [06:17,  5.58 examples/s][A
Generating train examples...: 1744 examples [06:18,  5.68 examples/s][A
Generating train examples...: 1750 examples [06:19,  5.75 examples/s][A
Generating train examples...: 1756 examples [06:20,  5.80 examples/s][A
Generating train examples...: 1762 examples [06:21,  5.83 examples/s][A
Generating train examples...: 1768 examples [06:22,  5.85 examples/s][A
Generating train examples...: 1774 examples [06:23,  5.88 examples/s][A
Generating train examples...: 1780 examples [06:24,  5.88 examples/s][A
Generating train examples...: 1786 examples [06:25,  5.89 examples/s][A
Generating train examples...: 1792 examples [06:26,  5.89 examples/s][A
Generating train examples...: 1798 examples [06:27,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1804 examples [06:33,  2.38 examples/s][A
Generating train examples...: 1810 examples [06:34,  2.90 examples/s][A
Generating train examples...: 1816 examples [06:35,  3.43 examples/s][A
Generating train examples...: 1822 examples [06:36,  3.92 examples/s][A
Generating train examples...: 1828 examples [06:37,  4.36 examples/s][A
Generating train examples...: 1834 examples [06:38,  4.73 examples/s][A
Generating train examples...: 1840 examples [06:39,  5.03 examples/s][A
Generating train examples...: 1846 examples [06:40,  5.27 examples/s][A
Generating train examples...: 1852 examples [06:41,  5.45 examples/s][A
Generating train examples...: 1858 examples [06:42,  5.58 examples/s][A
Generating train examples...: 1864 examples [06:43,  5.67 examples/s][A
Generating train examples...: 1870 examples [06:44,  5.75 examples/s][A
Generating train examples...: 1876 examples [06:45,  5.80 examples/s][A
Generating train examples...: 1882 examples [06:46,  5.84 examples/s][A
Generating train examples...: 1888 examples [06:47,  5.87 examples/s][A
Generating train examples...: 1894 examples [06:48,  5.88 examples/s][A
Generating train examples...: 1900 examples [06:49,  5.89 examples/s][A
Generating train examples...: 1906 examples [06:50,  5.89 examples/s][A
Generating train examples...: 1912 examples [06:51,  5.91 examples/s][A
Generating train examples...: 1918 examples [06:52,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1924 examples [06:59,  2.21 examples/s][A
Generating train examples...: 1930 examples [07:00,  2.73 examples/s][A
Generating train examples...: 1936 examples [07:01,  3.25 examples/s][A
Generating train examples...: 1942 examples [07:02,  3.76 examples/s][A
Generating train examples...: 1948 examples [07:03,  4.22 examples/s][A
Generating train examples...: 1954 examples [07:04,  4.62 examples/s][A
Generating train examples...: 1960 examples [07:05,  4.95 examples/s][A
Generating train examples...: 1966 examples [07:06,  5.21 examples/s][A
Generating train examples...: 1972 examples [07:07,  5.41 examples/s][A
Generating train examples...: 1978 examples [07:08,  5.56 examples/s][A
Generating train examples...: 1984 examples [07:09,  5.66 examples/s][A
Generating train examples...: 1990 examples [07:10,  5.74 examples/s][A
Generating train examples...: 1996 examples [07:11,  5.80 examples/s][A
Generating train examples...: 2002 examples [07:12,  5.84 examples/s][A
Generating train examples...: 2008 examples [07:13,  5.87 examples/s][A
Generating train examples...: 2014 examples [07:14,  5.89 examples/s][A
Generating train examples...: 2020 examples [07:15,  5.91 examples/s][A
Generating train examples...: 2026 examples [07:16,  5.93 examples/s][A
Generating train examples...: 2032 examples [07:17,  5.94 examples/s][A
Generating train examples...: 2038 examples [07:18,  5.94 examples/s][A
                                                                     [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/2040 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 1/2040 [00:04<2:41:30,  4.75s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   1%|          | 16/2040 [00:04<07:28,  4.52 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 32/2040 [00:05<03:12, 10.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 48/2040 [00:05<01:52, 17.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   3%|▎         | 64/2040 [00:05<01:15, 26.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   4%|▍         | 80/2040 [00:05<00:55, 35.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▍         | 96/2040 [00:05<00:42, 45.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▌         | 112/2040 [00:05<00:34, 55.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   6%|▋         | 128/2040 [00:06<00:29, 64.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   7%|▋         | 143/2040 [00:06<00:31, 60.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   8%|▊         | 159/2040 [00:06<00:27, 69.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▊         | 175/2040 [00:06<00:24, 76.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▉         | 191/2040 [00:06<00:22, 83.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  10%|█         | 207/2040 [00:06<00:20, 89.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  11%|█         | 223/2040 [00:07<00:19, 94.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▏        | 239/2040 [00:07<00:18, 97.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 255/2040 [00:07<00:17, 100.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  13%|█▎        | 271/2040 [00:07<00:17, 98.70 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  14%|█▍        | 287/2040 [00:07<00:18, 95.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  15%|█▍        | 303/2040 [00:07<00:17, 97.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▌        | 319/2040 [00:08<00:17, 98.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▋        | 335/2040 [00:08<00:17, 99.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  17%|█▋        | 351/2040 [00:08<00:16, 101.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  18%|█▊        | 367/2040 [00:08<00:16, 101.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  19%|█▊        | 382/2040 [00:08<00:17, 95.18 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|█▉        | 398/2040 [00:08<00:17, 93.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|██        | 414/2040 [00:09<00:17, 95.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  21%|██        | 430/2040 [00:09<00:16, 99.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  22%|██▏       | 446/2040 [00:09<00:16, 98.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 462/2040 [00:09<00:15, 99.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 478/2040 [00:09<00:15, 101.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  24%|██▍       | 494/2040 [00:09<00:14, 103.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 510/2040 [00:09<00:15, 101.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  26%|██▌       | 526/2040 [00:10<00:14, 101.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 542/2040 [00:10<00:15, 97.90 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 558/2040 [00:10<00:15, 98.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  28%|██▊       | 574/2040 [00:10<00:15, 96.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  29%|██▉       | 590/2040 [00:10<00:15, 95.16 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|██▉       | 606/2040 [00:10<00:14, 97.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|███       | 622/2040 [00:11<00:14, 99.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  31%|███▏      | 638/2040 [00:11<00:14, 99.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  32%|███▏      | 653/2040 [00:11<00:13, 99.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  33%|███▎      | 669/2040 [00:11<00:13, 101.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▎      | 685/2040 [00:11<00:13, 99.17 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▍      | 701/2040 [00:11<00:13, 95.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  35%|███▌      | 717/2040 [00:12<00:13, 96.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  36%|███▌      | 733/2040 [00:12<00:13, 98.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  37%|███▋      | 749/2040 [00:12<00:13, 98.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 765/2040 [00:12<00:13, 96.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 781/2040 [00:12<00:13, 95.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  39%|███▉      | 797/2040 [00:12<00:12, 98.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  40%|███▉      | 813/2040 [00:13<00:12, 100.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████      | 829/2040 [00:13<00:12, 100.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████▏     | 845/2040 [00:13<00:11, 102.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  42%|████▏     | 861/2040 [00:13<00:11, 102.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  43%|████▎     | 877/2040 [00:13<00:11, 103.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  44%|████▎     | 892/2040 [00:13<00:11, 102.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▍     | 908/2040 [00:13<00:11, 102.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▌     | 924/2040 [00:14<00:10, 101.99 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  46%|████▌     | 940/2040 [00:14<00:10, 103.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  47%|████▋     | 956/2040 [00:14<00:10, 103.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 972/2040 [00:14<00:10, 101.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 988/2040 [00:14<00:10, 99.45 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  49%|████▉     | 1004/2040 [00:14<00:10, 99.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 1020/2040 [00:15<00:10, 100.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  51%|█████     | 1036/2040 [00:15<00:10, 99.30 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1052/2040 [00:15<00:09, 99.96 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1068/2040 [00:15<00:09, 98.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  53%|█████▎    | 1084/2040 [00:15<00:09, 97.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  54%|█████▍    | 1100/2040 [00:15<00:09, 98.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▍    | 1116/2040 [00:16<00:09, 97.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▌    | 1132/2040 [00:16<00:09, 97.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  56%|█████▋    | 1148/2040 [00:16<00:09, 97.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  57%|█████▋    | 1163/2040 [00:16<00:09, 96.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  58%|█████▊    | 1179/2040 [00:16<00:08, 97.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▊    | 1195/2040 [00:16<00:08, 101.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▉    | 1211/2040 [00:17<00:07, 103.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  60%|██████    | 1227/2040 [00:17<00:08, 100.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  61%|██████    | 1243/2040 [00:17<00:08, 98.44 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▏   | 1259/2040 [00:17<00:08, 97.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 1275/2040 [00:17<00:07, 97.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  63%|██████▎   | 1291/2040 [00:17<00:07, 97.99 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  64%|██████▍   | 1307/2040 [00:18<00:07, 99.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  65%|██████▍   | 1323/2040 [00:18<00:07, 100.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▌   | 1339/2040 [00:18<00:06, 101.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▋   | 1355/2040 [00:18<00:06, 99.97 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  67%|██████▋   | 1371/2040 [00:18<00:06, 100.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  68%|██████▊   | 1387/2040 [00:18<00:06, 99.66 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  69%|██████▊   | 1402/2040 [00:18<00:06, 99.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|██████▉   | 1418/2040 [00:19<00:06, 99.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|███████   | 1434/2040 [00:19<00:06, 100.96 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  71%|███████   | 1450/2040 [00:19<00:05, 101.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  72%|███████▏  | 1466/2040 [00:19<00:05, 100.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1482/2040 [00:19<00:05, 98.40 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1498/2040 [00:19<00:05, 99.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  74%|███████▍  | 1514/2040 [00:20<00:05, 100.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 1530/2040 [00:20<00:05, 101.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  76%|███████▌  | 1546/2040 [00:20<00:04, 101.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1562/2040 [00:20<00:04, 101.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1578/2040 [00:20<00:04, 101.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  78%|███████▊  | 1594/2040 [00:20<00:04, 102.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  79%|███████▉  | 1610/2040 [00:21<00:04, 102.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|███████▉  | 1626/2040 [00:21<00:04, 101.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|████████  | 1642/2040 [00:21<00:03, 100.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  81%|████████▏ | 1658/2040 [00:21<00:03, 101.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  82%|████████▏ | 1673/2040 [00:21<00:03, 101.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  83%|████████▎ | 1689/2040 [00:21<00:03, 96.63 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▎ | 1705/2040 [00:21<00:03, 96.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▍ | 1721/2040 [00:22<00:03, 94.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  85%|████████▌ | 1737/2040 [00:22<00:03, 94.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  86%|████████▌ | 1753/2040 [00:22<00:02, 95.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  87%|████████▋ | 1769/2040 [00:22<00:02, 96.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1785/2040 [00:22<00:02, 100.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1801/2040 [00:22<00:02, 101.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  89%|████████▉ | 1817/2040 [00:23<00:02, 99.68 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  90%|████████▉ | 1833/2040 [00:23<00:02, 98.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████ | 1849/2040 [00:23<00:01, 101.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████▏| 1865/2040 [00:23<00:01, 102.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  92%|█████████▏| 1881/2040 [00:23<00:01, 99.07 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  93%|█████████▎| 1897/2040 [00:23<00:01, 100.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  94%|█████████▎| 1912/2040 [00:24<00:01, 99.65 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▍| 1928/2040 [00:24<00:01, 97.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▌| 1944/2040 [00:24<00:00, 99.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  96%|█████████▌| 1960/2040 [00:24<00:00, 99.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  97%|█████████▋| 1976/2040 [00:24<00:00, 93.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 1992/2040 [00:24<00:00, 95.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2008/2040 [00:25<00:00, 95.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  99%|█████████▉| 2024/2040 [00:25<00:00, 97.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 2040/2040 [00:25<00:00, 98.79 examples/s][A
                                                                                                                                                                                                            [A                                                                Generating splits...:   0%|          | 0/2 [07:44<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [07:44<07:44, 464.88s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 2040 (shards: [16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.65s/ examples][A
Generating test examples...: 8 examples [00:06,  1.50 examples/s][A
Generating test examples...: 14 examples [00:07,  2.48 examples/s][A
Generating test examples...: 20 examples [00:08,  3.31 examples/s][A
Generating test examples...: 26 examples [00:09,  3.98 examples/s][A
Generating test examples...: 32 examples [00:10,  4.51 examples/s][A
Generating test examples...: 38 examples [00:11,  4.91 examples/s][A
Generating test examples...: 44 examples [00:12,  5.21 examples/s][A
Generating test examples...: 50 examples [00:13,  5.43 examples/s][A
Generating test examples...: 57 examples [00:15,  5.61 examples/s][A
Generating test examples...: 63 examples [00:16,  5.72 examples/s][A
Generating test examples...: 69 examples [00:17,  5.80 examples/s][A
Generating test examples...: 76 examples [00:18,  5.86 examples/s][A
Generating test examples...: 82 examples [00:19,  5.90 examples/s][A
Generating test examples...: 88 examples [00:20,  5.93 examples/s][A
Generating test examples...: 94 examples [00:21,  5.94 examples/s][A
Generating test examples...: 100 examples [00:22,  5.95 examples/s][A
Generating test examples...: 106 examples [00:23,  5.96 examples/s][A
Generating test examples...: 112 examples [00:24,  5.97 examples/s][A
Generating test examples...: 118 examples [00:25,  5.98 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 103.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 103.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 103.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 104.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 106.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 106.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 106.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 105.81 examples/s][A
                                                                                                                                                                                                          [A                                                                         Generating splits...:  50%|█████     | 1/2 [08:11<07:44, 464.88s/ splits]Generating splits...: 100%|██████████| 2/2 [08:11<00:00, 207.15s/ splits]                                                                         INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0.incompleteJP45EZ/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/all_e1/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, all subjects except 1
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e1/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=9.77 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=2040, num_shards=128>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all_e2/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.34s/ examples][A
Generating train examples...: 8 examples [00:06,  1.57 examples/s][A
Generating train examples...: 14 examples [00:07,  2.57 examples/s][A
Generating train examples...: 20 examples [00:08,  3.40 examples/s][A
Generating train examples...: 26 examples [00:09,  4.07 examples/s][A
Generating train examples...: 32 examples [00:10,  4.58 examples/s][A
Generating train examples...: 38 examples [00:11,  4.98 examples/s][A
Generating train examples...: 45 examples [00:12,  5.30 examples/s][A
Generating train examples...: 51 examples [00:13,  5.49 examples/s][A
Generating train examples...: 57 examples [00:14,  5.63 examples/s][A
Generating train examples...: 63 examples [00:15,  5.73 examples/s][A
Generating train examples...: 69 examples [00:16,  5.80 examples/s][A
Generating train examples...: 75 examples [00:17,  5.85 examples/s][A
Generating train examples...: 81 examples [00:18,  5.89 examples/s][A
Generating train examples...: 87 examples [00:19,  5.92 examples/s][A
Generating train examples...: 93 examples [00:20,  5.93 examples/s][A
Generating train examples...: 99 examples [00:21,  5.95 examples/s][A
Generating train examples...: 105 examples [00:22,  5.94 examples/s][A
Generating train examples...: 111 examples [00:23,  5.95 examples/s][A
Generating train examples...: 117 examples [00:24,  5.96 examples/s][Acsp shape (120, 64, 1920)
Subject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 123 examples [00:30,  2.37 examples/s][A
Generating train examples...: 129 examples [00:31,  2.90 examples/s][A
Generating train examples...: 135 examples [00:32,  3.42 examples/s][A
Generating train examples...: 141 examples [00:33,  3.92 examples/s][A
Generating train examples...: 147 examples [00:34,  4.36 examples/s][A
Generating train examples...: 153 examples [00:35,  4.75 examples/s][A
Generating train examples...: 159 examples [00:36,  5.06 examples/s][A
Generating train examples...: 165 examples [00:37,  5.31 examples/s][A
Generating train examples...: 171 examples [00:38,  5.49 examples/s][A
Generating train examples...: 177 examples [00:39,  5.63 examples/s][A
Generating train examples...: 183 examples [00:40,  5.73 examples/s][A
Generating train examples...: 189 examples [00:41,  5.80 examples/s][A
Generating train examples...: 195 examples [00:42,  5.86 examples/s][A
Generating train examples...: 201 examples [00:43,  5.89 examples/s][A
Generating train examples...: 207 examples [00:44,  5.92 examples/s][A
Generating train examples...: 213 examples [00:45,  5.94 examples/s][A
Generating train examples...: 219 examples [00:47,  5.08 examples/s][A
Generating train examples...: 225 examples [00:48,  5.31 examples/s][A
Generating train examples...: 231 examples [00:49,  5.49 examples/s][A
Generating train examples...: 237 examples [00:50,  5.62 examples/s][Acsp shape (120, 64, 1920)
Subject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 243 examples [00:57,  2.05 examples/s][A
Generating train examples...: 249 examples [00:58,  2.55 examples/s][A
Generating train examples...: 255 examples [00:59,  3.08 examples/s][A
Generating train examples...: 261 examples [01:00,  3.60 examples/s][A
Generating train examples...: 267 examples [01:01,  4.08 examples/s][A
Generating train examples...: 273 examples [01:02,  4.50 examples/s][A
Generating train examples...: 279 examples [01:03,  4.85 examples/s][A
Generating train examples...: 285 examples [01:04,  5.13 examples/s][A
Generating train examples...: 291 examples [01:05,  5.36 examples/s][A
Generating train examples...: 297 examples [01:06,  5.52 examples/s][A
Generating train examples...: 303 examples [01:07,  5.64 examples/s][A
Generating train examples...: 309 examples [01:08,  5.73 examples/s][A
Generating train examples...: 315 examples [01:09,  5.78 examples/s][A
Generating train examples...: 321 examples [01:10,  5.82 examples/s][A
Generating train examples...: 327 examples [01:11,  5.85 examples/s][A
Generating train examples...: 333 examples [01:12,  5.87 examples/s][A
Generating train examples...: 339 examples [01:13,  5.89 examples/s][A
Generating train examples...: 345 examples [01:14,  5.90 examples/s][A
Generating train examples...: 351 examples [01:15,  5.92 examples/s][A
Generating train examples...: 357 examples [01:16,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 363 examples [01:24,  2.08 examples/s][A
Generating train examples...: 369 examples [01:25,  2.58 examples/s][A
Generating train examples...: 375 examples [01:26,  3.10 examples/s][A
Generating train examples...: 381 examples [01:27,  3.62 examples/s][A
Generating train examples...: 387 examples [01:28,  4.09 examples/s][A
Generating train examples...: 393 examples [01:29,  4.50 examples/s][A
Generating train examples...: 399 examples [01:30,  4.84 examples/s][A
Generating train examples...: 405 examples [01:31,  5.12 examples/s][A
Generating train examples...: 411 examples [01:32,  5.34 examples/s][A
Generating train examples...: 417 examples [01:33,  5.49 examples/s][A
Generating train examples...: 423 examples [01:34,  5.61 examples/s][A
Generating train examples...: 429 examples [01:35,  5.70 examples/s][A
Generating train examples...: 435 examples [01:36,  5.76 examples/s][A
Generating train examples...: 441 examples [01:37,  5.81 examples/s][A
Generating train examples...: 447 examples [01:38,  5.85 examples/s][A
Generating train examples...: 453 examples [01:39,  5.87 examples/s][A
Generating train examples...: 459 examples [01:40,  5.89 examples/s][A
Generating train examples...: 465 examples [01:41,  5.90 examples/s][A
Generating train examples...: 471 examples [01:42,  5.90 examples/s][A
Generating train examples...: 477 examples [01:43,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 483 examples [01:50,  2.22 examples/s][A
Generating train examples...: 489 examples [01:51,  2.73 examples/s][A
Generating train examples...: 495 examples [01:52,  3.25 examples/s][A
Generating train examples...: 501 examples [01:53,  3.76 examples/s][A
Generating train examples...: 507 examples [01:54,  4.21 examples/s][A
Generating train examples...: 513 examples [01:55,  4.61 examples/s][A
Generating train examples...: 519 examples [01:56,  4.93 examples/s][A
Generating train examples...: 525 examples [01:57,  5.18 examples/s][A
Generating train examples...: 531 examples [01:58,  5.37 examples/s][A
Generating train examples...: 537 examples [01:59,  5.52 examples/s][A
Generating train examples...: 543 examples [02:00,  5.62 examples/s][A
Generating train examples...: 549 examples [02:01,  5.69 examples/s][A
Generating train examples...: 555 examples [02:02,  5.74 examples/s][A
Generating train examples...: 561 examples [02:03,  5.78 examples/s][A
Generating train examples...: 567 examples [02:04,  5.81 examples/s][A
Generating train examples...: 573 examples [02:05,  5.84 examples/s][A
Generating train examples...: 579 examples [02:06,  5.86 examples/s][A
Generating train examples...: 585 examples [02:07,  5.86 examples/s][A
Generating train examples...: 591 examples [02:08,  5.87 examples/s][A
Generating train examples...: 597 examples [02:09,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 603 examples [02:16,  2.17 examples/s][A
Generating train examples...: 609 examples [02:17,  2.68 examples/s][A
Generating train examples...: 615 examples [02:18,  3.20 examples/s][A
Generating train examples...: 621 examples [02:19,  3.71 examples/s][A
Generating train examples...: 627 examples [02:20,  4.17 examples/s][A
Generating train examples...: 633 examples [02:21,  4.56 examples/s][A
Generating train examples...: 639 examples [02:22,  4.88 examples/s][A
Generating train examples...: 645 examples [02:23,  5.14 examples/s][A
Generating train examples...: 651 examples [02:24,  5.34 examples/s][A
Generating train examples...: 657 examples [02:25,  5.49 examples/s][A
Generating train examples...: 663 examples [02:26,  5.60 examples/s][A
Generating train examples...: 669 examples [02:27,  5.69 examples/s][A
Generating train examples...: 675 examples [02:28,  5.75 examples/s][A
Generating train examples...: 681 examples [02:29,  5.79 examples/s][A
Generating train examples...: 687 examples [02:30,  5.82 examples/s][A
Generating train examples...: 693 examples [02:31,  5.83 examples/s][A
Generating train examples...: 699 examples [02:32,  5.84 examples/s][A
Generating train examples...: 705 examples [02:33,  5.84 examples/s][A
Generating train examples...: 711 examples [02:34,  5.85 examples/s][A
Generating train examples...: 717 examples [02:35,  5.86 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 723 examples [02:42,  2.11 examples/s][A
Generating train examples...: 729 examples [02:43,  2.61 examples/s][A
Generating train examples...: 735 examples [02:44,  3.14 examples/s][A
Generating train examples...: 741 examples [02:45,  3.66 examples/s][A
Generating train examples...: 747 examples [02:46,  4.13 examples/s][A
Generating train examples...: 753 examples [02:47,  4.53 examples/s][A
Generating train examples...: 759 examples [02:48,  4.87 examples/s][A
Generating train examples...: 765 examples [02:49,  5.14 examples/s][A
Generating train examples...: 771 examples [02:50,  5.35 examples/s][A
Generating train examples...: 777 examples [02:52,  5.50 examples/s][A
Generating train examples...: 783 examples [02:53,  5.62 examples/s][A
Generating train examples...: 789 examples [02:54,  5.71 examples/s][A
Generating train examples...: 795 examples [02:55,  5.78 examples/s][A
Generating train examples...: 801 examples [02:56,  5.81 examples/s][A
Generating train examples...: 807 examples [02:57,  5.84 examples/s][A
Generating train examples...: 813 examples [02:58,  5.85 examples/s][A
Generating train examples...: 819 examples [02:59,  5.87 examples/s][A
Generating train examples...: 825 examples [03:00,  5.89 examples/s][A
Generating train examples...: 831 examples [03:01,  5.90 examples/s][A
Generating train examples...: 837 examples [03:02,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 843 examples [03:08,  2.32 examples/s][A
Generating train examples...: 849 examples [03:09,  2.84 examples/s][A
Generating train examples...: 855 examples [03:10,  3.36 examples/s][A
Generating train examples...: 861 examples [03:11,  3.87 examples/s][A
Generating train examples...: 867 examples [03:12,  4.32 examples/s][A
Generating train examples...: 873 examples [03:13,  4.70 examples/s][A
Generating train examples...: 879 examples [03:14,  5.01 examples/s][A
Generating train examples...: 885 examples [03:15,  5.26 examples/s][A
Generating train examples...: 891 examples [03:16,  5.44 examples/s][A
Generating train examples...: 897 examples [03:17,  5.56 examples/s][A
Generating train examples...: 903 examples [03:18,  5.66 examples/s][A
Generating train examples...: 909 examples [03:19,  5.75 examples/s][A
Generating train examples...: 915 examples [03:20,  5.80 examples/s][A
Generating train examples...: 921 examples [03:21,  5.83 examples/s][A
Generating train examples...: 927 examples [03:22,  5.85 examples/s][A
Generating train examples...: 933 examples [03:23,  5.87 examples/s][A
Generating train examples...: 939 examples [03:24,  5.89 examples/s][A
Generating train examples...: 945 examples [03:25,  5.88 examples/s][A
Generating train examples...: 951 examples [03:26,  5.89 examples/s][A
Generating train examples...: 957 examples [03:27,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 963 examples [03:34,  2.22 examples/s][A
Generating train examples...: 969 examples [03:35,  2.74 examples/s][A
Generating train examples...: 975 examples [03:36,  3.26 examples/s][A
Generating train examples...: 981 examples [03:37,  3.77 examples/s][A
Generating train examples...: 987 examples [03:38,  4.23 examples/s][A
Generating train examples...: 993 examples [03:39,  4.61 examples/s][A
Generating train examples...: 999 examples [03:40,  4.93 examples/s][A
Generating train examples...: 1005 examples [03:41,  5.18 examples/s][A
Generating train examples...: 1011 examples [03:42,  5.36 examples/s][A
Generating train examples...: 1017 examples [03:43,  5.52 examples/s][A
Generating train examples...: 1023 examples [03:44,  5.61 examples/s][A
Generating train examples...: 1029 examples [03:45,  5.69 examples/s][A
Generating train examples...: 1035 examples [03:46,  5.75 examples/s][A
Generating train examples...: 1041 examples [03:47,  5.78 examples/s][A
Generating train examples...: 1047 examples [03:48,  5.82 examples/s][A
Generating train examples...: 1053 examples [03:49,  5.83 examples/s][A
Generating train examples...: 1059 examples [03:50,  5.85 examples/s][A
Generating train examples...: 1065 examples [03:51,  5.87 examples/s][A
Generating train examples...: 1071 examples [03:52,  5.88 examples/s][A
Generating train examples...: 1077 examples [03:53,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1083 examples [03:59,  2.31 examples/s][A
Generating train examples...: 1089 examples [04:00,  2.82 examples/s][A
Generating train examples...: 1095 examples [04:01,  3.34 examples/s][A
Generating train examples...: 1101 examples [04:02,  3.85 examples/s][A
Generating train examples...: 1107 examples [04:04,  4.29 examples/s][A
Generating train examples...: 1113 examples [04:05,  4.68 examples/s][A
Generating train examples...: 1119 examples [04:06,  4.98 examples/s][A
Generating train examples...: 1125 examples [04:07,  5.23 examples/s][A
Generating train examples...: 1131 examples [04:08,  5.43 examples/s][A
Generating train examples...: 1137 examples [04:09,  5.57 examples/s][A
Generating train examples...: 1143 examples [04:10,  5.66 examples/s][A
Generating train examples...: 1149 examples [04:11,  5.72 examples/s][A
Generating train examples...: 1155 examples [04:12,  5.78 examples/s][A
Generating train examples...: 1161 examples [04:13,  5.83 examples/s][A
Generating train examples...: 1167 examples [04:14,  5.85 examples/s][A
Generating train examples...: 1173 examples [04:15,  5.87 examples/s][A
Generating train examples...: 1179 examples [04:16,  5.88 examples/s][A
Generating train examples...: 1185 examples [04:17,  5.88 examples/s][A
Generating train examples...: 1191 examples [04:18,  5.87 examples/s][A
Generating train examples...: 1197 examples [04:19,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1203 examples [04:25,  2.24 examples/s][A
Generating train examples...: 1209 examples [04:26,  2.76 examples/s][A
Generating train examples...: 1215 examples [04:27,  3.29 examples/s][A
Generating train examples...: 1221 examples [04:28,  3.79 examples/s][A
Generating train examples...: 1227 examples [04:29,  4.25 examples/s][A
Generating train examples...: 1233 examples [04:30,  4.64 examples/s][A
Generating train examples...: 1239 examples [04:31,  4.95 examples/s][A
Generating train examples...: 1245 examples [04:32,  5.20 examples/s][A
Generating train examples...: 1251 examples [04:33,  5.39 examples/s][A
Generating train examples...: 1257 examples [04:34,  5.53 examples/s][A
Generating train examples...: 1263 examples [04:35,  5.64 examples/s][A
Generating train examples...: 1269 examples [04:36,  5.71 examples/s][A
Generating train examples...: 1275 examples [04:37,  5.78 examples/s][A
Generating train examples...: 1281 examples [04:38,  5.81 examples/s][A
Generating train examples...: 1287 examples [04:40,  5.83 examples/s][A
Generating train examples...: 1293 examples [04:41,  5.84 examples/s][A
Generating train examples...: 1299 examples [04:42,  5.86 examples/s][A
Generating train examples...: 1305 examples [04:43,  5.87 examples/s][A
Generating train examples...: 1311 examples [04:44,  5.88 examples/s][A
Generating train examples...: 1317 examples [04:45,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1323 examples [04:51,  2.31 examples/s][A
Generating train examples...: 1329 examples [04:52,  2.83 examples/s][A
Generating train examples...: 1335 examples [04:53,  3.35 examples/s][A
Generating train examples...: 1341 examples [04:54,  3.86 examples/s][A
Generating train examples...: 1347 examples [04:55,  4.31 examples/s][A
Generating train examples...: 1353 examples [04:56,  4.70 examples/s][A
Generating train examples...: 1359 examples [04:57,  5.01 examples/s][A
Generating train examples...: 1365 examples [04:58,  5.26 examples/s][A
Generating train examples...: 1371 examples [04:59,  5.45 examples/s][A
Generating train examples...: 1377 examples [05:00,  5.60 examples/s][A
Generating train examples...: 1383 examples [05:01,  5.70 examples/s][A
Generating train examples...: 1389 examples [05:02,  5.78 examples/s][A
Generating train examples...: 1395 examples [05:03,  5.83 examples/s][A
Generating train examples...: 1401 examples [05:04,  5.86 examples/s][A
Generating train examples...: 1407 examples [05:05,  5.89 examples/s][A
Generating train examples...: 1413 examples [05:06,  5.90 examples/s][A
Generating train examples...: 1419 examples [05:07,  5.90 examples/s][A
Generating train examples...: 1425 examples [05:08,  5.91 examples/s][A
Generating train examples...: 1431 examples [05:09,  5.92 examples/s][A
Generating train examples...: 1437 examples [05:10,  5.92 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1443 examples [05:16,  2.33 examples/s][A
Generating train examples...: 1449 examples [05:17,  2.85 examples/s][A
Generating train examples...: 1455 examples [05:18,  3.37 examples/s][A
Generating train examples...: 1461 examples [05:19,  3.87 examples/s][A
Generating train examples...: 1467 examples [05:20,  4.31 examples/s][A
Generating train examples...: 1473 examples [05:21,  4.69 examples/s][A
Generating train examples...: 1479 examples [05:22,  5.01 examples/s][A
Generating train examples...: 1485 examples [05:23,  5.24 examples/s][A
Generating train examples...: 1491 examples [05:24,  5.44 examples/s][A
Generating train examples...: 1497 examples [05:25,  5.57 examples/s][A
Generating train examples...: 1503 examples [05:26,  5.65 examples/s][A
Generating train examples...: 1509 examples [05:27,  5.73 examples/s][A
Generating train examples...: 1515 examples [05:28,  5.79 examples/s][A
Generating train examples...: 1521 examples [05:29,  5.83 examples/s][A
Generating train examples...: 1527 examples [05:31,  5.85 examples/s][A
Generating train examples...: 1533 examples [05:32,  5.85 examples/s][A
Generating train examples...: 1539 examples [05:33,  5.87 examples/s][A
Generating train examples...: 1545 examples [05:34,  5.87 examples/s][A
Generating train examples...: 1551 examples [05:35,  5.88 examples/s][A
Generating train examples...: 1557 examples [05:36,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1563 examples [05:42,  2.19 examples/s][A
Generating train examples...: 1569 examples [05:43,  2.70 examples/s][A
Generating train examples...: 1575 examples [05:44,  3.22 examples/s][A
Generating train examples...: 1581 examples [05:45,  3.73 examples/s][A
Generating train examples...: 1587 examples [05:46,  4.19 examples/s][A
Generating train examples...: 1593 examples [05:47,  4.60 examples/s][A
Generating train examples...: 1599 examples [05:48,  4.93 examples/s][A
Generating train examples...: 1605 examples [05:49,  5.19 examples/s][A
Generating train examples...: 1611 examples [05:50,  5.39 examples/s][A
Generating train examples...: 1617 examples [05:52,  5.54 examples/s][A
Generating train examples...: 1623 examples [05:53,  5.65 examples/s][A
Generating train examples...: 1629 examples [05:54,  5.74 examples/s][A
Generating train examples...: 1635 examples [05:55,  5.79 examples/s][A
Generating train examples...: 1641 examples [05:56,  5.83 examples/s][A
Generating train examples...: 1647 examples [05:57,  5.85 examples/s][A
Generating train examples...: 1653 examples [05:58,  5.87 examples/s][A
Generating train examples...: 1659 examples [05:59,  5.89 examples/s][A
Generating train examples...: 1665 examples [06:00,  5.90 examples/s][A
Generating train examples...: 1671 examples [06:01,  5.90 examples/s][A
Generating train examples...: 1677 examples [06:02,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1683 examples [06:08,  2.28 examples/s][A
Generating train examples...: 1689 examples [06:09,  2.79 examples/s][A
Generating train examples...: 1695 examples [06:10,  3.32 examples/s][A
Generating train examples...: 1701 examples [06:11,  3.82 examples/s][A
Generating train examples...: 1707 examples [06:12,  4.27 examples/s][A
Generating train examples...: 1713 examples [06:13,  4.66 examples/s][A
Generating train examples...: 1719 examples [06:14,  4.98 examples/s][A
Generating train examples...: 1725 examples [06:15,  5.22 examples/s][A
Generating train examples...: 1731 examples [06:16,  5.41 examples/s][A
Generating train examples...: 1737 examples [06:17,  5.55 examples/s][A
Generating train examples...: 1743 examples [06:18,  5.65 examples/s][A
Generating train examples...: 1749 examples [06:19,  5.72 examples/s][A
Generating train examples...: 1755 examples [06:20,  5.78 examples/s][A
Generating train examples...: 1761 examples [06:21,  5.81 examples/s][A
Generating train examples...: 1767 examples [06:22,  5.85 examples/s][A
Generating train examples...: 1773 examples [06:23,  5.87 examples/s][A
Generating train examples...: 1779 examples [06:24,  5.88 examples/s][A
Generating train examples...: 1785 examples [06:25,  5.89 examples/s][A
Generating train examples...: 1791 examples [06:26,  5.89 examples/s][A
Generating train examples...: 1797 examples [06:27,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1803 examples [06:35,  1.98 examples/s][A
Generating train examples...: 1809 examples [06:36,  2.47 examples/s][A
Generating train examples...: 1815 examples [06:37,  3.00 examples/s][A
Generating train examples...: 1821 examples [06:38,  3.52 examples/s][A
Generating train examples...: 1827 examples [06:39,  4.01 examples/s][A
Generating train examples...: 1833 examples [06:40,  4.44 examples/s][A
Generating train examples...: 1839 examples [06:41,  4.79 examples/s][A
Generating train examples...: 1845 examples [06:42,  5.08 examples/s][A
Generating train examples...: 1851 examples [06:43,  5.32 examples/s][A
Generating train examples...: 1857 examples [06:44,  5.48 examples/s][A
Generating train examples...: 1863 examples [06:45,  5.61 examples/s][A
Generating train examples...: 1869 examples [06:46,  5.69 examples/s][A
Generating train examples...: 1875 examples [06:47,  5.75 examples/s][A
Generating train examples...: 1881 examples [06:48,  5.81 examples/s][A
Generating train examples...: 1887 examples [06:49,  5.83 examples/s][A
Generating train examples...: 1893 examples [06:50,  5.86 examples/s][A
Generating train examples...: 1899 examples [06:51,  5.88 examples/s][A
Generating train examples...: 1905 examples [06:52,  5.90 examples/s][A
Generating train examples...: 1911 examples [06:53,  5.90 examples/s][A
Generating train examples...: 1917 examples [06:54,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1923 examples [07:01,  2.25 examples/s][A
Generating train examples...: 1929 examples [07:02,  2.76 examples/s][A
Generating train examples...: 1935 examples [07:03,  3.29 examples/s][A
Generating train examples...: 1941 examples [07:04,  3.79 examples/s][A
Generating train examples...: 1947 examples [07:05,  4.24 examples/s][A
Generating train examples...: 1953 examples [07:06,  4.63 examples/s][A
Generating train examples...: 1959 examples [07:07,  4.94 examples/s][A
Generating train examples...: 1965 examples [07:08,  5.18 examples/s][A
Generating train examples...: 1971 examples [07:09,  5.36 examples/s][A
Generating train examples...: 1977 examples [07:10,  5.51 examples/s][A
Generating train examples...: 1983 examples [07:11,  5.61 examples/s][A
Generating train examples...: 1989 examples [07:12,  5.68 examples/s][A
Generating train examples...: 1995 examples [07:13,  5.74 examples/s][A
Generating train examples...: 2001 examples [07:14,  5.78 examples/s][A
Generating train examples...: 2007 examples [07:15,  5.80 examples/s][A
Generating train examples...: 2013 examples [07:16,  5.82 examples/s][A
Generating train examples...: 2019 examples [07:17,  5.84 examples/s][A
Generating train examples...: 2025 examples [07:18,  5.85 examples/s][A
Generating train examples...: 2031 examples [07:19,  5.85 examples/s][A
Generating train examples...: 2037 examples [07:20,  5.86 examples/s][A
                                                                     [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/2040 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 1/2040 [02:08<72:49:32, 128.58s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   1%|          | 16/2040 [02:08<3:13:45,  5.74s/ examples] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 32/2040 [02:08<1:18:28,  2.34s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 48/2040 [02:09<42:18,  1.27s/ examples]  [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   3%|▎         | 64/2040 [02:09<25:29,  1.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   4%|▍         | 80/2040 [02:09<16:16,  2.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▍         | 96/2040 [02:09<10:45,  3.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▌         | 112/2040 [02:09<07:16,  4.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   6%|▋         | 128/2040 [02:09<05:01,  6.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   7%|▋         | 143/2040 [02:10<03:34,  8.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   8%|▊         | 159/2040 [02:10<02:31, 12.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▊         | 175/2040 [02:10<01:49, 17.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▉         | 191/2040 [02:10<01:20, 22.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  10%|█         | 207/2040 [02:10<01:00, 30.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  11%|█         | 223/2040 [02:10<00:47, 38.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▏        | 239/2040 [02:10<00:38, 47.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 255/2040 [02:11<00:31, 56.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  13%|█▎        | 271/2040 [02:11<00:27, 65.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  14%|█▍        | 287/2040 [02:11<00:23, 73.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  15%|█▍        | 303/2040 [02:11<00:21, 81.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▌        | 319/2040 [02:11<00:19, 87.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▋        | 335/2040 [02:11<00:18, 91.09 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  17%|█▋        | 351/2040 [02:12<00:17, 94.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  18%|█▊        | 367/2040 [02:12<00:17, 93.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  19%|█▊        | 382/2040 [02:12<00:17, 96.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|█▉        | 398/2040 [02:12<00:16, 98.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|██        | 414/2040 [02:12<00:16, 99.99 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  21%|██        | 430/2040 [02:12<00:15, 103.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  22%|██▏       | 446/2040 [02:12<00:15, 104.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 462/2040 [02:13<00:14, 106.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 478/2040 [02:13<00:15, 104.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  24%|██▍       | 494/2040 [02:13<00:15, 103.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 510/2040 [02:13<00:14, 105.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  26%|██▌       | 526/2040 [02:13<00:13, 108.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 542/2040 [02:13<00:13, 109.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 558/2040 [02:13<00:13, 110.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  28%|██▊       | 574/2040 [02:14<00:13, 111.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  29%|██▉       | 590/2040 [02:14<00:13, 105.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|██▉       | 606/2040 [02:14<00:13, 103.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|███       | 622/2040 [02:14<00:13, 104.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  31%|███▏      | 638/2040 [02:14<00:13, 101.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  32%|███▏      | 653/2040 [02:14<00:13, 99.81 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  33%|███▎      | 669/2040 [02:15<00:13, 99.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▎      | 685/2040 [02:15<00:13, 99.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▍      | 701/2040 [02:15<00:13, 99.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  35%|███▌      | 717/2040 [02:15<00:13, 100.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  36%|███▌      | 733/2040 [02:15<00:12, 100.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  37%|███▋      | 749/2040 [02:15<00:12, 102.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 765/2040 [02:16<00:14, 85.88 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 781/2040 [02:16<00:14, 88.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  39%|███▉      | 797/2040 [02:16<00:13, 94.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  40%|███▉      | 813/2040 [02:16<00:12, 98.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████      | 829/2040 [02:16<00:11, 101.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████▏     | 845/2040 [02:16<00:11, 103.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  42%|████▏     | 861/2040 [02:17<00:11, 105.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  43%|████▎     | 877/2040 [02:17<00:10, 106.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  44%|████▎     | 892/2040 [02:17<00:10, 105.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▍     | 908/2040 [02:17<00:10, 104.58 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▌     | 924/2040 [02:17<00:10, 106.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  46%|████▌     | 940/2040 [02:17<00:10, 106.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  47%|████▋     | 956/2040 [02:17<00:10, 107.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 972/2040 [02:18<00:09, 108.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 988/2040 [02:18<00:09, 108.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  49%|████▉     | 1004/2040 [02:18<00:09, 106.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 1020/2040 [02:18<00:09, 104.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  51%|█████     | 1036/2040 [02:18<00:09, 101.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1052/2040 [02:18<00:09, 101.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1068/2040 [02:18<00:09, 100.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  53%|█████▎    | 1084/2040 [02:19<00:09, 102.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  54%|█████▍    | 1100/2040 [02:19<00:08, 105.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▍    | 1116/2040 [02:19<00:08, 106.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▌    | 1132/2040 [02:19<00:08, 102.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  56%|█████▋    | 1148/2040 [02:19<00:08, 99.30 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  57%|█████▋    | 1163/2040 [02:19<00:09, 96.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  58%|█████▊    | 1179/2040 [02:20<00:08, 97.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▊    | 1195/2040 [02:20<00:08, 99.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▉    | 1211/2040 [02:20<00:08, 101.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  60%|██████    | 1227/2040 [02:20<00:07, 102.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  61%|██████    | 1243/2040 [02:20<00:07, 101.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▏   | 1259/2040 [02:20<00:07, 104.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 1275/2040 [02:21<00:07, 105.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  63%|██████▎   | 1291/2040 [02:21<00:07, 105.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  64%|██████▍   | 1307/2040 [02:21<00:07, 101.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  65%|██████▍   | 1323/2040 [02:21<00:07, 100.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▌   | 1339/2040 [02:21<00:06, 100.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▋   | 1355/2040 [02:21<00:06, 101.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  67%|██████▋   | 1371/2040 [02:21<00:06, 99.11 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  68%|██████▊   | 1387/2040 [02:22<00:06, 96.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  69%|██████▊   | 1402/2040 [02:22<00:06, 94.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|██████▉   | 1418/2040 [02:22<00:06, 90.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|███████   | 1434/2040 [02:22<00:06, 90.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  71%|███████   | 1450/2040 [02:22<00:06, 93.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  72%|███████▏  | 1466/2040 [02:23<00:06, 94.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1482/2040 [02:23<00:05, 94.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1498/2040 [02:23<00:05, 95.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  74%|███████▍  | 1514/2040 [02:23<00:05, 96.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 1530/2040 [02:23<00:05, 96.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  76%|███████▌  | 1546/2040 [02:23<00:05, 97.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1562/2040 [02:23<00:04, 99.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1578/2040 [02:24<00:04, 96.57 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  78%|███████▊  | 1594/2040 [02:24<00:04, 94.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  79%|███████▉  | 1610/2040 [02:24<00:04, 94.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|███████▉  | 1626/2040 [02:24<00:04, 93.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|████████  | 1642/2040 [02:24<00:04, 95.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  81%|████████▏ | 1658/2040 [02:25<00:03, 96.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  82%|████████▏ | 1673/2040 [02:25<00:03, 97.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  83%|████████▎ | 1689/2040 [02:25<00:03, 98.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▎ | 1705/2040 [02:25<00:03, 99.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▍ | 1721/2040 [02:25<00:03, 99.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  85%|████████▌ | 1737/2040 [02:25<00:03, 98.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  86%|████████▌ | 1753/2040 [02:25<00:02, 99.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  87%|████████▋ | 1769/2040 [02:26<00:02, 93.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1785/2040 [02:26<00:02, 93.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1801/2040 [02:26<00:02, 94.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  89%|████████▉ | 1817/2040 [02:26<00:02, 93.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  90%|████████▉ | 1833/2040 [02:26<00:02, 95.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████ | 1849/2040 [02:26<00:01, 97.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████▏| 1865/2040 [02:27<00:01, 97.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  92%|█████████▏| 1881/2040 [02:27<00:01, 97.91 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  93%|█████████▎| 1897/2040 [02:27<00:01, 98.31 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  94%|█████████▎| 1912/2040 [02:27<00:01, 98.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▍| 1928/2040 [02:27<00:01, 99.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▌| 1944/2040 [02:27<00:00, 100.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  96%|█████████▌| 1960/2040 [02:28<00:00, 100.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  97%|█████████▋| 1976/2040 [02:28<00:00, 99.15 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 1992/2040 [02:28<00:00, 100.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2008/2040 [02:28<00:00, 95.49 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  99%|█████████▉| 2024/2040 [02:28<00:00, 95.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 2040/2040 [02:28<00:00, 93.22 examples/s][A
                                                                                                                                                                                                            [A                                                                Generating splits...:   0%|          | 0/2 [09:50<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [09:50<09:50, 590.84s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 2040 (shards: [16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.52s/ examples][A
Generating test examples...: 7 examples [00:06,  1.38 examples/s][A
Generating test examples...: 13 examples [00:07,  2.42 examples/s][A
Generating test examples...: 19 examples [00:08,  3.30 examples/s][A
Generating test examples...: 25 examples [00:09,  3.99 examples/s][A
Generating test examples...: 31 examples [00:10,  4.52 examples/s][A
Generating test examples...: 37 examples [00:11,  4.93 examples/s][A
Generating test examples...: 43 examples [00:12,  5.23 examples/s][A
Generating test examples...: 49 examples [00:13,  5.44 examples/s][A
Generating test examples...: 55 examples [00:14,  5.60 examples/s][A
Generating test examples...: 61 examples [00:15,  5.69 examples/s][A
Generating test examples...: 67 examples [00:16,  5.76 examples/s][A
Generating test examples...: 73 examples [00:17,  5.82 examples/s][A
Generating test examples...: 79 examples [00:18,  5.86 examples/s][A
Generating test examples...: 85 examples [00:19,  5.90 examples/s][A
Generating test examples...: 91 examples [00:20,  5.92 examples/s][A
Generating test examples...: 97 examples [00:21,  5.94 examples/s][A
Generating test examples...: 103 examples [00:22,  5.95 examples/s][A
Generating test examples...: 109 examples [00:23,  5.95 examples/s][A
Generating test examples...: 115 examples [00:24,  5.96 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:00, 106.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 107.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 106.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 105.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:00<00:00, 106.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 106.20 examples/s][A
                                                                                                                                                                                                          [A                                                                         Generating splits...:  50%|█████     | 1/2 [10:17<09:50, 590.84s/ splits]Generating splits...: 100%|██████████| 2/2 [10:17<00:00, 258.95s/ splits]                                                                         INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0.incomplete4DSKGD/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/all_e2/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, all subjects except 2
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e2/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=9.77 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=2040, num_shards=128>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all_e3/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.83s/ examples][A
Generating train examples...: 7 examples [00:06,  1.32 examples/s][A
Generating train examples...: 13 examples [00:07,  2.34 examples/s][A
Generating train examples...: 19 examples [00:08,  3.21 examples/s][A
Generating train examples...: 25 examples [00:09,  3.91 examples/s][A
Generating train examples...: 31 examples [00:10,  4.46 examples/s][A
Generating train examples...: 37 examples [00:11,  4.88 examples/s][A
Generating train examples...: 43 examples [00:12,  5.17 examples/s][A
Generating train examples...: 49 examples [00:13,  5.40 examples/s][A
Generating train examples...: 55 examples [00:14,  5.55 examples/s][A
Generating train examples...: 61 examples [00:15,  5.67 examples/s][A
Generating train examples...: 67 examples [00:16,  5.76 examples/s][A
Generating train examples...: 73 examples [00:17,  5.82 examples/s][A
Generating train examples...: 79 examples [00:18,  5.87 examples/s][A
Generating train examples...: 85 examples [00:19,  5.91 examples/s][A
Generating train examples...: 91 examples [00:20,  5.93 examples/s][A
Generating train examples...: 97 examples [00:21,  5.94 examples/s][A
Generating train examples...: 103 examples [00:22,  5.95 examples/s][A
Generating train examples...: 109 examples [00:23,  5.96 examples/s][A
Generating train examples...: 115 examples [00:24,  5.96 examples/s][Acsp shape (120, 64, 1920)
Subject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 121 examples [00:31,  2.37 examples/s][A
Generating train examples...: 127 examples [00:32,  2.90 examples/s][A
Generating train examples...: 133 examples [00:33,  3.42 examples/s][A
Generating train examples...: 139 examples [00:34,  3.92 examples/s][A
Generating train examples...: 145 examples [00:35,  4.36 examples/s][A
Generating train examples...: 151 examples [00:36,  4.74 examples/s][A
Generating train examples...: 158 examples [00:37,  5.10 examples/s][A
Generating train examples...: 164 examples [00:38,  5.33 examples/s][A
Generating train examples...: 170 examples [00:39,  5.50 examples/s][A
Generating train examples...: 176 examples [00:40,  5.63 examples/s][A
Generating train examples...: 182 examples [00:41,  5.73 examples/s][A
Generating train examples...: 188 examples [00:42,  5.80 examples/s][A
Generating train examples...: 194 examples [00:43,  5.85 examples/s][A
Generating train examples...: 200 examples [00:44,  5.89 examples/s][A
Generating train examples...: 206 examples [00:45,  5.91 examples/s][A
Generating train examples...: 212 examples [00:46,  5.93 examples/s][A
Generating train examples...: 218 examples [00:47,  5.08 examples/s][A
Generating train examples...: 224 examples [00:48,  5.31 examples/s][A
Generating train examples...: 230 examples [00:49,  5.49 examples/s][A
Generating train examples...: 236 examples [00:50,  5.62 examples/s][Acsp shape (120, 64, 1920)
Subject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 242 examples [00:57,  2.25 examples/s][A
Generating train examples...: 248 examples [00:58,  2.76 examples/s][A
Generating train examples...: 254 examples [00:59,  3.28 examples/s][A
Generating train examples...: 260 examples [01:00,  3.79 examples/s][A
Generating train examples...: 266 examples [01:01,  4.24 examples/s][A
Generating train examples...: 272 examples [01:02,  4.63 examples/s][A
Generating train examples...: 278 examples [01:03,  4.94 examples/s][A
Generating train examples...: 284 examples [01:04,  5.19 examples/s][A
Generating train examples...: 290 examples [01:05,  5.38 examples/s][A
Generating train examples...: 296 examples [01:06,  5.52 examples/s][A
Generating train examples...: 302 examples [01:07,  5.63 examples/s][A
Generating train examples...: 308 examples [01:08,  5.70 examples/s][A
Generating train examples...: 314 examples [01:09,  5.75 examples/s][A
Generating train examples...: 320 examples [01:10,  5.79 examples/s][A
Generating train examples...: 326 examples [01:11,  5.82 examples/s][A
Generating train examples...: 332 examples [01:12,  5.83 examples/s][A
Generating train examples...: 338 examples [01:13,  5.84 examples/s][A
Generating train examples...: 344 examples [01:14,  5.85 examples/s][A
Generating train examples...: 350 examples [01:15,  5.87 examples/s][A
Generating train examples...: 356 examples [01:16,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 362 examples [01:24,  2.05 examples/s][A
Generating train examples...: 368 examples [01:25,  2.55 examples/s][A
Generating train examples...: 374 examples [01:26,  3.07 examples/s][A
Generating train examples...: 380 examples [01:27,  3.58 examples/s][A
Generating train examples...: 386 examples [01:28,  4.06 examples/s][A
Generating train examples...: 392 examples [01:29,  4.48 examples/s][A
Generating train examples...: 398 examples [01:30,  4.83 examples/s][A
Generating train examples...: 404 examples [01:31,  5.11 examples/s][A
Generating train examples...: 410 examples [01:32,  5.33 examples/s][A
Generating train examples...: 416 examples [01:33,  5.49 examples/s][A
Generating train examples...: 422 examples [01:34,  5.61 examples/s][A
Generating train examples...: 428 examples [01:35,  5.70 examples/s][A
Generating train examples...: 434 examples [01:36,  5.77 examples/s][A
Generating train examples...: 440 examples [01:37,  5.80 examples/s][A
Generating train examples...: 446 examples [01:38,  5.84 examples/s][A
Generating train examples...: 452 examples [01:39,  5.87 examples/s][A
Generating train examples...: 458 examples [01:40,  5.89 examples/s][A
Generating train examples...: 464 examples [01:41,  5.90 examples/s][A
Generating train examples...: 470 examples [01:42,  5.90 examples/s][A
Generating train examples...: 476 examples [01:43,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 482 examples [01:50,  2.07 examples/s][A
Generating train examples...: 488 examples [01:51,  2.57 examples/s][A
Generating train examples...: 494 examples [01:52,  3.10 examples/s][A
Generating train examples...: 500 examples [01:53,  3.61 examples/s][A
Generating train examples...: 506 examples [01:54,  4.09 examples/s][A
Generating train examples...: 512 examples [01:55,  4.51 examples/s][A
Generating train examples...: 518 examples [01:56,  4.86 examples/s][A
Generating train examples...: 524 examples [01:57,  5.14 examples/s][A
Generating train examples...: 530 examples [01:58,  5.35 examples/s][A
Generating train examples...: 536 examples [01:59,  5.50 examples/s][A
Generating train examples...: 542 examples [02:00,  5.63 examples/s][A
Generating train examples...: 548 examples [02:01,  5.71 examples/s][A
Generating train examples...: 554 examples [02:02,  5.78 examples/s][A
Generating train examples...: 560 examples [02:03,  5.82 examples/s][A
Generating train examples...: 566 examples [02:04,  5.86 examples/s][A
Generating train examples...: 572 examples [02:05,  5.88 examples/s][A
Generating train examples...: 578 examples [02:06,  5.90 examples/s][A
Generating train examples...: 584 examples [02:07,  5.91 examples/s][A
Generating train examples...: 590 examples [02:08,  5.91 examples/s][A
Generating train examples...: 596 examples [02:09,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 602 examples [02:15,  2.37 examples/s][A
Generating train examples...: 608 examples [02:16,  2.89 examples/s][A
Generating train examples...: 614 examples [02:17,  3.41 examples/s][A
Generating train examples...: 620 examples [02:18,  3.90 examples/s][A
Generating train examples...: 626 examples [02:20,  4.35 examples/s][A
Generating train examples...: 632 examples [02:21,  4.72 examples/s][A
Generating train examples...: 638 examples [02:22,  5.02 examples/s][A
Generating train examples...: 644 examples [02:23,  5.26 examples/s][A
Generating train examples...: 650 examples [02:24,  5.44 examples/s][A
Generating train examples...: 656 examples [02:25,  5.57 examples/s][A
Generating train examples...: 662 examples [02:26,  5.66 examples/s][A
Generating train examples...: 668 examples [02:27,  5.74 examples/s][A
Generating train examples...: 674 examples [02:28,  5.78 examples/s][A
Generating train examples...: 680 examples [02:29,  5.83 examples/s][A
Generating train examples...: 686 examples [02:30,  5.86 examples/s][A
Generating train examples...: 692 examples [02:31,  5.87 examples/s][A
Generating train examples...: 698 examples [02:32,  5.87 examples/s][A
Generating train examples...: 704 examples [02:33,  5.89 examples/s][A
Generating train examples...: 710 examples [02:34,  5.90 examples/s][A
Generating train examples...: 716 examples [02:35,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 722 examples [02:41,  2.33 examples/s][A
Generating train examples...: 728 examples [02:42,  2.84 examples/s][A
Generating train examples...: 734 examples [02:43,  3.37 examples/s][A
Generating train examples...: 740 examples [02:44,  3.87 examples/s][A
Generating train examples...: 746 examples [02:45,  4.32 examples/s][A
Generating train examples...: 752 examples [02:46,  4.69 examples/s][A
Generating train examples...: 758 examples [02:47,  5.01 examples/s][A
Generating train examples...: 764 examples [02:48,  5.25 examples/s][A
Generating train examples...: 770 examples [02:49,  5.43 examples/s][A
Generating train examples...: 776 examples [02:50,  5.57 examples/s][A
Generating train examples...: 782 examples [02:51,  5.67 examples/s][A
Generating train examples...: 788 examples [02:52,  5.75 examples/s][A
Generating train examples...: 794 examples [02:53,  5.80 examples/s][A
Generating train examples...: 800 examples [02:54,  5.84 examples/s][A
Generating train examples...: 806 examples [02:55,  5.86 examples/s][A
Generating train examples...: 812 examples [02:56,  5.87 examples/s][A
Generating train examples...: 818 examples [02:57,  5.89 examples/s][A
Generating train examples...: 824 examples [02:58,  5.90 examples/s][A
Generating train examples...: 830 examples [02:59,  5.91 examples/s][A
Generating train examples...: 836 examples [03:00,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 842 examples [03:07,  2.30 examples/s][A
Generating train examples...: 848 examples [03:08,  2.81 examples/s][A
Generating train examples...: 854 examples [03:09,  3.34 examples/s][A
Generating train examples...: 860 examples [03:10,  3.84 examples/s][A
Generating train examples...: 866 examples [03:11,  4.30 examples/s][A
Generating train examples...: 872 examples [03:12,  4.69 examples/s][A
Generating train examples...: 878 examples [03:13,  5.01 examples/s][A
Generating train examples...: 884 examples [03:14,  5.25 examples/s][A
Generating train examples...: 890 examples [03:15,  5.43 examples/s][A
Generating train examples...: 896 examples [03:16,  5.57 examples/s][A
Generating train examples...: 902 examples [03:17,  5.67 examples/s][A
Generating train examples...: 908 examples [03:18,  5.74 examples/s][A
Generating train examples...: 914 examples [03:19,  5.80 examples/s][A
Generating train examples...: 920 examples [03:20,  5.84 examples/s][A
Generating train examples...: 926 examples [03:21,  5.86 examples/s][A
Generating train examples...: 932 examples [03:22,  5.87 examples/s][A
Generating train examples...: 938 examples [03:23,  5.88 examples/s][A
Generating train examples...: 944 examples [03:24,  5.88 examples/s][A
Generating train examples...: 950 examples [03:25,  5.88 examples/s][A
Generating train examples...: 956 examples [03:26,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 962 examples [03:32,  2.32 examples/s][A
Generating train examples...: 968 examples [03:33,  2.84 examples/s][A
Generating train examples...: 974 examples [03:34,  3.36 examples/s][A
Generating train examples...: 980 examples [03:35,  3.86 examples/s][A
Generating train examples...: 986 examples [03:36,  4.31 examples/s][A
Generating train examples...: 992 examples [03:37,  4.69 examples/s][A
Generating train examples...: 998 examples [03:38,  5.00 examples/s][A
Generating train examples...: 1004 examples [03:39,  5.24 examples/s][A
Generating train examples...: 1010 examples [03:40,  5.43 examples/s][A
Generating train examples...: 1016 examples [03:41,  5.57 examples/s][A
Generating train examples...: 1022 examples [03:42,  5.66 examples/s][A
Generating train examples...: 1028 examples [03:43,  5.74 examples/s][A
Generating train examples...: 1034 examples [03:44,  5.78 examples/s][A
Generating train examples...: 1040 examples [03:45,  5.82 examples/s][A
Generating train examples...: 1046 examples [03:46,  5.85 examples/s][A
Generating train examples...: 1052 examples [03:47,  5.87 examples/s][A
Generating train examples...: 1058 examples [03:48,  5.88 examples/s][A
Generating train examples...: 1064 examples [03:49,  5.89 examples/s][A
Generating train examples...: 1070 examples [03:50,  5.89 examples/s][A
Generating train examples...: 1076 examples [03:51,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1082 examples [03:58,  2.23 examples/s][A
Generating train examples...: 1088 examples [03:59,  2.74 examples/s][A
Generating train examples...: 1094 examples [04:00,  3.26 examples/s][A
Generating train examples...: 1100 examples [04:01,  3.76 examples/s][A
Generating train examples...: 1106 examples [04:02,  4.21 examples/s][A
Generating train examples...: 1112 examples [04:03,  4.60 examples/s][A
Generating train examples...: 1118 examples [04:04,  4.92 examples/s][A
Generating train examples...: 1124 examples [04:05,  5.17 examples/s][A
Generating train examples...: 1130 examples [04:06,  5.36 examples/s][A
Generating train examples...: 1136 examples [04:07,  5.50 examples/s][A
Generating train examples...: 1142 examples [04:08,  5.61 examples/s][A
Generating train examples...: 1148 examples [04:09,  5.68 examples/s][A
Generating train examples...: 1154 examples [04:10,  5.74 examples/s][A
Generating train examples...: 1160 examples [04:11,  5.77 examples/s][A
Generating train examples...: 1166 examples [04:12,  5.80 examples/s][A
Generating train examples...: 1172 examples [04:13,  5.82 examples/s][A
Generating train examples...: 1178 examples [04:14,  5.85 examples/s][A
Generating train examples...: 1184 examples [04:15,  5.87 examples/s][A
Generating train examples...: 1190 examples [04:16,  5.88 examples/s][A
Generating train examples...: 1196 examples [04:17,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1202 examples [04:24,  2.31 examples/s][A
Generating train examples...: 1208 examples [04:25,  2.83 examples/s][A
Generating train examples...: 1214 examples [04:26,  3.35 examples/s][A
Generating train examples...: 1220 examples [04:27,  3.85 examples/s][A
Generating train examples...: 1226 examples [04:28,  4.30 examples/s][A
Generating train examples...: 1232 examples [04:29,  4.68 examples/s][A
Generating train examples...: 1238 examples [04:30,  4.99 examples/s][A
Generating train examples...: 1244 examples [04:31,  5.23 examples/s][A
Generating train examples...: 1250 examples [04:32,  5.41 examples/s][A
Generating train examples...: 1256 examples [04:33,  5.55 examples/s][A
Generating train examples...: 1262 examples [04:34,  5.66 examples/s][A
Generating train examples...: 1268 examples [04:35,  5.73 examples/s][A
Generating train examples...: 1274 examples [04:36,  5.79 examples/s][A
Generating train examples...: 1280 examples [04:37,  5.83 examples/s][A
Generating train examples...: 1286 examples [04:38,  5.85 examples/s][A
Generating train examples...: 1292 examples [04:39,  5.87 examples/s][A
Generating train examples...: 1298 examples [04:40,  5.88 examples/s][A
Generating train examples...: 1304 examples [04:41,  5.89 examples/s][A
Generating train examples...: 1310 examples [04:42,  5.90 examples/s][A
Generating train examples...: 1316 examples [04:43,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1322 examples [04:49,  2.28 examples/s][A
Generating train examples...: 1328 examples [04:50,  2.80 examples/s][A
Generating train examples...: 1334 examples [04:51,  3.32 examples/s][A
Generating train examples...: 1340 examples [04:52,  3.83 examples/s][A
Generating train examples...: 1346 examples [04:53,  4.28 examples/s][A
Generating train examples...: 1352 examples [04:54,  4.66 examples/s][A
Generating train examples...: 1358 examples [04:55,  4.97 examples/s][A
Generating train examples...: 1364 examples [04:56,  5.22 examples/s][A
Generating train examples...: 1370 examples [04:57,  5.41 examples/s][A
Generating train examples...: 1376 examples [04:58,  5.56 examples/s][A
Generating train examples...: 1382 examples [04:59,  5.66 examples/s][A
Generating train examples...: 1388 examples [05:00,  5.74 examples/s][A
Generating train examples...: 1394 examples [05:02,  5.78 examples/s][A
Generating train examples...: 1400 examples [05:03,  5.82 examples/s][A
Generating train examples...: 1406 examples [05:04,  5.85 examples/s][A
Generating train examples...: 1412 examples [05:05,  5.87 examples/s][A
Generating train examples...: 1418 examples [05:06,  5.87 examples/s][A
Generating train examples...: 1424 examples [05:07,  5.88 examples/s][A
Generating train examples...: 1430 examples [05:08,  5.88 examples/s][A
Generating train examples...: 1436 examples [05:09,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1442 examples [05:15,  2.36 examples/s][A
Generating train examples...: 1448 examples [05:16,  2.88 examples/s][A
Generating train examples...: 1454 examples [05:17,  3.41 examples/s][A
Generating train examples...: 1460 examples [05:18,  3.90 examples/s][A
Generating train examples...: 1466 examples [05:19,  4.34 examples/s][A
Generating train examples...: 1472 examples [05:20,  4.72 examples/s][A
Generating train examples...: 1478 examples [05:21,  5.02 examples/s][A
Generating train examples...: 1484 examples [05:22,  5.26 examples/s][A
Generating train examples...: 1490 examples [05:23,  5.44 examples/s][A
Generating train examples...: 1496 examples [05:24,  5.56 examples/s][A
Generating train examples...: 1502 examples [05:25,  5.65 examples/s][A
Generating train examples...: 1508 examples [05:26,  5.73 examples/s][A
Generating train examples...: 1514 examples [05:27,  5.79 examples/s][A
Generating train examples...: 1520 examples [05:28,  5.83 examples/s][A
Generating train examples...: 1526 examples [05:29,  5.85 examples/s][A
Generating train examples...: 1532 examples [05:30,  5.88 examples/s][A
Generating train examples...: 1538 examples [05:31,  5.89 examples/s][A
Generating train examples...: 1544 examples [05:32,  5.89 examples/s][A
Generating train examples...: 1550 examples [05:33,  5.89 examples/s][A
Generating train examples...: 1556 examples [05:34,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1562 examples [05:41,  2.16 examples/s][A
Generating train examples...: 1568 examples [05:42,  2.67 examples/s][A
Generating train examples...: 1574 examples [05:43,  3.19 examples/s][A
Generating train examples...: 1580 examples [05:44,  3.70 examples/s][A
Generating train examples...: 1586 examples [05:45,  4.17 examples/s][A
Generating train examples...: 1592 examples [05:46,  4.58 examples/s][A
Generating train examples...: 1598 examples [05:47,  4.91 examples/s][A
Generating train examples...: 1604 examples [05:48,  5.17 examples/s][A
Generating train examples...: 1610 examples [05:49,  5.38 examples/s][A
Generating train examples...: 1616 examples [05:50,  5.53 examples/s][A
Generating train examples...: 1622 examples [05:51,  5.64 examples/s][A
Generating train examples...: 1628 examples [05:52,  5.73 examples/s][A
Generating train examples...: 1634 examples [05:53,  5.79 examples/s][A
Generating train examples...: 1640 examples [05:54,  5.82 examples/s][A
Generating train examples...: 1646 examples [05:55,  5.85 examples/s][A
Generating train examples...: 1652 examples [05:56,  5.87 examples/s][A
Generating train examples...: 1658 examples [05:57,  5.86 examples/s][A
Generating train examples...: 1664 examples [05:58,  5.84 examples/s][A
Generating train examples...: 1670 examples [05:59,  5.83 examples/s][A
Generating train examples...: 1676 examples [06:00,  5.82 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1682 examples [06:07,  2.25 examples/s][A
Generating train examples...: 1688 examples [06:08,  2.76 examples/s][A
Generating train examples...: 1694 examples [06:09,  3.28 examples/s][A
Generating train examples...: 1700 examples [06:10,  3.78 examples/s][A
Generating train examples...: 1706 examples [06:11,  4.23 examples/s][A
Generating train examples...: 1712 examples [06:12,  4.61 examples/s][A
Generating train examples...: 1718 examples [06:13,  4.92 examples/s][A
Generating train examples...: 1724 examples [06:14,  5.16 examples/s][A
Generating train examples...: 1730 examples [06:15,  5.35 examples/s][A
Generating train examples...: 1736 examples [06:16,  5.49 examples/s][A
Generating train examples...: 1742 examples [06:17,  5.60 examples/s][A
Generating train examples...: 1748 examples [06:18,  5.67 examples/s][A
Generating train examples...: 1754 examples [06:19,  5.73 examples/s][A
Generating train examples...: 1760 examples [06:20,  5.77 examples/s][A
Generating train examples...: 1766 examples [06:21,  5.80 examples/s][A
Generating train examples...: 1772 examples [06:22,  5.80 examples/s][A
Generating train examples...: 1778 examples [06:23,  5.79 examples/s][A
Generating train examples...: 1784 examples [06:24,  5.78 examples/s][A
Generating train examples...: 1790 examples [06:25,  5.78 examples/s][A
Generating train examples...: 1796 examples [06:26,  5.77 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1802 examples [06:33,  2.11 examples/s][A
Generating train examples...: 1808 examples [06:34,  2.61 examples/s][A
Generating train examples...: 1814 examples [06:35,  3.14 examples/s][A
Generating train examples...: 1820 examples [06:36,  3.66 examples/s][A
Generating train examples...: 1826 examples [06:37,  4.13 examples/s][A
Generating train examples...: 1832 examples [06:38,  4.54 examples/s][A
Generating train examples...: 1838 examples [06:39,  4.89 examples/s][A
Generating train examples...: 1844 examples [06:40,  5.15 examples/s][A
Generating train examples...: 1850 examples [06:41,  5.36 examples/s][A
Generating train examples...: 1856 examples [06:42,  5.51 examples/s][A
Generating train examples...: 1862 examples [06:43,  5.63 examples/s][A
Generating train examples...: 1868 examples [06:44,  5.71 examples/s][A
Generating train examples...: 1874 examples [06:45,  5.77 examples/s][A
Generating train examples...: 1880 examples [06:46,  5.82 examples/s][A
Generating train examples...: 1886 examples [06:47,  5.85 examples/s][A
Generating train examples...: 1892 examples [06:49,  5.87 examples/s][A
Generating train examples...: 1898 examples [06:50,  5.89 examples/s][A
Generating train examples...: 1904 examples [06:51,  5.88 examples/s][A
Generating train examples...: 1910 examples [06:52,  5.86 examples/s][A
Generating train examples...: 1916 examples [06:53,  5.85 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1922 examples [06:59,  2.25 examples/s][A
Generating train examples...: 1928 examples [07:00,  2.77 examples/s][A
Generating train examples...: 1934 examples [07:01,  3.29 examples/s][A
Generating train examples...: 1940 examples [07:02,  3.80 examples/s][A
Generating train examples...: 1946 examples [07:03,  4.26 examples/s][A
Generating train examples...: 1952 examples [07:04,  4.65 examples/s][A
Generating train examples...: 1958 examples [07:05,  4.97 examples/s][A
Generating train examples...: 1964 examples [07:06,  5.22 examples/s][A
Generating train examples...: 1970 examples [07:07,  5.41 examples/s][A
Generating train examples...: 1976 examples [07:08,  5.56 examples/s][A
Generating train examples...: 1982 examples [07:09,  5.65 examples/s][A
Generating train examples...: 1988 examples [07:10,  5.74 examples/s][A
Generating train examples...: 1994 examples [07:11,  5.80 examples/s][A
Generating train examples...: 2000 examples [07:12,  5.84 examples/s][A
Generating train examples...: 2006 examples [07:13,  5.88 examples/s][A
Generating train examples...: 2012 examples [07:14,  5.90 examples/s][A
Generating train examples...: 2018 examples [07:15,  5.91 examples/s][A
Generating train examples...: 2024 examples [07:16,  5.92 examples/s][A
Generating train examples...: 2030 examples [07:17,  5.90 examples/s][A
Generating train examples...: 2036 examples [07:18,  5.90 examples/s][A
                                                                     [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/2040 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 1/2040 [02:14<76:16:39, 134.67s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   1%|          | 16/2040 [02:14<3:22:57,  6.02s/ examples] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 32/2040 [02:15<1:22:11,  2.46s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 48/2040 [02:15<44:17,  1.33s/ examples]  [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   3%|▎         | 64/2040 [02:15<26:43,  1.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   4%|▍         | 80/2040 [02:15<17:02,  1.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▍         | 96/2040 [02:15<11:15,  2.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▌         | 112/2040 [02:15<07:36,  4.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   6%|▋         | 128/2040 [02:16<05:14,  6.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   7%|▋         | 143/2040 [02:16<03:44,  8.46 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   8%|▊         | 159/2040 [02:16<02:38, 11.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▊         | 175/2040 [02:16<01:54, 16.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▉         | 191/2040 [02:16<01:23, 22.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  10%|█         | 207/2040 [02:16<01:03, 29.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  11%|█         | 223/2040 [02:16<00:48, 37.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▏        | 239/2040 [02:17<00:39, 46.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 255/2040 [02:17<00:32, 55.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  13%|█▎        | 271/2040 [02:17<00:27, 64.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  14%|█▍        | 287/2040 [02:17<00:24, 72.99 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  15%|█▍        | 303/2040 [02:17<00:22, 78.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▌        | 319/2040 [02:17<00:20, 83.94 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▋        | 335/2040 [02:18<00:19, 86.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  17%|█▋        | 351/2040 [02:18<00:18, 90.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  18%|█▊        | 367/2040 [02:18<00:17, 93.93 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  19%|█▊        | 382/2040 [02:18<00:17, 95.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|█▉        | 398/2040 [02:18<00:16, 98.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|██        | 414/2040 [02:18<00:16, 100.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  21%|██        | 430/2040 [02:18<00:15, 104.14 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  22%|██▏       | 446/2040 [02:19<00:15, 105.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 462/2040 [02:19<00:14, 108.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 478/2040 [02:19<00:14, 110.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  24%|██▍       | 494/2040 [02:19<00:14, 107.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 510/2040 [02:19<00:14, 105.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  26%|██▌       | 526/2040 [02:19<00:14, 105.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 542/2040 [02:19<00:14, 106.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 558/2040 [02:20<00:13, 107.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  28%|██▊       | 574/2040 [02:20<00:13, 106.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  29%|██▉       | 590/2040 [02:20<00:13, 106.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|██▉       | 606/2040 [02:20<00:13, 107.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|███       | 622/2040 [02:20<00:13, 108.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  31%|███▏      | 638/2040 [02:20<00:12, 109.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  32%|███▏      | 653/2040 [02:20<00:12, 110.08 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  33%|███▎      | 669/2040 [02:21<00:12, 112.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▎      | 685/2040 [02:21<00:12, 112.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▍      | 701/2040 [02:21<00:11, 113.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  35%|███▌      | 717/2040 [02:21<00:11, 111.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  36%|███▌      | 733/2040 [02:21<00:12, 108.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  37%|███▋      | 749/2040 [02:21<00:12, 105.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 765/2040 [02:22<00:12, 102.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 781/2040 [02:22<00:12, 101.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  39%|███▉      | 797/2040 [02:22<00:12, 102.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  40%|███▉      | 813/2040 [02:22<00:11, 105.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████      | 829/2040 [02:22<00:11, 105.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████▏     | 845/2040 [02:22<00:11, 106.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  42%|████▏     | 861/2040 [02:22<00:10, 107.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  43%|████▎     | 877/2040 [02:23<00:10, 108.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  44%|████▎     | 892/2040 [02:23<00:10, 109.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▍     | 908/2040 [02:23<00:10, 110.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▌     | 924/2040 [02:23<00:10, 108.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  46%|████▌     | 940/2040 [02:23<00:10, 105.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  47%|████▋     | 956/2040 [02:23<00:10, 102.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 972/2040 [02:23<00:10, 103.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 988/2040 [02:24<00:10, 103.96 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  49%|████▉     | 1004/2040 [02:24<00:09, 106.65 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 1020/2040 [02:24<00:09, 107.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  51%|█████     | 1036/2040 [02:24<00:09, 109.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1052/2040 [02:24<00:08, 110.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1068/2040 [02:24<00:08, 112.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  53%|█████▎    | 1084/2040 [02:24<00:08, 111.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  54%|█████▍    | 1100/2040 [02:25<00:08, 112.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▍    | 1116/2040 [02:25<00:08, 113.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▌    | 1132/2040 [02:25<00:08, 113.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  56%|█████▋    | 1148/2040 [02:25<00:07, 112.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  57%|█████▋    | 1163/2040 [02:25<00:07, 111.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  58%|█████▊    | 1179/2040 [02:25<00:08, 106.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▊    | 1195/2040 [02:26<00:08, 104.77 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▉    | 1211/2040 [02:26<00:08, 103.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  60%|██████    | 1227/2040 [02:26<00:07, 104.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  61%|██████    | 1243/2040 [02:26<00:07, 105.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▏   | 1259/2040 [02:26<00:07, 107.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 1275/2040 [02:26<00:06, 109.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  63%|██████▎   | 1291/2040 [02:26<00:06, 109.51 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  64%|██████▍   | 1307/2040 [02:27<00:06, 111.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  65%|██████▍   | 1323/2040 [02:27<00:06, 109.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▌   | 1339/2040 [02:27<00:06, 110.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▋   | 1355/2040 [02:27<00:06, 110.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  67%|██████▋   | 1371/2040 [02:27<00:05, 112.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  68%|██████▊   | 1387/2040 [02:27<00:05, 112.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  69%|██████▊   | 1402/2040 [02:27<00:05, 108.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|██████▉   | 1418/2040 [02:28<00:05, 105.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|███████   | 1434/2040 [02:28<00:05, 103.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  71%|███████   | 1450/2040 [02:28<00:05, 103.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  72%|███████▏  | 1466/2040 [02:28<00:05, 104.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1482/2040 [02:28<00:05, 106.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1498/2040 [02:28<00:05, 106.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  74%|███████▍  | 1514/2040 [02:28<00:04, 107.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 1530/2040 [02:29<00:04, 106.83 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  76%|███████▌  | 1546/2040 [02:29<00:04, 107.24 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1562/2040 [02:29<00:04, 107.59 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1578/2040 [02:29<00:04, 108.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  78%|███████▊  | 1594/2040 [02:29<00:04, 109.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  79%|███████▉  | 1610/2040 [02:29<00:03, 109.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|███████▉  | 1626/2040 [02:29<00:03, 110.57 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|████████  | 1642/2040 [02:30<00:03, 109.88 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  81%|████████▏ | 1658/2040 [02:30<00:03, 106.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  82%|████████▏ | 1673/2040 [02:30<00:03, 103.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  83%|████████▎ | 1689/2040 [02:30<00:03, 100.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▎ | 1705/2040 [02:30<00:03, 100.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▍ | 1721/2040 [02:30<00:03, 101.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  85%|████████▌ | 1737/2040 [02:31<00:02, 103.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  86%|████████▌ | 1753/2040 [02:31<00:02, 105.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  87%|████████▋ | 1769/2040 [02:31<00:02, 105.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1785/2040 [02:31<00:02, 107.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1801/2040 [02:31<00:02, 107.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  89%|████████▉ | 1817/2040 [02:31<00:02, 107.32 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  90%|████████▉ | 1833/2040 [02:31<00:01, 107.81 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████ | 1849/2040 [02:32<00:01, 108.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████▏| 1865/2040 [02:32<00:01, 109.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  92%|█████████▏| 1881/2040 [02:32<00:01, 108.35 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  93%|█████████▎| 1897/2040 [02:32<00:01, 108.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  94%|█████████▎| 1912/2040 [02:32<00:01, 107.23 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▍| 1928/2040 [02:32<00:01, 104.66 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▌| 1944/2040 [02:33<00:00, 98.38 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  96%|█████████▌| 1960/2040 [02:33<00:00, 98.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  97%|█████████▋| 1976/2040 [02:33<00:00, 100.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 1992/2040 [02:33<00:00, 101.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2008/2040 [02:33<00:00, 103.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  99%|█████████▉| 2024/2040 [02:33<00:00, 104.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 2040/2040 [02:33<00:00, 105.21 examples/s][A
                                                                                                                                                                                                             [A                                                                Generating splits...:   0%|          | 0/2 [09:54<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [09:54<09:54, 594.09s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 2040 (shards: [16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:06,  6.81s/ examples][A
Generating test examples...: 7 examples [00:07,  1.16 examples/s][A
Generating test examples...: 13 examples [00:08,  2.12 examples/s][A
Generating test examples...: 19 examples [00:09,  2.97 examples/s][A
Generating test examples...: 25 examples [00:10,  3.68 examples/s][A
Generating test examples...: 31 examples [00:11,  4.26 examples/s][A
Generating test examples...: 37 examples [00:12,  4.71 examples/s][A
Generating test examples...: 43 examples [00:13,  5.05 examples/s][A
Generating test examples...: 49 examples [00:14,  5.30 examples/s][A
Generating test examples...: 55 examples [00:15,  5.48 examples/s][A
Generating test examples...: 61 examples [00:16,  5.62 examples/s][A
Generating test examples...: 67 examples [00:17,  5.71 examples/s][A
Generating test examples...: 73 examples [00:18,  5.78 examples/s][A
Generating test examples...: 79 examples [00:19,  5.82 examples/s][A
Generating test examples...: 85 examples [00:20,  5.86 examples/s][A
Generating test examples...: 91 examples [00:21,  5.88 examples/s][A
Generating test examples...: 97 examples [00:22,  5.90 examples/s][A
Generating test examples...: 103 examples [00:23,  5.91 examples/s][A
Generating test examples...: 109 examples [00:24,  5.92 examples/s][A
Generating test examples...: 115 examples [00:26,  5.92 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 102.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 102.05 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 101.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 103.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 104.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 104.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 104.90 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 105.61 examples/s][A
                                                                                                                                                                                                          [A                                                                         Generating splits...:  50%|█████     | 1/2 [10:22<09:54, 594.09s/ splits]Generating splits...: 100%|██████████| 2/2 [10:22<00:00, 261.12s/ splits]                                                                         INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0.incompleteZB6CJV/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/all_e3/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, all subjects except 3
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e3/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=9.77 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=2040, num_shards=128>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all_e4/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1 examples [00:05,  5.75s/ examples][A
Generating train examples...: 7 examples [00:06,  1.33 examples/s][A
Generating train examples...: 13 examples [00:07,  2.36 examples/s][A
Generating train examples...: 19 examples [00:08,  3.23 examples/s][A
Generating train examples...: 25 examples [00:09,  3.93 examples/s][A
Generating train examples...: 31 examples [00:10,  4.46 examples/s][A
Generating train examples...: 37 examples [00:11,  4.88 examples/s][A
Generating train examples...: 43 examples [00:12,  5.18 examples/s][A
Generating train examples...: 49 examples [00:13,  5.40 examples/s][A
Generating train examples...: 55 examples [00:14,  5.56 examples/s][A
Generating train examples...: 61 examples [00:15,  5.67 examples/s][A
Generating train examples...: 67 examples [00:16,  5.76 examples/s][A
Generating train examples...: 73 examples [00:17,  5.80 examples/s][A
Generating train examples...: 79 examples [00:18,  5.85 examples/s][A
Generating train examples...: 85 examples [00:19,  5.88 examples/s][A
Generating train examples...: 91 examples [00:20,  5.90 examples/s][A
Generating train examples...: 97 examples [00:21,  5.91 examples/s][A
Generating train examples...: 103 examples [00:22,  5.92 examples/s][A
Generating train examples...: 109 examples [00:23,  5.93 examples/s][A
Generating train examples...: 115 examples [00:24,  5.94 examples/s][Acsp shape (120, 64, 1920)
Subject: 2
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6.2e+02 (2.2e-16 eps * 66 dim * 4.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 8.5e+02 (2.2e-16 eps * 66 dim * 5.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 121 examples [00:31,  2.30 examples/s][A
Generating train examples...: 128 examples [00:32,  2.90 examples/s][A
Generating train examples...: 134 examples [00:33,  3.40 examples/s][A
Generating train examples...: 140 examples [00:34,  3.89 examples/s][A
Generating train examples...: 146 examples [00:35,  4.33 examples/s][A
Generating train examples...: 152 examples [00:36,  4.72 examples/s][A
Generating train examples...: 158 examples [00:37,  5.04 examples/s][A
Generating train examples...: 164 examples [00:38,  5.28 examples/s][A
Generating train examples...: 170 examples [00:39,  5.47 examples/s][A
Generating train examples...: 176 examples [00:40,  5.62 examples/s][A
Generating train examples...: 182 examples [00:41,  5.72 examples/s][A
Generating train examples...: 188 examples [00:42,  5.80 examples/s][A
Generating train examples...: 194 examples [00:43,  5.85 examples/s][A
Generating train examples...: 200 examples [00:44,  5.88 examples/s][A
Generating train examples...: 206 examples [00:45,  5.91 examples/s][A
Generating train examples...: 212 examples [00:46,  5.93 examples/s][A
Generating train examples...: 218 examples [00:48,  5.06 examples/s][A
Generating train examples...: 224 examples [00:49,  5.29 examples/s][A
Generating train examples...: 230 examples [00:50,  5.47 examples/s][A
Generating train examples...: 236 examples [00:51,  5.61 examples/s][Acsp shape (120, 64, 1920)
Subject: 3
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 6e+02 (2.2e-16 eps * 66 dim * 4.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.6e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 242 examples [00:57,  2.25 examples/s][A
Generating train examples...: 248 examples [00:58,  2.76 examples/s][A
Generating train examples...: 254 examples [00:59,  3.29 examples/s][A
Generating train examples...: 260 examples [01:00,  3.80 examples/s][A
Generating train examples...: 266 examples [01:01,  4.26 examples/s][A
Generating train examples...: 272 examples [01:02,  4.65 examples/s][A
Generating train examples...: 278 examples [01:03,  4.97 examples/s][A
Generating train examples...: 284 examples [01:04,  5.23 examples/s][A
Generating train examples...: 290 examples [01:05,  5.42 examples/s][A
Generating train examples...: 296 examples [01:06,  5.57 examples/s][A
Generating train examples...: 302 examples [01:07,  5.68 examples/s][A
Generating train examples...: 308 examples [01:08,  5.75 examples/s][A
Generating train examples...: 314 examples [01:09,  5.81 examples/s][A
Generating train examples...: 320 examples [01:10,  5.85 examples/s][A
Generating train examples...: 326 examples [01:11,  5.87 examples/s][A
Generating train examples...: 332 examples [01:12,  5.89 examples/s][A
Generating train examples...: 338 examples [01:13,  5.90 examples/s][A
Generating train examples...: 344 examples [01:14,  5.91 examples/s][A
Generating train examples...: 350 examples [01:15,  5.93 examples/s][A
Generating train examples...: 356 examples [01:16,  5.94 examples/s][Acsp shape (120, 64, 1920)
Subject: 5
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 362 examples [01:22,  2.38 examples/s][A
Generating train examples...: 368 examples [01:23,  2.90 examples/s][A
Generating train examples...: 374 examples [01:24,  3.42 examples/s][A
Generating train examples...: 380 examples [01:25,  3.92 examples/s][A
Generating train examples...: 386 examples [01:26,  4.36 examples/s][A
Generating train examples...: 392 examples [01:27,  4.73 examples/s][A
Generating train examples...: 398 examples [01:28,  5.04 examples/s][A
Generating train examples...: 404 examples [01:29,  5.27 examples/s][A
Generating train examples...: 410 examples [01:30,  5.44 examples/s][A
Generating train examples...: 416 examples [01:31,  5.58 examples/s][A
Generating train examples...: 422 examples [01:32,  5.67 examples/s][A
Generating train examples...: 428 examples [01:33,  5.75 examples/s][A
Generating train examples...: 434 examples [01:34,  5.79 examples/s][A
Generating train examples...: 440 examples [01:35,  5.83 examples/s][A
Generating train examples...: 446 examples [01:36,  5.85 examples/s][A
Generating train examples...: 452 examples [01:37,  5.88 examples/s][A
Generating train examples...: 458 examples [01:38,  5.89 examples/s][A
Generating train examples...: 464 examples [01:39,  5.90 examples/s][A
Generating train examples...: 470 examples [01:41,  5.90 examples/s][A
Generating train examples...: 476 examples [01:42,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 6
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 482 examples [01:48,  2.37 examples/s][A
Generating train examples...: 488 examples [01:49,  2.89 examples/s][A
Generating train examples...: 494 examples [01:50,  3.42 examples/s][A
Generating train examples...: 500 examples [01:51,  3.92 examples/s][A
Generating train examples...: 506 examples [01:52,  4.36 examples/s][A
Generating train examples...: 512 examples [01:53,  4.74 examples/s][A
Generating train examples...: 518 examples [01:54,  5.04 examples/s][A
Generating train examples...: 524 examples [01:55,  5.28 examples/s][A
Generating train examples...: 530 examples [01:56,  5.46 examples/s][A
Generating train examples...: 536 examples [01:57,  5.60 examples/s][A
Generating train examples...: 542 examples [01:58,  5.70 examples/s][A
Generating train examples...: 548 examples [01:59,  5.76 examples/s][A
Generating train examples...: 554 examples [02:00,  5.80 examples/s][A
Generating train examples...: 560 examples [02:01,  5.84 examples/s][A
Generating train examples...: 566 examples [02:02,  5.86 examples/s][A
Generating train examples...: 572 examples [02:03,  5.86 examples/s][A
Generating train examples...: 578 examples [02:04,  5.88 examples/s][A
Generating train examples...: 584 examples [02:05,  5.89 examples/s][A
Generating train examples...: 590 examples [02:06,  5.89 examples/s][A
Generating train examples...: 596 examples [02:07,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 7
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.5e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 602 examples [02:13,  2.35 examples/s][A
Generating train examples...: 608 examples [02:14,  2.87 examples/s][A
Generating train examples...: 614 examples [02:15,  3.40 examples/s][A
Generating train examples...: 620 examples [02:16,  3.90 examples/s][A
Generating train examples...: 626 examples [02:17,  4.34 examples/s][A
Generating train examples...: 632 examples [02:18,  4.72 examples/s][A
Generating train examples...: 638 examples [02:19,  5.03 examples/s][A
Generating train examples...: 644 examples [02:20,  5.27 examples/s][A
Generating train examples...: 650 examples [02:21,  5.44 examples/s][A
Generating train examples...: 656 examples [02:22,  5.58 examples/s][A
Generating train examples...: 662 examples [02:23,  5.68 examples/s][A
Generating train examples...: 668 examples [02:24,  5.75 examples/s][A
Generating train examples...: 674 examples [02:25,  5.80 examples/s][A
Generating train examples...: 680 examples [02:26,  5.83 examples/s][A
Generating train examples...: 686 examples [02:27,  5.86 examples/s][A
Generating train examples...: 692 examples [02:28,  5.88 examples/s][A
Generating train examples...: 698 examples [02:29,  5.90 examples/s][A
Generating train examples...: 704 examples [02:30,  5.90 examples/s][A
Generating train examples...: 710 examples [02:31,  5.90 examples/s][A
Generating train examples...: 716 examples [02:32,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 8
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3e+02 (2.2e-16 eps * 66 dim * 2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.5e+02 (2.2e-16 eps * 66 dim * 2.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 722 examples [02:39,  2.28 examples/s][A
Generating train examples...: 728 examples [02:40,  2.79 examples/s][A
Generating train examples...: 734 examples [02:41,  3.32 examples/s][A
Generating train examples...: 740 examples [02:42,  3.83 examples/s][A
Generating train examples...: 746 examples [02:43,  4.28 examples/s][A
Generating train examples...: 752 examples [02:44,  4.67 examples/s][A
Generating train examples...: 758 examples [02:45,  4.98 examples/s][A
Generating train examples...: 764 examples [02:46,  5.23 examples/s][A
Generating train examples...: 770 examples [02:47,  5.42 examples/s][A
Generating train examples...: 776 examples [02:48,  5.56 examples/s][A
Generating train examples...: 782 examples [02:49,  5.66 examples/s][A
Generating train examples...: 788 examples [02:50,  5.73 examples/s][A
Generating train examples...: 794 examples [02:51,  5.79 examples/s][A
Generating train examples...: 800 examples [02:52,  5.83 examples/s][A
Generating train examples...: 806 examples [02:53,  5.86 examples/s][A
Generating train examples...: 812 examples [02:54,  5.88 examples/s][A
Generating train examples...: 818 examples [02:55,  5.90 examples/s][A
Generating train examples...: 824 examples [02:56,  5.91 examples/s][A
Generating train examples...: 830 examples [02:57,  5.92 examples/s][A
Generating train examples...: 836 examples [02:58,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 9
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.1e+02 (2.2e-16 eps * 66 dim * 1.4e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 842 examples [03:05,  2.12 examples/s][A
Generating train examples...: 848 examples [03:06,  2.63 examples/s][A
Generating train examples...: 854 examples [03:07,  3.16 examples/s][A
Generating train examples...: 860 examples [03:08,  3.67 examples/s][A
Generating train examples...: 866 examples [03:09,  4.14 examples/s][A
Generating train examples...: 872 examples [03:10,  4.54 examples/s][A
Generating train examples...: 878 examples [03:11,  4.88 examples/s][A
Generating train examples...: 884 examples [03:12,  5.16 examples/s][A
Generating train examples...: 890 examples [03:13,  5.37 examples/s][A
Generating train examples...: 896 examples [03:14,  5.53 examples/s][A
Generating train examples...: 902 examples [03:15,  5.64 examples/s][A
Generating train examples...: 908 examples [03:16,  5.72 examples/s][A
Generating train examples...: 914 examples [03:17,  5.77 examples/s][A
Generating train examples...: 920 examples [03:18,  5.82 examples/s][A
Generating train examples...: 926 examples [03:19,  5.85 examples/s][A
Generating train examples...: 932 examples [03:20,  5.88 examples/s][A
Generating train examples...: 938 examples [03:21,  5.89 examples/s][A
Generating train examples...: 944 examples [03:22,  5.90 examples/s][A
Generating train examples...: 950 examples [03:23,  5.90 examples/s][A
Generating train examples...: 956 examples [03:24,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 10
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.5e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 962 examples [03:31,  2.21 examples/s][A
Generating train examples...: 968 examples [03:32,  2.72 examples/s][A
Generating train examples...: 974 examples [03:33,  3.24 examples/s][A
Generating train examples...: 980 examples [03:34,  3.75 examples/s][A
Generating train examples...: 986 examples [03:35,  4.22 examples/s][A
Generating train examples...: 992 examples [03:36,  4.61 examples/s][A
Generating train examples...: 998 examples [03:37,  4.94 examples/s][A
Generating train examples...: 1004 examples [03:38,  5.20 examples/s][A
Generating train examples...: 1010 examples [03:39,  5.40 examples/s][A
Generating train examples...: 1016 examples [03:40,  5.55 examples/s][A
Generating train examples...: 1022 examples [03:41,  5.64 examples/s][A
Generating train examples...: 1028 examples [03:42,  5.73 examples/s][A
Generating train examples...: 1034 examples [03:43,  5.79 examples/s][A
Generating train examples...: 1040 examples [03:44,  5.83 examples/s][A
Generating train examples...: 1046 examples [03:45,  5.86 examples/s][A
Generating train examples...: 1052 examples [03:46,  5.87 examples/s][A
Generating train examples...: 1058 examples [03:47,  5.89 examples/s][A
Generating train examples...: 1064 examples [03:48,  5.90 examples/s][A
Generating train examples...: 1070 examples [03:49,  5.91 examples/s][A
Generating train examples...: 1076 examples [03:50,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 11
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.2e+04 (2.2e-16 eps * 66 dim * 8.4e+17  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.6e+04 (2.2e-16 eps * 66 dim * 2.5e+18  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1082 examples [03:58,  2.05 examples/s][A
Generating train examples...: 1088 examples [03:59,  2.55 examples/s][A
Generating train examples...: 1094 examples [04:00,  3.07 examples/s][A
Generating train examples...: 1100 examples [04:01,  3.59 examples/s][A
Generating train examples...: 1106 examples [04:02,  4.07 examples/s][A
Generating train examples...: 1112 examples [04:03,  4.49 examples/s][A
Generating train examples...: 1118 examples [04:04,  4.84 examples/s][A
Generating train examples...: 1124 examples [04:05,  5.13 examples/s][A
Generating train examples...: 1130 examples [04:06,  5.35 examples/s][A
Generating train examples...: 1136 examples [04:07,  5.52 examples/s][A
Generating train examples...: 1142 examples [04:08,  5.63 examples/s][A
Generating train examples...: 1148 examples [04:09,  5.72 examples/s][A
Generating train examples...: 1154 examples [04:10,  5.78 examples/s][A
Generating train examples...: 1160 examples [04:11,  5.82 examples/s][A
Generating train examples...: 1166 examples [04:12,  5.84 examples/s][A
Generating train examples...: 1172 examples [04:13,  5.87 examples/s][A
Generating train examples...: 1178 examples [04:14,  5.89 examples/s][A
Generating train examples...: 1184 examples [04:15,  5.90 examples/s][A
Generating train examples...: 1190 examples [04:16,  5.92 examples/s][A
Generating train examples...: 1196 examples [04:17,  5.91 examples/s][Acsp shape (120, 64, 1920)
Subject: 12
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.9e+02 (2.2e-16 eps * 66 dim * 2.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.8e+02 (2.2e-16 eps * 66 dim * 2.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1202 examples [04:23,  2.33 examples/s][A
Generating train examples...: 1208 examples [04:24,  2.85 examples/s][A
Generating train examples...: 1214 examples [04:25,  3.38 examples/s][A
Generating train examples...: 1220 examples [04:26,  3.87 examples/s][A
Generating train examples...: 1226 examples [04:27,  4.32 examples/s][A
Generating train examples...: 1232 examples [04:28,  4.70 examples/s][A
Generating train examples...: 1238 examples [04:29,  5.00 examples/s][A
Generating train examples...: 1244 examples [04:30,  5.24 examples/s][A
Generating train examples...: 1250 examples [04:31,  5.42 examples/s][A
Generating train examples...: 1256 examples [04:32,  5.55 examples/s][A
Generating train examples...: 1262 examples [04:33,  5.65 examples/s][A
Generating train examples...: 1268 examples [04:34,  5.72 examples/s][A
Generating train examples...: 1274 examples [04:35,  5.77 examples/s][A
Generating train examples...: 1280 examples [04:36,  5.81 examples/s][A
Generating train examples...: 1286 examples [04:37,  5.83 examples/s][A
Generating train examples...: 1292 examples [04:38,  5.85 examples/s][A
Generating train examples...: 1298 examples [04:39,  5.87 examples/s][A
Generating train examples...: 1304 examples [04:40,  5.88 examples/s][A
Generating train examples...: 1310 examples [04:41,  5.88 examples/s][A
Generating train examples...: 1316 examples [04:42,  5.89 examples/s][Acsp shape (120, 64, 1920)
Subject: 13
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.7e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1322 examples [04:50,  1.91 examples/s][A
Generating train examples...: 1328 examples [04:51,  2.40 examples/s][A
Generating train examples...: 1334 examples [04:52,  2.92 examples/s][A
Generating train examples...: 1340 examples [04:53,  3.45 examples/s][A
Generating train examples...: 1346 examples [04:54,  3.94 examples/s][A
Generating train examples...: 1352 examples [04:55,  4.38 examples/s][A
Generating train examples...: 1358 examples [04:56,  4.75 examples/s][A
Generating train examples...: 1364 examples [04:57,  5.05 examples/s][A
Generating train examples...: 1370 examples [04:58,  5.28 examples/s][A
Generating train examples...: 1376 examples [04:59,  5.45 examples/s][A
Generating train examples...: 1382 examples [05:01,  5.59 examples/s][A
Generating train examples...: 1388 examples [05:02,  5.67 examples/s][A
Generating train examples...: 1394 examples [05:03,  5.74 examples/s][A
Generating train examples...: 1400 examples [05:04,  5.79 examples/s][A
Generating train examples...: 1406 examples [05:05,  5.82 examples/s][A
Generating train examples...: 1412 examples [05:06,  5.84 examples/s][A
Generating train examples...: 1418 examples [05:07,  5.87 examples/s][A
Generating train examples...: 1424 examples [05:08,  5.89 examples/s][A
Generating train examples...: 1430 examples [05:09,  5.90 examples/s][A
Generating train examples...: 1436 examples [05:10,  5.90 examples/s][Acsp shape (120, 64, 1920)
Subject: 14
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.8e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1442 examples [05:16,  2.24 examples/s][A
Generating train examples...: 1448 examples [05:17,  2.75 examples/s][A
Generating train examples...: 1454 examples [05:18,  3.27 examples/s][A
Generating train examples...: 1460 examples [05:19,  3.77 examples/s][A
Generating train examples...: 1466 examples [05:20,  4.23 examples/s][A
Generating train examples...: 1472 examples [05:21,  4.61 examples/s][A
Generating train examples...: 1478 examples [05:22,  4.93 examples/s][A
Generating train examples...: 1484 examples [05:23,  5.19 examples/s][A
Generating train examples...: 1490 examples [05:24,  5.38 examples/s][A
Generating train examples...: 1496 examples [05:25,  5.53 examples/s][A
Generating train examples...: 1502 examples [05:26,  5.64 examples/s][A
Generating train examples...: 1508 examples [05:27,  5.71 examples/s][A
Generating train examples...: 1514 examples [05:28,  5.76 examples/s][A
Generating train examples...: 1520 examples [05:29,  5.80 examples/s][A
Generating train examples...: 1526 examples [05:30,  5.83 examples/s][A
Generating train examples...: 1532 examples [05:31,  5.84 examples/s][A
Generating train examples...: 1538 examples [05:33,  5.86 examples/s][A
Generating train examples...: 1544 examples [05:34,  5.86 examples/s][A
Generating train examples...: 1550 examples [05:35,  5.87 examples/s][A
Generating train examples...: 1556 examples [05:36,  5.87 examples/s][Acsp shape (120, 64, 1920)
Subject: 15
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.7e+02 (2.2e-16 eps * 66 dim * 1.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.9e+02 (2.2e-16 eps * 66 dim * 1.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1562 examples [05:42,  2.25 examples/s][A
Generating train examples...: 1568 examples [05:43,  2.77 examples/s][A
Generating train examples...: 1574 examples [05:44,  3.29 examples/s][A
Generating train examples...: 1580 examples [05:45,  3.79 examples/s][A
Generating train examples...: 1586 examples [05:46,  4.24 examples/s][A
Generating train examples...: 1592 examples [05:47,  4.63 examples/s][A
Generating train examples...: 1598 examples [05:48,  4.95 examples/s][A
Generating train examples...: 1604 examples [05:49,  5.20 examples/s][A
Generating train examples...: 1610 examples [05:50,  5.38 examples/s][A
Generating train examples...: 1616 examples [05:51,  5.52 examples/s][A
Generating train examples...: 1622 examples [05:52,  5.62 examples/s][A
Generating train examples...: 1628 examples [05:53,  5.69 examples/s][A
Generating train examples...: 1634 examples [05:54,  5.74 examples/s][A
Generating train examples...: 1640 examples [05:55,  5.78 examples/s][A
Generating train examples...: 1646 examples [05:56,  5.80 examples/s][A
Generating train examples...: 1652 examples [05:57,  5.81 examples/s][A
Generating train examples...: 1658 examples [05:58,  5.81 examples/s][A
Generating train examples...: 1664 examples [05:59,  5.80 examples/s][A
Generating train examples...: 1670 examples [06:00,  5.79 examples/s][A
Generating train examples...: 1676 examples [06:02,  5.79 examples/s][Acsp shape (120, 64, 1920)
Subject: 16
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.1e+02 (2.2e-16 eps * 66 dim * 2.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.7e+02 (2.2e-16 eps * 66 dim * 3.2e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1682 examples [06:08,  2.13 examples/s][A
Generating train examples...: 1688 examples [06:10,  2.64 examples/s][A
Generating train examples...: 1694 examples [06:11,  3.16 examples/s][A
Generating train examples...: 1700 examples [06:12,  3.68 examples/s][A
Generating train examples...: 1706 examples [06:13,  4.15 examples/s][A
Generating train examples...: 1712 examples [06:14,  4.56 examples/s][A
Generating train examples...: 1718 examples [06:15,  4.89 examples/s][A
Generating train examples...: 1724 examples [06:16,  5.17 examples/s][A
Generating train examples...: 1730 examples [06:17,  5.38 examples/s][A
Generating train examples...: 1736 examples [06:18,  5.53 examples/s][A
Generating train examples...: 1742 examples [06:19,  5.64 examples/s][A
Generating train examples...: 1748 examples [06:20,  5.73 examples/s][A
Generating train examples...: 1754 examples [06:21,  5.79 examples/s][A
Generating train examples...: 1760 examples [06:22,  5.84 examples/s][A
Generating train examples...: 1766 examples [06:23,  5.87 examples/s][A
Generating train examples...: 1772 examples [06:24,  5.87 examples/s][A
Generating train examples...: 1778 examples [06:25,  5.87 examples/s][A
Generating train examples...: 1784 examples [06:26,  5.86 examples/s][A
Generating train examples...: 1790 examples [06:27,  5.87 examples/s][A
Generating train examples...: 1796 examples [06:28,  5.86 examples/s][Acsp shape (120, 64, 1920)
Subject: 17
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 5.6e+02 (2.2e-16 eps * 66 dim * 3.8e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 4.6e+02 (2.2e-16 eps * 66 dim * 3.1e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1802 examples [06:34,  2.33 examples/s][A
Generating train examples...: 1808 examples [06:35,  2.85 examples/s][A
Generating train examples...: 1814 examples [06:36,  3.37 examples/s][A
Generating train examples...: 1820 examples [06:37,  3.87 examples/s][A
Generating train examples...: 1826 examples [06:38,  4.32 examples/s][A
Generating train examples...: 1832 examples [06:39,  4.70 examples/s][A
Generating train examples...: 1838 examples [06:40,  5.01 examples/s][A
Generating train examples...: 1844 examples [06:41,  5.25 examples/s][A
Generating train examples...: 1850 examples [06:42,  5.43 examples/s][A
Generating train examples...: 1856 examples [06:43,  5.57 examples/s][A
Generating train examples...: 1862 examples [06:44,  5.66 examples/s][A
Generating train examples...: 1868 examples [06:45,  5.73 examples/s][A
Generating train examples...: 1874 examples [06:46,  5.79 examples/s][A
Generating train examples...: 1880 examples [06:47,  5.84 examples/s][A
Generating train examples...: 1886 examples [06:48,  5.87 examples/s][A
Generating train examples...: 1892 examples [06:49,  5.89 examples/s][A
Generating train examples...: 1898 examples [06:50,  5.90 examples/s][A
Generating train examples...: 1904 examples [06:51,  5.89 examples/s][A
Generating train examples...: 1910 examples [06:52,  5.88 examples/s][A
Generating train examples...: 1916 examples [06:53,  5.88 examples/s][Acsp shape (120, 64, 1920)
Subject: 18
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.2e+02 (2.2e-16 eps * 66 dim * 1.5e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating train examples...: 1922 examples [07:00,  2.14 examples/s][A
Generating train examples...: 1928 examples [07:01,  2.65 examples/s][A
Generating train examples...: 1934 examples [07:02,  3.17 examples/s][A
Generating train examples...: 1940 examples [07:03,  3.68 examples/s][A
Generating train examples...: 1946 examples [07:04,  4.15 examples/s][A
Generating train examples...: 1952 examples [07:05,  4.57 examples/s][A
Generating train examples...: 1958 examples [07:06,  4.90 examples/s][A
Generating train examples...: 1964 examples [07:07,  5.17 examples/s][A
Generating train examples...: 1970 examples [07:08,  5.38 examples/s][A
Generating train examples...: 1976 examples [07:09,  5.53 examples/s][A
Generating train examples...: 1982 examples [07:10,  5.65 examples/s][A
Generating train examples...: 1988 examples [07:11,  5.73 examples/s][A
Generating train examples...: 1994 examples [07:12,  5.78 examples/s][A
Generating train examples...: 2000 examples [07:13,  5.81 examples/s][A
Generating train examples...: 2006 examples [07:14,  5.84 examples/s][A
Generating train examples...: 2012 examples [07:15,  5.87 examples/s][A
Generating train examples...: 2018 examples [07:16,  5.89 examples/s][A
Generating train examples...: 2024 examples [07:17,  5.90 examples/s][A
Generating train examples...: 2030 examples [07:18,  5.88 examples/s][A
Generating train examples...: 2036 examples [07:20,  5.85 examples/s][A
                                                                     [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 0/2040 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   0%|          | 1/2040 [00:44<25:20:07, 44.73s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   1%|          | 16/2040 [00:44<1:07:37,  2.00s/ examples][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 32/2040 [00:45<27:31,  1.22 examples/s]  [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   2%|▏         | 48/2040 [00:45<14:56,  2.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   3%|▎         | 64/2040 [00:45<09:04,  3.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   4%|▍         | 80/2040 [00:45<05:52,  5.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▍         | 96/2040 [00:45<03:57,  8.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   5%|▌         | 112/2040 [00:45<02:45, 11.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   6%|▋         | 128/2040 [00:46<01:57, 16.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   7%|▋         | 143/2040 [00:46<01:27, 21.72 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   8%|▊         | 159/2040 [00:46<01:04, 28.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▊         | 175/2040 [00:46<00:49, 37.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:   9%|▉         | 191/2040 [00:46<00:39, 46.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  10%|█         | 207/2040 [00:46<00:32, 55.78 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  11%|█         | 223/2040 [00:46<00:28, 63.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▏        | 239/2040 [00:47<00:25, 71.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  12%|█▎        | 255/2040 [00:47<00:22, 77.67 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  13%|█▎        | 271/2040 [00:47<00:21, 81.71 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  14%|█▍        | 287/2040 [00:47<00:20, 87.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  15%|█▍        | 303/2040 [00:47<00:18, 93.39 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▌        | 319/2040 [00:47<00:18, 94.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  16%|█▋        | 335/2040 [00:48<00:17, 97.33 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  17%|█▋        | 351/2040 [00:48<00:16, 101.54 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  18%|█▊        | 367/2040 [00:48<00:16, 100.27 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  19%|█▊        | 382/2040 [00:48<00:16, 101.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|█▉        | 398/2040 [00:48<00:16, 102.12 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  20%|██        | 414/2040 [00:48<00:15, 102.26 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  21%|██        | 430/2040 [00:48<00:15, 103.15 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  22%|██▏       | 446/2040 [00:49<00:28, 55.58 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 462/2040 [00:49<00:24, 63.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  23%|██▎       | 478/2040 [00:49<00:21, 72.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  24%|██▍       | 494/2040 [00:50<00:19, 79.29 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  25%|██▌       | 510/2040 [00:50<00:17, 85.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  26%|██▌       | 526/2040 [00:50<00:16, 90.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 542/2040 [00:50<00:15, 94.19 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  27%|██▋       | 558/2040 [00:50<00:15, 97.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  28%|██▊       | 574/2040 [00:50<00:14, 101.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  29%|██▉       | 590/2040 [00:50<00:13, 105.62 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|██▉       | 606/2040 [00:51<00:13, 108.21 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  30%|███       | 622/2040 [00:51<00:19, 72.64 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  31%|███▏      | 638/2040 [00:51<00:17, 79.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  32%|███▏      | 653/2040 [00:51<00:17, 81.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  33%|███▎      | 669/2040 [00:51<00:15, 87.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▎      | 685/2040 [00:52<00:14, 93.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  34%|███▍      | 701/2040 [00:52<00:14, 94.07 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  35%|███▌      | 717/2040 [00:52<00:14, 94.06 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  36%|███▌      | 733/2040 [00:52<00:13, 98.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  37%|███▋      | 749/2040 [00:52<00:12, 102.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 765/2040 [00:52<00:12, 104.58 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  38%|███▊      | 781/2040 [00:53<00:12, 103.75 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  39%|███▉      | 797/2040 [00:53<00:11, 106.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  40%|███▉      | 813/2040 [00:53<00:11, 108.40 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████      | 829/2040 [00:53<00:11, 108.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  41%|████▏     | 845/2040 [00:53<00:11, 100.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  42%|████▏     | 861/2040 [00:53<00:11, 98.26 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  43%|████▎     | 877/2040 [00:53<00:12, 93.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  44%|████▎     | 892/2040 [00:54<00:11, 95.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▍     | 908/2040 [00:54<00:11, 100.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  45%|████▌     | 924/2040 [00:54<00:10, 103.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  46%|████▌     | 940/2040 [00:54<00:10, 102.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  47%|████▋     | 956/2040 [00:54<00:10, 101.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 972/2040 [00:54<00:10, 104.34 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  48%|████▊     | 988/2040 [00:55<00:09, 106.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  49%|████▉     | 1004/2040 [00:55<00:09, 109.25 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  50%|█████     | 1020/2040 [00:55<00:09, 109.82 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  51%|█████     | 1036/2040 [00:55<00:09, 107.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1052/2040 [00:55<00:09, 108.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  52%|█████▏    | 1068/2040 [00:55<00:08, 108.44 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  53%|█████▎    | 1084/2040 [00:55<00:09, 102.60 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  54%|█████▍    | 1100/2040 [00:56<00:09, 102.73 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▍    | 1116/2040 [00:56<00:09, 100.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  55%|█████▌    | 1132/2040 [00:56<00:09, 94.32 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  56%|█████▋    | 1148/2040 [00:56<00:09, 95.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  57%|█████▋    | 1163/2040 [00:56<00:08, 97.56 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  58%|█████▊    | 1179/2040 [00:56<00:08, 100.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▊    | 1195/2040 [00:57<00:08, 102.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  59%|█████▉    | 1211/2040 [00:57<00:07, 104.61 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  60%|██████    | 1227/2040 [00:57<00:08, 101.50 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  61%|██████    | 1243/2040 [00:57<00:07, 103.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▏   | 1259/2040 [00:57<00:07, 103.43 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  62%|██████▎   | 1275/2040 [00:57<00:07, 104.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  63%|██████▎   | 1291/2040 [00:57<00:07, 105.11 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  64%|██████▍   | 1307/2040 [00:58<00:06, 106.01 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  65%|██████▍   | 1323/2040 [00:58<00:06, 106.68 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▌   | 1339/2040 [00:58<00:11, 59.50 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  66%|██████▋   | 1355/2040 [00:58<00:10, 66.85 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  67%|██████▋   | 1371/2040 [00:59<00:09, 74.28 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  68%|██████▊   | 1387/2040 [00:59<00:08, 80.76 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  69%|██████▊   | 1402/2040 [00:59<00:07, 86.45 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|██████▉   | 1418/2040 [00:59<00:06, 90.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  70%|███████   | 1434/2040 [00:59<00:06, 95.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  71%|███████   | 1450/2040 [00:59<00:05, 98.98 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  72%|███████▏  | 1466/2040 [01:00<00:05, 101.70 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1482/2040 [01:00<00:05, 104.36 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  73%|███████▎  | 1498/2040 [01:00<00:05, 105.30 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  74%|███████▍  | 1514/2040 [01:00<00:04, 105.37 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  75%|███████▌  | 1530/2040 [01:00<00:04, 105.20 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  76%|███████▌  | 1546/2040 [01:00<00:04, 107.74 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1562/2040 [01:00<00:04, 109.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  77%|███████▋  | 1578/2040 [01:01<00:04, 107.55 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  78%|███████▊  | 1594/2040 [01:01<00:04, 105.04 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  79%|███████▉  | 1610/2040 [01:01<00:04, 103.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|███████▉  | 1626/2040 [01:01<00:04, 95.08 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  80%|████████  | 1642/2040 [01:01<00:04, 98.69 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  81%|████████▏ | 1658/2040 [01:01<00:03, 101.87 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  82%|████████▏ | 1673/2040 [01:02<00:03, 103.92 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  83%|████████▎ | 1689/2040 [01:02<00:03, 107.10 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▎ | 1705/2040 [01:02<00:03, 108.84 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  84%|████████▍ | 1721/2040 [01:02<00:02, 109.80 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  85%|████████▌ | 1737/2040 [01:02<00:02, 111.48 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  86%|████████▌ | 1753/2040 [01:02<00:02, 111.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  87%|████████▋ | 1769/2040 [01:02<00:02, 112.22 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1785/2040 [01:03<00:02, 112.79 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  88%|████████▊ | 1801/2040 [01:03<00:02, 112.03 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  89%|████████▉ | 1817/2040 [01:03<00:02, 108.47 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  90%|████████▉ | 1833/2040 [01:03<00:01, 107.13 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████ | 1849/2040 [01:03<00:01, 102.86 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  91%|█████████▏| 1865/2040 [01:03<00:01, 92.19 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  92%|█████████▏| 1881/2040 [01:04<00:01, 93.49 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  93%|█████████▎| 1897/2040 [01:04<00:01, 96.53 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  94%|█████████▎| 1912/2040 [01:04<00:01, 97.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▍| 1928/2040 [01:04<00:01, 102.41 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  95%|█████████▌| 1944/2040 [01:04<00:00, 98.62 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  96%|█████████▌| 1960/2040 [01:04<00:00, 94.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  97%|█████████▋| 1976/2040 [01:05<00:00, 94.02 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 1992/2040 [01:05<00:00, 97.63 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  98%|█████████▊| 2008/2040 [01:05<00:00, 101.00 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...:  99%|█████████▉| 2024/2040 [01:05<00:00, 104.52 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*...: 100%|██████████| 2040/2040 [01:05<00:00, 106.12 examples/s][A
                                                                                                                                                                                                             [A                                                                Generating splits...:   0%|          | 0/2 [08:26<?, ? splits/s]Generating splits...:  50%|█████     | 1/2 [08:26<08:26, 506.88s/ splits]INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-train.tfrecord*. Number of examples: 2040 (shards: [16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16])

Generating test examples...: 0 examples [00:00, ? examples/s][ASubject: 4
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 3.3e+02 (2.2e-16 eps * 66 dim * 2.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 2.8e+02 (2.2e-16 eps * 66 dim * 1.9e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

Generating test examples...: 1 examples [00:05,  5.91s/ examples][A
Generating test examples...: 7 examples [00:06,  1.30 examples/s][A
Generating test examples...: 13 examples [00:07,  2.32 examples/s][A
Generating test examples...: 19 examples [00:08,  3.19 examples/s][A
Generating test examples...: 25 examples [00:09,  3.89 examples/s][A
Generating test examples...: 31 examples [00:10,  4.45 examples/s][A
Generating test examples...: 37 examples [00:11,  4.87 examples/s][A
Generating test examples...: 43 examples [00:12,  5.18 examples/s][A
Generating test examples...: 49 examples [00:13,  5.41 examples/s][A
Generating test examples...: 55 examples [00:14,  5.58 examples/s][A
Generating test examples...: 61 examples [00:15,  5.69 examples/s][A
Generating test examples...: 67 examples [00:16,  5.78 examples/s][A
Generating test examples...: 73 examples [00:17,  5.84 examples/s][A
Generating test examples...: 79 examples [00:18,  5.88 examples/s][A
Generating test examples...: 85 examples [00:19,  5.91 examples/s][A
Generating test examples...: 91 examples [00:20,  5.93 examples/s][A
Generating test examples...: 97 examples [00:21,  5.94 examples/s][A
Generating test examples...: 103 examples [00:22,  5.95 examples/s][A
Generating test examples...: 109 examples [00:23,  5.96 examples/s][A
Generating test examples...: 115 examples [00:24,  5.97 examples/s][A
                                                                   [Acsp shape (120, 64, 1920)

Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:   0%|          | 0/120 [00:00<?, ? examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  12%|█▎        | 15/120 [00:00<00:01, 102.42 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  25%|██▌       | 30/120 [00:00<00:00, 107.38 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  38%|███▊      | 45/120 [00:00<00:00, 108.17 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  50%|█████     | 60/120 [00:00<00:00, 108.64 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  62%|██████▎   | 75/120 [00:00<00:00, 107.97 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  75%|███████▌  | 90/120 [00:00<00:00, 97.41 examples/s] [A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...:  88%|████████▊ | 105/120 [00:01<00:00, 99.89 examples/s][A
Shuffling /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*...: 100%|██████████| 120/120 [00:01<00:00, 101.71 examples/s][A
                                                                                                                                                                                                          [A                                                                         Generating splits...:  50%|█████     | 1/2 [08:53<08:26, 506.88s/ splits]Generating splits...: 100%|██████████| 2/2 [08:53<00:00, 224.62s/ splits]                                                                         INFO[writer.py]: Done writing /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0.incomplete64YCN7/dtu_td_cmaa_50ov_30s-test.tfrecord*. Number of examples: 120 (shards: [15, 15, 15, 15, 15, 15, 15, 15])
Dataset dtu_td_cmaa_50ov_30s downloaded and prepared to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0. Subsequent calls will reuse this data.
INFO[build.py]: Dataset generation complete...

tfds.core.DatasetInfo(
    name='dtu_td_cmaa_50ov_30s',
    full_name='dtu_td_cmaa_50ov_30s/all_e4/1.0.0',
    description="""
    
    """,
    config_description="""
    5 second splits, all subjects except 4
    """,
    homepage='https://zenodo.org/record/3377911',
    data_dir='/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e4/1.0.0',
    file_format=tfrecord,
    download_size=Unknown size,
    dataset_size=9.77 GiB,
    features=FeaturesDict({
        'att_gender': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'att_lr': ClassLabel(shape=(), dtype=int64, num_classes=2),
        'aucostic': ClassLabel(shape=(), dtype=int64, num_classes=3),
        'audio_f_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_f_raw': Tensor(shape=(480000,), dtype=float32),
        'audio_m_ds': Tensor(shape=(1920,), dtype=float32),
        'audio_m_raw': Tensor(shape=(480000,), dtype=float32),
        'eeg': Tensor(shape=(1920, 66), dtype=float32),
        'eeg_csp': Tensor(shape=(64, 1920), dtype=float32),
        'eeg_csp_avg': Tensor(shape=(64,), dtype=float32),
    }),
    supervised_keys=None,
    disable_shuffling=True,
    splits={
        'test': <SplitInfo num_examples=120, num_shards=8>,
        'train': <SplitInfo num_examples=2040, num_shards=128>,
    },
    citation="""""",
)

INFO[build.py]: download_and_prepare for dataset dtu_td_cmaa_50ov_30s/all_e5/1.0.0...
INFO[dataset_builder.py]: Generating dataset dtu_td_cmaa_50ov_30s (/users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e5/1.0.0)
Downloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /users/PAS2301/alialavi/tensorflow_datasets/dtu_td_cmaa_50ov_30s/all_e5/1.0.0...
Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]
Generating train examples...: 0 examples [00:00, ? examples/s][ASubject: 1
Computing rank from data with rank=None
    Using tolerance 2.4e+02 (2.2e-16 eps * 66 dim * 1.6e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.
Computing rank from data with rank=None
    Using tolerance 1.1e+03 (2.2e-16 eps * 66 dim * 7.3e+16  max singular value)
    Estimated rank (mag): 66
    MAG: rank 66 computed from 66 data channels with 0 projectors
Reducing data rank from 66 -> 66
Estimating covariance using EMPIRICAL
Done.

                                                              [A                                                                Traceback (most recent call last):
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/bin/tfds", line 8, in <module>
    sys.exit(launch_cli())
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/scripts/cli/main.py", line 109, in launch_cli
    app.run(main, flags_parser=_parse_flags)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/absl/app.py", line 308, in run
    _run_main(main, args)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/absl/app.py", line 254, in _run_main
    sys.exit(main(argv))
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/scripts/cli/main.py", line 104, in main
    args.subparser_fn(args)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/scripts/cli/build.py", line 312, in _build_datasets
    process_builder_fn(builder)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/scripts/cli/build.py", line 551, in _download_and_prepare
    builder.download_and_prepare(
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/core/logging/__init__.py", line 166, in __call__
    return function(*args, **kwargs)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/core/dataset_builder.py", line 691, in download_and_prepare
    self._download_and_prepare(
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/core/dataset_builder.py", line 1584, in _download_and_prepare
    future = split_builder.submit_split_generation(
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/core/split_builder.py", line 341, in submit_split_generation
    return self._build_from_generator(**build_kwargs)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tensorflow_datasets/core/split_builder.py", line 406, in _build_from_generator
    for key, example in utils.tqdm(
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/tqdm/std.py", line 1182, in __iter__
    for obj in iterable:
  File "/users/PAS2301/alialavi/projects/AAD-CMAA/create_dataset/dtu_td_cmaa_50ov_30s/dtu_td_cmaa_50ov_30s_dataset_builder.py", line 230, in _generate_examples
    eeg_all_csp_avg_reshaped = csp.fit_transform(eeg_all_reshaped.astype(np.float64), events_mf_all_reshaped)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/mne/decoding/csp.py", line 252, in fit_transform
    return super().fit_transform(X, y=y, **fit_params)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/mne/decoding/mixin.py", line 33, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/mne/decoding/csp.py", line 191, in fit
    eigen_vectors, eigen_values = self._decompose_covs(covs, sample_weights)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/mne/decoding/csp.py", line 569, in _decompose_covs
    eigen_values, eigen_vectors = eigh(covs[0], covs.sum(0))
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/scipy/_lib/deprecation.py", line 213, in inner_f
    return f(*args, **kwargs)
  File "/users/PAS2301/alialavi/miniconda3/envs/tf1/lib/python3.10/site-packages/scipy/linalg/_decomp.py", line 593, in eigh
    raise LinAlgError(f'The leading minor of order {info-n} of B is not '
numpy.linalg.LinAlgError: The leading minor of order 66 of B is not positive definite. The factorization of B could not be completed and no eigenvalues or eigenvectors were computed.
Folder '/fs/scratch/PAS2622/tensorflow_datasets' already exists.
              0   0%    0.00kB/s    0:00:00 (xfr#0, ir-chk=1007/1033)             31   0%    0.00kB/s    0:00:00               31   0%    0.00kB/s    0:00:00 (xfr#1, ir-chk=1006/1033)             31   0%    0.00kB/s    0:00:00 (xfr#1, ir-chk=1006/1033)             43   0%    0.38kB/s    0:00:00 (xfr#2, to-chk=1224/1253)             54   0%    0.72kB/s    0:00:00 (xfr#3, to-chk=1223/1253)             72   0%    1.25kB/s    0:00:00 (xfr#4, to-chk=1222/1253)          4,433   0%  134.34kB/s    0:00:00 (xfr#5, to-chk=1221/1253)     82,527,040   0%   92.92MB/s    0:00:00 (xfr#6, to-chk=1220/1253)     88,032,064   0%   83.95MB/s    0:16:14      165,049,647   0%   91.83MB/s    0:00:01 (xfr#7, to-chk=1219/1253)    183,694,639   0%   87.64MB/s    0:15:32      247,572,254   0%   90.67MB/s    0:00:02 (xfr#8, to-chk=1218/1253)    273,393,438   0%   86.97MB/s    0:15:38      330,094,861   0%   93.83MB/s    0:00:03 (xfr#9, to-chk=1217/1253)    407,763,197   0%   99.05MB/s    0:00:03 (xfr#10, to-chk=1216/1253)    410,351,869   0%   97.91MB/s    0:13:52      490,285,804   0%   99.70MB/s    0:00:04 (xfr#11, to-chk=1215/1253)    518,892,268   0%  102.80MB/s    0:13:11      572,808,411   0%  103.70MB/s    0:00:05 (xfr#12, to-chk=1214/1253)    633,396,443   0%  105.95MB/s    0:12:47      655,331,018   0%  101.26MB/s    0:00:06 (xfr#13, to-chk=1213/1253)    737,853,625   0%  102.16MB/s    0:00:06 (xfr#14, to-chk=1212/1253)    747,323,577   0%  111.60MB/s    0:12:07      820,376,232   0%   98.66MB/s    0:00:07 (xfr#15, to-chk=1211/1253)    826,438,312   0%   97.88MB/s    0:13:48      902,898,839   1%  101.06MB/s    0:00:08 (xfr#16, to-chk=1210/1253)    970,302,615   1%  100.58MB/s    0:13:24      980,567,175   1%   99.88MB/s    0:00:09 (xfr#17, to-chk=1209/1253)  1,063,089,782   1%  101.17MB/s    0:00:10 (xfr#18, to-chk=1208/1253)  1,070,200,438   1%   97.74MB/s    0:13:47    1,145,612,389   1%  100.21MB/s    0:00:10 (xfr#19, to-chk=1207/1253)  1,159,276,645   1%   89.82MB/s    0:14:59    1,228,134,996   1%   99.56MB/s    0:00:11 (xfr#20, to-chk=1206/1253)  1,310,657,603   1%  104.81MB/s    0:00:11 (xfr#21, to-chk=1205/1253)  1,341,361,219   1%  112.24MB/s    0:11:58    1,393,180,210   1%  103.14MB/s    0:00:12 (xfr#22, to-chk=1204/1253)  1,467,137,586   1%  113.95MB/s    0:11:46    1,475,702,817   1%  104.43MB/s    0:00:13 (xfr#23, to-chk=1203/1253)  1,558,225,424   1%  105.46MB/s    0:00:14 (xfr#24, to-chk=1202/1253)  1,577,656,848   1%  117.35MB/s    0:11:24    1,640,748,031   1%  104.14MB/s    0:00:15 (xfr#25, to-chk=1201/1253)  1,673,024,511   1%  117.97MB/s    0:11:20    1,718,416,367   2%  102.24MB/s    0:00:16 (xfr#26, to-chk=1200/1253)  1,800,938,974   2%  104.24MB/s    0:00:16 (xfr#27, to-chk=1199/1253)  1,806,738,910   2%  106.64MB/s    0:12:31    1,883,461,581   2%  105.16MB/s    0:00:17 (xfr#28, to-chk=1198/1253)  1,962,956,749   2%  113.86MB/s    0:11:42    1,965,984,188   2%  106.54MB/s    0:00:17 (xfr#29, to-chk=1197/1253)  2,048,506,795   2%  108.49MB/s    0:00:18 (xfr#30, to-chk=1196/1253)  2,131,029,402   2%  110.39MB/s    0:00:18 (xfr#31, to-chk=1195/1253)  2,157,014,426   2%  133.04MB/s    0:09:59    2,213,552,009   2%  111.99MB/s    0:00:18 (xfr#32, to-chk=1194/1253)  2,291,220,345   2%  111.76MB/s    0:00:19 (xfr#33, to-chk=1193/1253)  2,294,431,609   2%  147.79MB/s    0:08:59    2,373,742,952   2%  111.96MB/s    0:00:20 (xfr#34, to-chk=1192/1253)  2,414,342,504   2%  144.97MB/s    0:09:08    2,456,265,559   2%  111.36MB/s    0:00:21 (xfr#35, to-chk=1191/1253)  2,486,969,175   2%  124.93MB/s    0:10:36    2,538,788,166   3%  110.99MB/s    0:00:21 (xfr#36, to-chk=1190/1253)  2,618,774,854   3%  110.09MB/s    0:12:00    2,621,310,773   3%  110.59MB/s    0:00:22 (xfr#37, to-chk=1189/1253)  2,703,833,380   3%  110.39MB/s    0:00:23 (xfr#38, to-chk=1188/1253)  2,723,789,092   3%  102.26MB/s    0:12:55    2,786,355,987   3%  109.66MB/s    0:00:24 (xfr#39, to-chk=1187/1253)  2,810,768,147   3%   94.40MB/s    0:13:58    2,868,878,594   3%  107.54MB/s    0:00:25 (xfr#40, to-chk=1186/1253)  2,871,794,946   3%   91.52MB/s    0:14:24    2,951,401,201   3%  106.54MB/s    0:00:26 (xfr#41, to-chk=1185/1253)  2,964,672,241   3%   82.26MB/s    0:16:00    3,029,069,537   3%  107.40MB/s    0:00:26 (xfr#42, to-chk=1184/1253)  3,111,592,144   3%  108.39MB/s    0:00:27 (xfr#43, to-chk=1183/1253)  3,194,114,751   3%  110.61MB/s    0:00:27 (xfr#44, to-chk=1182/1253)  3,197,031,103   3%  112.66MB/s    0:11:39    3,276,637,358   3%  109.51MB/s    0:00:28 (xfr#45, to-chk=1181/1253)  3,277,718,702   3%  110.97MB/s    0:11:49    3,359,159,965   4%  109.68MB/s    0:00:29 (xfr#46, to-chk=1180/1253)  3,409,917,597   4%  128.17MB/s    0:10:13    3,441,682,572   4%  110.25MB/s    0:00:29 (xfr#47, to-chk=1179/1253)  3,524,205,179   4%  110.85MB/s    0:00:30 (xfr#48, to-chk=1178/1253)  3,548,879,483   4%  134.09MB/s    0:09:45    3,601,873,515   4%  110.83MB/s    0:00:30 (xfr#49, to-chk=1177/1253)  3,684,396,122   4%  111.76MB/s    0:00:31 (xfr#50, to-chk=1176/1253)  3,742,133,338   4%  125.14MB/s    0:10:25    3,766,918,729   4%  112.82MB/s    0:00:31 (xfr#51, to-chk=1175/1253)  3,849,441,336   4%  113.08MB/s    0:00:32 (xfr#52, to-chk=1174/1253)  3,872,018,488   4%  136.67MB/s    0:09:31    3,931,963,943   4%  113.22MB/s    0:00:33 (xfr#53, to-chk=1173/1253)  4,014,486,550   4%  115.03MB/s    0:00:33 (xfr#54, to-chk=1172/1253)  4,097,009,157   4%  116.83MB/s    0:00:33 (xfr#55, to-chk=1171/1253)  4,153,173,509   4%  170.92MB/s    0:07:35    4,179,531,764   4%  117.75MB/s    0:00:33 (xfr#56, to-chk=1170/1253)  4,262,054,371   5%  118.54MB/s    0:00:34 (xfr#57, to-chk=1169/1253)  4,339,722,707   5%  119.38MB/s    0:00:34 (xfr#58, to-chk=1168/1253)  4,343,163,347   5%  189.47MB/s    0:06:49    4,422,245,314   5%  118.96MB/s    0:00:35 (xfr#59, to-chk=1167/1253)  4,458,191,810   5%  170.81MB/s    0:07:34    4,504,767,921   5%  119.53MB/s    0:00:35 (xfr#60, to-chk=1166/1253)  4,587,290,528   5%  120.04MB/s    0:00:36 (xfr#61, to-chk=1165/1253)  4,597,022,624   5%  168.72MB/s    0:07:38    4,669,813,135   5%  119.70MB/s    0:00:37 (xfr#62, to-chk=1164/1253)  4,752,335,742   5%  121.28MB/s    0:00:37 (xfr#63, to-chk=1163/1253)  4,827,702,142   5%  156.97MB/s    0:08:11    4,834,858,349   5%  121.72MB/s    0:00:37 (xfr#64, to-chk=1162/1253)  4,912,526,685   5%  122.17MB/s    0:00:38 (xfr#65, to-chk=1161/1253)  4,957,910,365   5%  140.56MB/s    0:09:08    4,995,049,292   5%  121.67MB/s    0:00:39 (xfr#66, to-chk=1160/1253)  5,055,637,324   6%  131.86MB/s    0:09:43    5,077,571,899   6%  120.51MB/s    0:00:40 (xfr#67, to-chk=1159/1253)  5,160,094,506   6%  120.86MB/s    0:00:40 (xfr#68, to-chk=1158/1253)  5,209,312,042   6%  138.37MB/s    0:09:15    5,242,617,113   6%  120.77MB/s    0:00:41 (xfr#69, to-chk=1157/1253)  5,317,098,777   6%  110.47MB/s    0:11:34    5,325,139,720   6%  120.57MB/s    0:00:42 (xfr#70, to-chk=1156/1253)  5,407,662,327   6%  120.94MB/s    0:00:42 (xfr#71, to-chk=1155/1253)  5,486,862,583   6%  121.52MB/s    0:10:29    5,490,184,934   6%  121.49MB/s    0:00:43 (xfr#72, to-chk=1154/1253)  5,572,707,541   6%  121.79MB/s    0:00:43 (xfr#73, to-chk=1153/1253)  5,650,375,877   6%  122.27MB/s    0:00:44 (xfr#74, to-chk=1152/1253)  5,650,408,645   6%  141.03MB/s    0:09:01    5,732,898,484   6%  121.86MB/s    0:00:44 (xfr#75, to-chk=1151/1253)  5,761,767,092   6%  130.28MB/s    0:09:45    5,815,421,091   6%  122.36MB/s    0:00:45 (xfr#76, to-chk=1150/1253)  5,897,943,698   7%  122.86MB/s    0:00:45 (xfr#77, to-chk=1149/1253)  5,952,764,562   7%  150.09MB/s    0:08:27    5,980,466,305   7%  123.38MB/s    0:00:46 (xfr#78, to-chk=1148/1253)  6,062,988,912   7%  124.01MB/s    0:00:46 (xfr#79, to-chk=1147/1253)  6,145,511,519   7%  124.57MB/s    0:00:47 (xfr#80, to-chk=1146/1253)  6,148,427,871   7%  154.18MB/s    0:08:12    6,223,179,855   7%  125.03MB/s    0:00:47 (xfr#81, to-chk=1145/1253)  6,305,702,462   7%  125.68MB/s    0:00:47 (xfr#82, to-chk=1144/1253)  6,357,115,454   7%  165.55MB/s    0:07:37    6,388,225,069   7%  126.08MB/s    0:00:48 (xfr#83, to-chk=1143/1253)  6,470,747,676   7%  127.29MB/s    0:00:48 (xfr#84, to-chk=1142/1253)  6,553,270,283   7%  127.20MB/s    0:00:49 (xfr#85, to-chk=1141/1253)  6,554,089,483   7%  186.25MB/s    0:06:45    6,635,792,890   7%  126.65MB/s    0:00:49 (xfr#86, to-chk=1140/1253)  6,718,315,497   8%  127.81MB/s    0:00:50 (xfr#87, to-chk=1139/1253)  6,719,658,985   8%  180.23MB/s    0:06:58    6,800,838,104   8%  127.80MB/s    0:00:50 (xfr#88, to-chk=1138/1253)  6,883,360,711   8%  128.92MB/s    0:00:50 (xfr#89, to-chk=1137/1253)  6,899,122,119   8%  178.76MB/s    0:07:00    6,961,029,047   8%  129.01MB/s    0:00:51 (xfr#90, to-chk=1136/1253)  7,042,588,599   8%  163.23MB/s    0:07:39    7,043,551,654   8%  128.74MB/s    0:00:52 (xfr#91, to-chk=1135/1253)  7,126,074,261   8%  128.98MB/s    0:00:52 (xfr#92, to-chk=1134/1253)  7,208,596,868   8%  130.07MB/s    0:00:52 (xfr#93, to-chk=1133/1253)  7,251,883,396   8%  166.41MB/s    0:07:29    7,291,119,475   8%  130.35MB/s    0:00:53 (xfr#94, to-chk=1132/1253)  7,373,642,082   8%  130.54MB/s    0:00:53 (xfr#95, to-chk=1131/1253)  7,424,072,034   8%  168.03MB/s    0:07:24    7,456,164,689   8%  130.98MB/s    0:00:54 (xfr#96, to-chk=1130/1253)  7,533,833,025   8%  131.36MB/s    0:00:54 (xfr#97, to-chk=1129/1253)  7,567,420,225   9%  159.18MB/s    0:07:48    7,616,355,632   9%  130.82MB/s    0:00:55 (xfr#98, to-chk=1128/1253)  7,698,878,239   9%  131.84MB/s    0:00:55 (xfr#99, to-chk=1127/1253)  7,747,931,935   9%  167.83MB/s    0:07:23    7,781,400,846   9%  131.57MB/s    0:00:56 (xfr#100, to-chk=1126/1253)  7,863,923,453   9%  132.58MB/s    0:00:56 (xfr#101, to-chk=1125/1253)  7,939,781,373   9%  163.68MB/s    0:07:33    7,946,446,060   9%  132.45MB/s    0:00:57 (xfr#102, to-chk=1124/1253)  8,028,968,667   9%  132.68MB/s    0:00:57 (xfr#103, to-chk=1123/1253)  8,097,519,323   9%  160.24MB/s    0:07:41    8,111,491,274   9%  132.82MB/s    0:00:58 (xfr#104, to-chk=1122/1253)  8,194,013,881   9%  133.80MB/s    0:00:58 (xfr#105, to-chk=1121/1253)  8,271,682,217   9%  133.90MB/s    0:00:58 (xfr#106, to-chk=1120/1253)  8,354,204,824   9%  134.87MB/s    0:00:59 (xfr#107, to-chk=1119/1253)  8,359,218,328   9%  188.40MB/s    0:06:31    8,436,727,431  10%  134.93MB/s    0:00:59 (xfr#108, to-chk=1118/1253)  8,519,250,038  10%  135.88MB/s    0:00:59 (xfr#109, to-chk=1117/1253)  8,550,805,622  10%  191.18MB/s    0:06:24    8,601,772,645  10%  135.51MB/s    0:01:00 (xfr#110, to-chk=1116/1253)  8,684,295,252  10%  135.47MB/s    0:01:01 (xfr#111, to-chk=1115/1253)  8,706,839,636  10%  182.65MB/s    0:06:41    8,766,817,859  10%  136.38MB/s    0:01:01 (xfr#112, to-chk=1114/1253)  8,844,486,195  10%  135.99MB/s    0:01:02 (xfr#113, to-chk=1113/1253)  8,855,791,155  10%  180.29MB/s    0:06:46    8,927,008,802  10%  136.08MB/s    0:01:02 (xfr#114, to-chk=1112/1253)  9,002,276,898  10%  152.63MB/s    0:07:59    9,009,531,409  10%  135.74MB/s    0:01:03 (xfr#115, to-chk=1111/1253)  9,087,191,569  10%  127.31MB/s    0:09:33    9,092,054,016  10%  135.00MB/s    0:01:04 (xfr#116, to-chk=1110/1253)  9,146,088,448  10%   99.41MB/s    0:12:14    9,174,576,623  10%  133.52MB/s    0:01:05 (xfr#117, to-chk=1109/1253)  9,257,099,230  11%  134.38MB/s    0:01:05 (xfr#118, to-chk=1108/1253)  9,335,250,910  11%  107.74MB/s    0:11:15    9,339,621,837  11%  134.04MB/s    0:01:06 (xfr#119, to-chk=1107/1253)  9,411,219,917  11%   92.22MB/s    0:13:08    9,422,144,444  11%  133.07MB/s    0:01:07 (xfr#120, to-chk=1106/1253)  9,504,667,051  11%  133.14MB/s    0:01:08 (xfr#121, to-chk=1105/1253)  9,529,308,587  11%   99.70MB/s    0:12:08    9,582,335,387  11%  132.53MB/s    0:01:08 (xfr#122, to-chk=1104/1253)  9,591,543,195  11%  100.88MB/s    0:11:59    9,664,857,994  11%  131.01MB/s    0:01:10 (xfr#123, to-chk=1103/1253)  9,689,270,154  11%   79.14MB/s    0:15:15    9,747,380,601  11%  130.88MB/s    0:01:11 (xfr#124, to-chk=1102/1253)  9,829,903,208  11%  131.69MB/s    0:01:11 (xfr#125, to-chk=1101/1253)  9,878,006,632  11%  104.35MB/s    0:11:32    9,912,425,815  11%  131.53MB/s    0:01:11 (xfr#126, to-chk=1100/1253)  9,979,043,159  11%   98.15MB/s    0:12:15    9,994,948,422  11%  130.79MB/s    0:01:12 (xfr#127, to-chk=1099/1253) 10,077,471,029  12%  131.06MB/s    0:01:13 (xfr#128, to-chk=1098/1253) 10,155,139,365  12%  131.80MB/s    0:01:13 (xfr#129, to-chk=1097/1253) 10,202,882,341  12%  139.11MB/s    0:08:37   10,237,661,972  12%  132.04MB/s    0:01:13 (xfr#130, to-chk=1096/1253) 10,320,184,579  12%  131.70MB/s    0:01:14 (xfr#131, to-chk=1095/1253) 10,323,625,219  12%  147.48MB/s    0:08:07   10,402,707,186  12%  131.41MB/s    0:01:15 (xfr#132, to-chk=1094/1253) 10,434,459,378  12%  129.31MB/s    0:09:14   10,485,229,793  12%  131.22MB/s    0:01:16 (xfr#133, to-chk=1093/1253) 10,518,816,993  12%  123.56MB/s    0:09:39   10,567,752,400  12%  130.17MB/s    0:01:17 (xfr#134, to-chk=1092/1253) 10,633,583,312  12%   98.60MB/s    0:12:05   10,650,275,007  12%  130.17MB/s    0:01:18 (xfr#135, to-chk=1091/1253) 10,732,797,614  12%  130.36MB/s    0:01:18 (xfr#136, to-chk=1090/1253) 10,815,320,221  12%  130.70MB/s    0:01:18 (xfr#137, to-chk=1089/1253) 10,820,333,725  12%  113.76MB/s    0:10:27   10,892,988,557  12%  131.03MB/s    0:01:19 (xfr#138, to-chk=1088/1253) 10,975,511,164  13%  131.28MB/s    0:01:19 (xfr#139, to-chk=1087/1253) 10,999,104,124  13%  129.38MB/s    0:09:10   11,058,033,771  13%  130.67MB/s    0:01:20 (xfr#140, to-chk=1086/1253) 11,084,248,171  13%  134.91MB/s    0:08:46   11,140,556,378  13%  130.23MB/s    0:01:21 (xfr#141, to-chk=1085/1253) 11,171,784,282  13%  128.35MB/s    0:09:13   11,223,078,985  13%  129.62MB/s    0:01:22 (xfr#142, to-chk=1084/1253) 11,230,976,073  13%   97.56MB/s    0:12:07   11,305,601,592  13%  128.69MB/s    0:01:23 (xfr#143, to-chk=1083/1253) 11,314,547,256  13%   74.89MB/s    0:15:46   11,388,124,199  13%  128.72MB/s    0:01:24 (xfr#144, to-chk=1082/1253) 11,444,517,927  13%   85.51MB/s    0:13:47   11,465,792,535  13%  128.52MB/s    0:01:25 (xfr#145, to-chk=1081/1253) 11,548,315,142  13%  128.40MB/s    0:01:25 (xfr#146, to-chk=1080/1253) 11,575,873,030  13%   95.86MB/s    0:12:16   11,630,837,749  13%  128.29MB/s    0:01:26 (xfr#147, to-chk=1079/1253) 11,713,360,356  13%  128.47MB/s    0:01:26 (xfr#148, to-chk=1078/1253) 11,715,228,132  13%  115.31MB/s    0:10:11   11,795,882,963  14%  128.68MB/s    0:01:27 (xfr#149, to-chk=1077/1253) 11,878,405,570  14%  128.89MB/s    0:01:27 (xfr#150, to-chk=1076/1253) 11,887,154,626  14%  136.49MB/s    0:08:35   11,960,928,177  14%  128.87MB/s    0:01:28 (xfr#151, to-chk=1075/1253) 12,033,836,977  14%  140.50MB/s    0:08:19   12,043,450,784  14%  129.00MB/s    0:01:29 (xfr#152, to-chk=1074/1253) 12,125,973,391  14%  128.80MB/s    0:01:29 (xfr#153, to-chk=1073/1253) 12,135,967,631  14%  133.47MB/s    0:08:44   12,203,641,727  14%  128.05MB/s    0:01:30 (xfr#154, to-chk=1072/1253) 12,206,558,079  14%  116.91MB/s    0:09:58   12,286,164,334  14%  127.92MB/s    0:01:31 (xfr#155, to-chk=1071/1253) 12,306,382,190  14%   98.96MB/s    0:11:46   12,368,686,941  14%  127.78MB/s    0:01:32 (xfr#156, to-chk=1070/1253) 12,436,615,005  14%   93.64MB/s    0:12:25   12,451,209,548  14%  127.30MB/s    0:01:33 (xfr#157, to-chk=1069/1253) 12,533,732,155  14%  127.41MB/s    0:01:33 (xfr#158, to-chk=1068/1253) 12,552,639,291  14%   96.99MB/s    0:11:58   12,616,254,762  15%  127.11MB/s    0:01:34 (xfr#159, to-chk=1067/1253) 12,636,210,474  15%   99.82MB/s    0:11:37   12,698,777,369  15%  126.15MB/s    0:01:36 (xfr#160, to-chk=1066/1253) 12,703,790,873  15%   92.89MB/s    0:12:28   12,776,445,705  15%  126.12MB/s    0:01:36 (xfr#161, to-chk=1065/1253) 12,814,751,497  15%   89.59MB/s    0:12:54   12,858,968,312  15%  126.00MB/s    0:01:37 (xfr#162, to-chk=1064/1253) 12,923,488,504  15%   87.67MB/s    0:13:10   12,941,490,919  15%  125.54MB/s    0:01:38 (xfr#163, to-chk=1063/1253) 13,024,013,526  15%  125.40MB/s    0:01:39 (xfr#164, to-chk=1062/1253) 13,025,357,014  15%   92.27MB/s    0:12:29   13,106,536,133  15%  125.03MB/s    0:01:39 (xfr#165, to-chk=1061/1253) 13,108,928,197  15%   95.68MB/s    0:12:02   13,189,058,740  15%  125.03MB/s    0:01:40 (xfr#166, to-chk=1060/1253) 13,239,685,300  15%  100.19MB/s    0:11:28   13,271,581,347  15%  124.94MB/s    0:01:41 (xfr#167, to-chk=1059/1253) 13,354,103,954  15%  125.15MB/s    0:01:41 (xfr#168, to-chk=1058/1253) 13,420,197,010  15%  117.37MB/s    0:09:46   13,436,626,561  16%  125.34MB/s    0:01:42 (xfr#169, to-chk=1057/1253) 13,514,294,897  16%  125.18MB/s    0:01:42 (xfr#170, to-chk=1056/1253) 13,530,842,737  16%  119.03MB/s    0:09:37   13,596,817,504  16%  125.26MB/s    0:01:43 (xfr#171, to-chk=1055/1253) 13,658,191,968  16%  130.08MB/s    0:08:47   13,679,340,111  16%  125.09MB/s    0:01:44 (xfr#172, to-chk=1054/1253) 13,761,862,718  16%  125.28MB/s    0:01:44 (xfr#173, to-chk=1053/1253) 13,821,402,174  16%  138.11MB/s    0:08:15   13,844,385,325  16%  125.29MB/s    0:01:45 (xfr#174, to-chk=1052/1253) 13,926,907,932  16%  125.20MB/s    0:01:46 (xfr#175, to-chk=1051/1253) 13,927,202,844  16%  120.10MB/s    0:09:28   14,009,430,539  16%  125.32MB/s    0:01:46 (xfr#176, to-chk=1050/1253) 14,072,377,867  16%  128.85MB/s    0:08:49   14,087,098,875  16%  125.25MB/s    0:01:47 (xfr#177, to-chk=1049/1253) 14,169,621,482  16%  125.08MB/s    0:01:48 (xfr#178, to-chk=1048/1253) 14,173,324,266  16%  122.54MB/s    0:09:15   14,252,144,089  16%  125.15MB/s    0:01:48 (xfr#179, to-chk=1047/1253) 14,325,052,889  17%  116.92MB/s    0:09:40   14,334,666,696  17%  125.05MB/s    0:01:49 (xfr#180, to-chk=1046/1253) 14,417,189,303  17%  124.75MB/s    0:01:50 (xfr#181, to-chk=1045/1253) 14,419,646,903  17%  114.57MB/s    0:09:52   14,499,711,910  17%  124.71MB/s    0:01:50 (xfr#182, to-chk=1044/1253) 14,554,532,774  17%  112.15MB/s    0:10:03   14,582,234,517  17%  124.43MB/s    0:01:51 (xfr#183, to-chk=1043/1253) 14,629,977,493  17%  106.25MB/s    0:10:36   14,664,757,124  17%  124.31MB/s    0:01:52 (xfr#184, to-chk=1042/1253) 14,719,840,132  17%   94.01MB/s    0:11:58   14,747,279,731  17%  123.86MB/s    0:01:53 (xfr#185, to-chk=1041/1253) 14,824,948,067  17%  124.00MB/s    0:01:54 (xfr#186, to-chk=1040/1253) 14,848,573,795  17%  102.03MB/s    0:11:00   14,907,470,674  17%  123.76MB/s    0:01:54 (xfr#187, to-chk=1039/1253) 14,953,902,930  17%   94.74MB/s    0:11:50   14,989,993,281  17%  123.76MB/s    0:01:55 (xfr#188, to-chk=1038/1253) 15,072,515,888  17%  123.92MB/s    0:01:56 (xfr#189, to-chk=1037/1253) 15,114,491,696  18%  114.94MB/s    0:09:44   15,155,038,495  18%  124.02MB/s    0:01:56 (xfr#190, to-chk=1036/1253) 15,237,561,102  18%  123.95MB/s    0:01:57 (xfr#191, to-chk=1035/1253) 15,239,428,878  18%  123.32MB/s    0:09:03   15,320,083,709  18%  123.88MB/s    0:01:57 (xfr#192, to-chk=1034/1253) 15,357,603,069  18%  120.46MB/s    0:09:15   15,397,752,045  18%  123.82MB/s    0:01:58 (xfr#193, to-chk=1033/1253) 15,480,274,652  18%  124.01MB/s    0:01:59 (xfr#194, to-chk=1032/1253) 15,521,201,884  18%  134.38MB/s    0:08:16   15,562,797,259  18%  124.20MB/s    0:01:59 (xfr#195, to-chk=1031/1253) 15,645,319,866  18%  124.41MB/s    0:01:59 (xfr#196, to-chk=1030/1253) 15,690,179,258  18%  136.37MB/s    0:08:08   15,727,842,473  18%  124.45MB/s    0:02:00 (xfr#197, to-chk=1029/1253) 15,810,365,080  18%  124.53MB/s    0:02:01 (xfr#198, to-chk=1028/1253) 15,840,282,264  18%  142.51MB/s    0:07:46   15,892,887,687  18%  124.27MB/s    0:02:01 (xfr#199, to-chk=1027/1253) 15,925,164,167  18%  135.15MB/s    0:08:11   15,975,410,294  19%  124.24MB/s    0:02:02 (xfr#200, to-chk=1026/1253) 16,057,932,901  19%  124.30MB/s    0:02:03 (xfr#201, to-chk=1025/1253) 16,065,633,381  19%  129.90MB/s    0:08:29   16,135,601,237  19%  124.36MB/s    0:02:03 (xfr#202, to-chk=1024/1253) 16,214,015,061  19%  124.99MB/s    0:08:48   16,218,123,844  19%  124.39MB/s    0:02:04 (xfr#203, to-chk=1023/1253) 16,300,646,451  19%  124.55MB/s    0:02:04 (xfr#204, to-chk=1022/1253) 16,383,169,058  19%  124.79MB/s    0:02:05 (xfr#205, to-chk=1021/1253) 16,393,425,442  19%  131.98MB/s    0:08:19   16,465,691,665  19%  124.93MB/s    0:02:05 (xfr#206, to-chk=1020/1253) 16,535,258,129  19%  145.57MB/s    0:07:31   16,548,214,272  19%  124.85MB/s    0:02:06 (xfr#207, to-chk=1019/1253) 16,630,736,879  19%  124.92MB/s    0:02:06 (xfr#208, to-chk=1018/1253) 16,653,051,887  19%  139.56MB/s    0:07:50   16,708,405,215  19%  124.65MB/s    0:02:07 (xfr#209, to-chk=1017/1253) 16,790,927,822  20%  124.83MB/s    0:02:08 (xfr#210, to-chk=1016/1253) 16,795,941,326  20%  138.15MB/s    0:07:54   16,873,450,429  20%  124.99MB/s    0:02:08 (xfr#211, to-chk=1015/1253) 16,955,973,036  20%  125.08MB/s    0:02:09 (xfr#212, to-chk=1014/1253) 16,960,462,252  20%  133.85MB/s    0:08:08   17,038,495,643  20%  125.06MB/s    0:02:09 (xfr#213, to-chk=1013/1253) 17,076,539,291  20%  120.41MB/s    0:09:01   17,121,018,250  20%  124.52MB/s    0:02:11 (xfr#214, to-chk=1012/1253) 17,200,644,490  20%  122.36MB/s    0:08:52   17,203,540,857  20%  124.65MB/s    0:02:11 (xfr#215, to-chk=1011/1253) 17,286,063,464  20%  124.88MB/s    0:02:12 (xfr#216, to-chk=1010/1253) 17,368,586,071  20%  125.02MB/s    0:02:12 (xfr#217, to-chk=1009/1253) 17,379,891,031  20%  130.54MB/s    0:08:17   17,446,254,407  20%  125.19MB/s    0:02:12 (xfr#218, to-chk=1008/1253) 17,500,190,535  20%  121.34MB/s    0:08:54   17,528,777,014  20%  124.90MB/s    0:02:13 (xfr#219, to-chk=1007/1253) 17,577,568,566  20%  118.54MB/s    0:09:06   17,611,299,621  20%  124.47MB/s    0:02:14 (xfr#220, to-chk=1006/1253) 17,691,548,453  21%  113.77MB/s    0:09:28   17,693,822,228  21%  124.31MB/s    0:02:15 (xfr#221, to-chk=1005/1253) 17,776,344,835  21%  124.38MB/s    0:02:16 (xfr#222, to-chk=1004/1253) 17,835,327,235  21%  105.55MB/s    0:10:11   17,858,867,442  21%  124.42MB/s    0:02:16 (xfr#223, to-chk=1003/1253) 17,941,390,049  21%  124.34MB/s    0:02:17 (xfr#224, to-chk=1002/1253) 17,944,011,489  21%  102.86MB/s    0:10:26   18,019,058,385  21%  124.14MB/s    0:02:18 (xfr#225, to-chk=1001/1253) 18,101,580,992  21%  124.56MB/s    0:02:18 (xfr#226, to-chk=1000/1253) 18,105,021,632  21%  123.14MB/s    0:08:41   18,184,103,599  21%  124.66MB/s    0:02:19 (xfr#227, to-chk=999/1253)  18,266,626,206  21%  125.08MB/s    0:02:19 (xfr#228, to-chk=998/1253) 18,318,825,630  21%  149.55MB/s    0:07:08   18,349,148,813  21%  125.05MB/s    0:02:19 (xfr#229, to-chk=997/1253) 18,431,671,420  21%  125.47MB/s    0:02:20 (xfr#230, to-chk=996/1253) 18,514,194,027  22%  125.56MB/s    0:02:20 (xfr#231, to-chk=995/1253) 18,519,207,531  22%  162.60MB/s    0:06:32   18,596,716,634  22%  125.66MB/s    0:02:21 (xfr#232, to-chk=994/1253) 18,669,887,578  22%  172.20MB/s    0:06:09   18,679,239,241  22%  125.58MB/s    0:02:21 (xfr#233, to-chk=993/1253) 18,741,137,993  22%  148.87MB/s    0:07:07   18,756,907,577  22%  125.16MB/s    0:02:22 (xfr#234, to-chk=992/1253) 18,839,430,184  22%  125.57MB/s    0:02:23 (xfr#235, to-chk=991/1253) 18,919,679,016  22%  140.14MB/s    0:07:32   18,921,952,791  22%  125.45MB/s    0:02:23 (xfr#236, to-chk=990/1253) 19,004,475,398  22%  125.85MB/s    0:02:24 (xfr#237, to-chk=989/1253) 19,086,998,005  22%  125.72MB/s    0:02:24 (xfr#238, to-chk=988/1253) 19,087,817,205  22%  132.75MB/s    0:07:56   19,169,520,612  22%  125.78MB/s    0:02:25 (xfr#239, to-chk=987/1253) 19,248,819,172  22%  135.45MB/s    0:07:45   19,252,043,219  22%  125.90MB/s    0:02:25 (xfr#240, to-chk=986/1253) 19,329,711,555  23%  125.68MB/s    0:02:26 (xfr#241, to-chk=985/1253) 19,400,064,451  23%  156.44MB/s    0:06:42   19,412,234,162  23%  126.07MB/s    0:02:26 (xfr#242, to-chk=984/1253) 19,494,756,769  23%  126.21MB/s    0:02:27 (xfr#243, to-chk=983/1253) 19,577,279,376  23%  126.35MB/s    0:02:27 (xfr#244, to-chk=982/1253) 19,578,622,864  23%  156.99MB/s    0:06:40   19,659,801,983  23%  126.32MB/s    0:02:28 (xfr#245, to-chk=981/1253) 19,742,324,590  23%  126.72MB/s    0:02:28 (xfr#246, to-chk=980/1253) 19,755,988,846  23%  159.38MB/s    0:06:32   19,824,847,197  23%  126.67MB/s    0:02:29 (xfr#247, to-chk=979/1253) 19,907,369,804  23%  126.79MB/s    0:02:29 (xfr#248, to-chk=978/1253) 19,909,237,580  23%  157.42MB/s    0:06:36   19,989,892,411  23%  126.56MB/s    0:02:30 (xfr#249, to-chk=977/1253) 20,002,770,235  23%  143.41MB/s    0:07:14   20,067,560,747  23%  126.60MB/s    0:02:31 (xfr#250, to-chk=976/1253) 20,150,083,354  24%  126.66MB/s    0:02:31 (xfr#251, to-chk=975/1253) 20,159,815,450  24%  138.08MB/s    0:07:30   20,232,605,961  24%  126.59MB/s    0:02:32 (xfr#252, to-chk=974/1253) 20,308,824,329  24%  131.38MB/s    0:07:52   20,315,128,568  24%  126.73MB/s    0:02:32 (xfr#253, to-chk=973/1253) 20,397,651,175  24%  126.56MB/s    0:02:33 (xfr#254, to-chk=972/1253) 20,403,713,255  24%  117.63MB/s    0:08:47   20,480,173,782  24%  126.48MB/s    0:02:34 (xfr#255, to-chk=971/1253) 20,552,558,294  24%  131.01MB/s    0:07:52   20,562,696,389  24%  126.62MB/s    0:02:34 (xfr#256, to-chk=970/1253) 20,640,364,725  24%  126.60MB/s    0:02:35 (xfr#257, to-chk=969/1253) 20,689,385,653  24%  126.35MB/s    0:08:08   20,722,887,332  24%  126.71MB/s    0:02:35 (xfr#258, to-chk=968/1253) 20,805,409,939  24%  126.86MB/s    0:02:36 (xfr#259, to-chk=967/1253) 20,874,976,403  24%  135.08MB/s    0:07:35   20,887,932,546  24%  126.98MB/s    0:02:36 (xfr#260, to-chk=966/1253) 20,970,455,153  24%  127.04MB/s    0:02:37 (xfr#261, to-chk=965/1253) 20,970,458,980  24%  127.04MB/s    0:02:37 (xfr#262, to-chk=964/1253) 20,970,458,992  24%  127.04MB/s    0:02:37 (xfr#263, to-chk=962/1253) 20,970,459,003  24%  127.04MB/s    0:02:37 (xfr#264, to-chk=961/1253) 20,970,459,021  24%  127.04MB/s    0:02:37 (xfr#265, to-chk=960/1253) 20,970,461,711  24%  127.04MB/s    0:02:37 (xfr#266, to-chk=959/1253) 21,019,154,959  25%  146.84MB/s    0:06:58   21,043,275,776  25%  127.06MB/s    0:02:37 (xfr#267, to-chk=958/1253) 21,116,089,841  25%  127.09MB/s    0:02:38 (xfr#268, to-chk=957/1253) 21,164,488,177  25%  146.00MB/s    0:06:59   21,188,903,906  25%  127.15MB/s    0:02:38 (xfr#269, to-chk=956/1253) 21,261,717,971  25%  127.19MB/s    0:02:39 (xfr#270, to-chk=955/1253) 21,334,532,036  25%  127.51MB/s    0:02:39 (xfr#271, to-chk=954/1253) 21,371,789,252  25%  162.82MB/s    0:06:14   21,407,346,101  25%  127.44MB/s    0:02:40 (xfr#272, to-chk=953/1253) 21,480,160,166  25%  127.76MB/s    0:02:40 (xfr#273, to-chk=952/1253) 21,552,974,231  25%  128.08MB/s    0:02:40 (xfr#274, to-chk=951/1253) 21,574,502,807  25%  166.82MB/s    0:06:04   21,630,642,567  25%  128.05MB/s    0:02:41 (xfr#275, to-chk=950/1253) 21,708,310,903  25%  128.17MB/s    0:02:41 (xfr#276, to-chk=949/1253) 21,784,365,431  25%  182.49MB/s    0:05:32   21,785,979,239  25%  128.38MB/s    0:02:41 (xfr#277, to-chk=948/1253) 21,863,647,575  26%  128.43MB/s    0:02:42 (xfr#278, to-chk=947/1253) 21,941,315,911  26%  128.53MB/s    0:02:42 (xfr#279, to-chk=946/1253) 21,942,135,111  26%  184.90MB/s    0:05:27   22,018,984,247  26%  128.59MB/s    0:02:43 (xfr#280, to-chk=945/1253) 22,096,652,583  26%  128.72MB/s    0:02:43 (xfr#281, to-chk=944/1253) 22,110,087,463  26%  175.54MB/s    0:05:43   22,174,320,919  26%  128.69MB/s    0:02:44 (xfr#282, to-chk=943/1253) 22,247,134,984  26%  129.00MB/s    0:02:44 (xfr#283, to-chk=942/1253) 22,283,441,928  26%  168.64MB/s    0:05:56   22,324,803,320  26%  128.89MB/s    0:02:45 (xfr#284, to-chk=941/1253) 22,364,780,280  26%  138.11MB/s    0:07:14   22,402,471,656  26%  128.52MB/s    0:02:46 (xfr#285, to-chk=940/1253) 22,480,139,992  26%  128.58MB/s    0:02:46 (xfr#286, to-chk=939/1253) 22,484,629,208  26%  129.02MB/s    0:07:44   22,557,808,328  26%  128.66MB/s    0:02:47 (xfr#287, to-chk=938/1253) 22,635,476,664  26%  128.69MB/s    0:02:47 (xfr#288, to-chk=937/1253) 22,647,731,896  26%  127.86MB/s    0:07:47   22,713,145,000  27%  128.82MB/s    0:02:48 (xfr#289, to-chk=936/1253) 22,790,813,336  27%  128.78MB/s    0:02:48 (xfr#290, to-chk=935/1253) 22,791,632,536  27%  120.50MB/s    0:08:15   22,868,481,672  27%  128.71MB/s    0:02:49 (xfr#291, to-chk=934/1253) 22,927,234,696  27%  133.37MB/s    0:07:26   22,946,150,008  27%  128.77MB/s    0:02:49 (xfr#292, to-chk=933/1253) 23,023,818,344  27%  128.57MB/s    0:02:50 (xfr#293, to-chk=932/1253) 23,029,093,992  27%  129.42MB/s    0:07:39   23,101,486,680  27%  128.49MB/s    0:02:51 (xfr#294, to-chk=931/1253) 23,179,155,016  27%  128.63MB/s    0:02:51 (xfr#295, to-chk=930/1253) 23,179,187,784  27%  126.30MB/s    0:07:49   23,256,823,352  27%  128.33MB/s    0:02:52 (xfr#296, to-chk=929/1253) 23,258,691,128  27%  111.02MB/s    0:08:53   23,334,491,688  27%  128.19MB/s    0:02:53 (xfr#297, to-chk=928/1253) 23,407,305,753  27%  128.49MB/s    0:02:53 (xfr#298, to-chk=927/1253) 23,409,697,817  27%  114.63MB/s    0:08:35   23,484,974,089  27%  128.42MB/s    0:02:54 (xfr#299, to-chk=926/1253) 23,535,797,257  28%  120.54MB/s    0:08:08   23,562,642,425  28%  128.37MB/s    0:02:55 (xfr#300, to-chk=925/1253) 23,640,310,761  28%  128.37MB/s    0:02:55 (xfr#301, to-chk=924/1253) 23,668,884,457  28%  116.52MB/s    0:08:24   23,717,979,097  28%  128.40MB/s    0:02:56 (xfr#302, to-chk=923/1253) 23,795,647,433  28%  128.46MB/s    0:02:56 (xfr#303, to-chk=922/1253) 23,816,881,097  28%  133.12MB/s    0:07:20   23,873,315,769  28%  128.37MB/s    0:02:57 (xfr#304, to-chk=921/1253) 23,950,984,105  28%  128.48MB/s    0:02:57 (xfr#305, to-chk=920/1253) 23,954,949,033  28%  130.10MB/s    0:07:29   24,028,652,441  28%  128.57MB/s    0:02:58 (xfr#306, to-chk=919/1253) 24,106,320,777  28%  128.67MB/s    0:02:58 (xfr#307, to-chk=918/1253) 24,127,062,921  28%  141.04MB/s    0:06:53   24,183,989,113  28%  128.78MB/s    0:02:59 (xfr#308, to-chk=917/1253) 24,261,657,449  28%  128.79MB/s    0:02:59 (xfr#309, to-chk=916/1253) 24,289,739,625  28%  147.95MB/s    0:06:33   24,339,325,785  29%  128.91MB/s    0:03:00 (xfr#310, to-chk=915/1253) 24,416,994,121  29%  128.93MB/s    0:03:00 (xfr#311, to-chk=914/1253) 24,460,804,937  29%  153.18MB/s    0:06:18   24,494,662,457  29%  129.02MB/s    0:03:01 (xfr#312, to-chk=913/1253) 24,572,330,793  29%  128.93MB/s    0:03:01 (xfr#313, to-chk=912/1253) 24,587,797,289  29%  150.54MB/s    0:06:24   24,649,999,129  29%  129.07MB/s    0:03:02 (xfr#314, to-chk=911/1253) 24,722,813,194  29%  129.35MB/s    0:03:02 (xfr#315, to-chk=910/1253) 24,754,041,098  29%  148.22MB/s    0:06:29   24,800,481,530  29%  129.10MB/s    0:03:03 (xfr#316, to-chk=909/1253) 24,878,149,866  29%  129.22MB/s    0:03:03 (xfr#317, to-chk=908/1253) 24,923,697,386  29%  150.02MB/s    0:06:23   24,955,818,202  29%  129.23MB/s    0:03:04 (xfr#318, to-chk=907/1253) 24,989,208,794  29%  125.29MB/s    0:07:39   25,033,486,538  29%  128.97MB/s    0:03:05 (xfr#319, to-chk=906/1253) 25,111,154,874  29%  129.01MB/s    0:03:05 (xfr#320, to-chk=905/1253) 25,132,159,162  29%  129.08MB/s    0:07:24   25,188,823,210  30%  128.89MB/s    0:03:06 (xfr#321, to-chk=904/1253) 25,206,419,626  30%  107.91MB/s    0:08:51   25,266,491,546  30%  128.75MB/s    0:03:07 (xfr#322, to-chk=903/1253) 25,304,273,050  30%   88.89MB/s    0:10:43   25,344,159,882  30%  127.97MB/s    0:03:08 (xfr#323, to-chk=902/1253) 25,345,241,226  30%   82.45MB/s    0:11:33   25,421,828,218  30%  127.68MB/s    0:03:09 (xfr#324, to-chk=901/1253) 25,429,463,162  30%   68.83MB/s    0:13:49   25,499,496,554  30%  127.60MB/s    0:03:10 (xfr#325, to-chk=900/1253) 25,573,453,930  30%   85.02MB/s    0:11:09   25,577,164,890  30%  127.68MB/s    0:03:11 (xfr#326, to-chk=899/1253) 25,654,833,226  30%  127.64MB/s    0:03:11 (xfr#327, to-chk=898/1253) 25,676,886,090  30%   88.15MB/s    0:10:44   25,732,501,562  30%  127.40MB/s    0:03:12 (xfr#328, to-chk=897/1253) 25,782,341,690  30%  104.29MB/s    0:09:04   25,810,169,898  30%  127.34MB/s    0:03:13 (xfr#329, to-chk=896/1253) 25,882,983,963  30%  127.61MB/s    0:03:13 (xfr#330, to-chk=895/1253) 25,931,513,371  30%  118.57MB/s    0:07:57   25,960,652,299  30%  127.28MB/s    0:03:14 (xfr#331, to-chk=894/1253) 25,981,918,731  30%   96.47MB/s    0:09:46   26,038,320,635  31%  126.71MB/s    0:03:15 (xfr#332, to-chk=893/1253) 26,042,547,707  31%   83.97MB/s    0:11:12   26,110,443,003  31%   75.34MB/s    0:12:28   26,115,988,971  31%  126.29MB/s    0:03:17 (xfr#333, to-chk=892/1253) 26,160,061,931  31%   52.79MB/s    0:17:47   26,193,657,307  31%  125.92MB/s    0:03:18 (xfr#334, to-chk=891/1253) 26,271,325,643  31%  125.90MB/s    0:03:18 (xfr#335, to-chk=890/1253) 26,276,863,435  31%   63.37MB/s    0:14:47   26,348,993,979  31%  125.73MB/s    0:03:19 (xfr#336, to-chk=889/1253) 26,389,921,211  31%   74.21MB/s    0:12:36   26,426,662,315  31%  125.50MB/s    0:03:20 (xfr#337, to-chk=888/1253) 26,503,765,419  31%   82.26MB/s    0:11:21   26,504,330,651  31%  125.30MB/s    0:03:21 (xfr#338, to-chk=887/1253) 26,573,045,147  31%   86.14MB/s    0:10:49   26,581,998,987  31%  125.00MB/s    0:03:22 (xfr#339, to-chk=886/1253) 26,643,635,595  31%   79.32MB/s    0:11:44   26,659,667,323  31%  124.64MB/s    0:03:23 (xfr#340, to-chk=885/1253) 26,737,335,659  31%  124.48MB/s    0:03:24 (xfr#341, to-chk=884/1253) 26,738,154,859  31%   77.67MB/s    0:11:58   26,814,438,763  31%   70.18MB/s    0:13:14   26,815,003,995  31%  124.17MB/s    0:03:25 (xfr#342, to-chk=883/1253) 26,892,672,331  32%  124.10MB/s    0:03:26 (xfr#343, to-chk=882/1253) 26,970,340,667  32%  124.37MB/s    0:03:26 (xfr#344, to-chk=881/1253) 26,986,102,075  32%   93.86MB/s    0:09:51   27,048,009,003  32%  124.35MB/s    0:03:27 (xfr#345, to-chk=880/1253) 27,059,576,107  32%   97.97MB/s    0:09:26   27,125,677,339  32%  124.01MB/s    0:03:28 (xfr#346, to-chk=879/1253) 27,198,491,404  32%  124.26MB/s    0:03:28 (xfr#347, to-chk=878/1253) 27,211,369,228  32%  111.38MB/s    0:08:16   27,276,159,740  32%  124.25MB/s    0:03:29 (xfr#348, to-chk=877/1253) 27,353,828,076  32%  124.27MB/s    0:03:29 (xfr#349, to-chk=876/1253) 27,353,926,380  32%  128.37MB/s    0:07:10   27,431,496,412  32%  124.32MB/s    0:03:30 (xfr#350, to-chk=875/1253) 27,492,084,444  32%  120.48MB/s    0:07:37   27,509,164,748  32%  124.30MB/s    0:03:31 (xfr#351, to-chk=874/1253) 27,586,833,084  32%  124.27MB/s    0:03:31 (xfr#352, to-chk=873/1253) 27,622,779,580  32%  134.11MB/s    0:06:49   27,664,501,420  32%  124.32MB/s    0:03:32 (xfr#353, to-chk=872/1253) 27,728,759,468  33%  121.20MB/s    0:07:32   27,742,169,756  33%  124.16MB/s    0:03:33 (xfr#354, to-chk=871/1253) 27,803,544,220  33%  105.33MB/s    0:08:39   27,819,838,092  33%  123.92MB/s    0:03:34 (xfr#355, to-chk=870/1253) 27,897,506,428  33%  123.75MB/s    0:03:34 (xfr#356, to-chk=869/1253) 27,899,636,348  33%   95.22MB/s    0:09:34   27,975,174,764  33%  123.68MB/s    0:03:35 (xfr#357, to-chk=868/1253) 28,021,607,020  33%   93.11MB/s    0:09:45   28,052,843,100  33%  123.75MB/s    0:03:36 (xfr#358, to-chk=867/1253) 28,130,511,436  33%  123.83MB/s    0:03:36 (xfr#359, to-chk=866/1253) 28,194,507,340  33%  110.74MB/s    0:08:11   28,208,179,772  33%  123.91MB/s    0:03:37 (xfr#360, to-chk=865/1253) 28,285,848,108  33%  123.86MB/s    0:03:37 (xfr#361, to-chk=864/1253) 28,358,662,173  33%  124.10MB/s    0:03:37 (xfr#362, to-chk=863/1253) 28,361,840,669  33%  132.45MB/s    0:06:49   28,436,330,509  33%  124.05MB/s    0:03:38 (xfr#363, to-chk=862/1253) 28,470,179,853  33%  135.76MB/s    0:06:38   28,513,998,845  33%  124.02MB/s    0:03:39 (xfr#364, to-chk=861/1253) 28,591,667,181  34%  124.02MB/s    0:03:39 (xfr#365, to-chk=860/1253) 28,598,777,837  34%  137.30MB/s    0:06:33   28,669,335,517  34%  124.02MB/s    0:03:40 (xfr#366, to-chk=859/1253) 28,747,003,853  34%  124.08MB/s    0:03:40 (xfr#367, to-chk=858/1253) 28,750,444,493  34%  132.28MB/s    0:06:47   28,824,672,189  34%  124.11MB/s    0:03:41 (xfr#368, to-chk=857/1253) 28,902,340,525  34%  124.15MB/s    0:03:42 (xfr#369, to-chk=856/1253) 28,903,684,013  34%  129.15MB/s    0:06:55   28,980,008,861  34%  124.15MB/s    0:03:42 (xfr#370, to-chk=855/1253) 29,055,014,813  34%  139.40MB/s    0:06:24   29,057,677,197  34%  124.21MB/s    0:03:43 (xfr#371, to-chk=854/1253) 29,135,345,533  34%  124.16MB/s    0:03:43 (xfr#372, to-chk=853/1253) 29,163,165,565  34%  134.59MB/s    0:06:37   29,213,013,869  34%  124.01MB/s    0:03:44 (xfr#373, to-chk=852/1253) 29,246,863,213  34%  118.12MB/s    0:07:31   29,290,682,205  34%  123.99MB/s    0:03:45 (xfr#374, to-chk=851/1253) 29,364,377,437  35%  109.67MB/s    0:08:05   29,368,350,541  35%  123.88MB/s    0:03:46 (xfr#375, to-chk=850/1253) 29,446,018,877  35%  123.83MB/s    0:03:46 (xfr#376, to-chk=849/1253) 29,460,633,405  35%   96.56MB/s    0:09:10   29,523,687,213  35%  123.80MB/s    0:03:47 (xfr#377, to-chk=848/1253) 29,601,355,549  35%  123.80MB/s    0:03:48 (xfr#378, to-chk=847/1253) 29,614,724,893  35%  107.50MB/s    0:08:12   29,674,169,614  35%  124.03MB/s    0:03:48 (xfr#379, to-chk=846/1253) 29,751,837,950  35%  124.00MB/s    0:03:48 (xfr#380, to-chk=845/1253) 29,765,797,118  35%  123.82MB/s    0:07:06   29,829,506,286  35%  124.01MB/s    0:03:49 (xfr#381, to-chk=844/1253) 29,887,014,126  35%  124.70MB/s    0:07:02   29,907,174,622  35%  123.91MB/s    0:03:50 (xfr#382, to-chk=843/1253) 29,984,842,958  35%  123.95MB/s    0:03:50 (xfr#383, to-chk=842/1253) 30,035,535,054  35%  137.17MB/s    0:06:23   30,062,511,294  35%  124.01MB/s    0:03:51 (xfr#384, to-chk=841/1253) 30,140,179,630  35%  123.94MB/s    0:03:51 (xfr#385, to-chk=840/1253) 30,149,649,582  35%  127.63MB/s    0:06:51   30,217,847,966  36%  123.94MB/s    0:03:52 (xfr#386, to-chk=839/1253) 30,291,805,342  36%  125.47MB/s    0:06:57   30,295,516,302  36%  123.96MB/s    0:03:53 (xfr#387, to-chk=838/1253) 30,373,184,638  36%  124.20MB/s    0:03:53 (xfr#388, to-chk=837/1253) 30,450,852,974  36%  124.21MB/s    0:03:53 (xfr#389, to-chk=836/1253) 30,465,041,518  36%  137.85MB/s    0:06:18   30,528,521,310  36%  124.19MB/s    0:03:54 (xfr#390, to-chk=835/1253) 30,601,430,110  36%  134.95MB/s    0:06:25   30,606,189,646  36%  124.16MB/s    0:03:55 (xfr#391, to-chk=834/1253) 30,683,857,982  36%  124.12MB/s    0:03:55 (xfr#392, to-chk=833/1253) 30,708,532,286  36%  133.28MB/s    0:06:29   30,761,526,318  36%  124.08MB/s    0:03:56 (xfr#393, to-chk=832/1253) 30,834,340,383  36%  124.30MB/s    0:03:56 (xfr#394, to-chk=831/1253) 30,912,008,719  36%  124.54MB/s    0:03:56 (xfr#395, to-chk=830/1253) 30,932,488,719  36%  144.65MB/s    0:05:57   30,989,677,055  36%  124.35MB/s    0:03:57 (xfr#396, to-chk=829/1253) 31,044,170,239  37%  130.78MB/s    0:06:34   31,067,345,391  37%  124.25MB/s    0:03:58 (xfr#397, to-chk=828/1253) 31,145,013,727  37%  124.25MB/s    0:03:59 (xfr#398, to-chk=827/1253) 31,151,337,951  37%  124.07MB/s    0:06:55   31,222,682,063  37%  124.17MB/s    0:03:59 (xfr#399, to-chk=826/1253) 31,272,391,119  37%  127.25MB/s    0:06:43   31,300,350,399  37%  124.14MB/s    0:04:00 (xfr#400, to-chk=825/1253) 31,378,018,735  37%  124.19MB/s    0:04:00 (xfr#401, to-chk=824/1253) 31,408,460,207  37%  113.48MB/s    0:07:31   31,455,687,071  37%  124.21MB/s    0:04:01 (xfr#402, to-chk=823/1253) 31,455,690,898  37%  124.21MB/s    0:04:01 (xfr#403, to-chk=822/1253) 31,455,690,910  37%  124.20MB/s    0:04:01 (xfr#404, to-chk=820/1253) 31,455,690,921  37%  124.20MB/s    0:04:01 (xfr#405, to-chk=819/1253) 31,455,690,939  37%  124.20MB/s    0:04:01 (xfr#406, to-chk=818/1253) 31,455,693,629  37%  124.20MB/s    0:04:01 (xfr#407, to-chk=817/1253) 31,528,507,694  37%  124.41MB/s    0:04:01 (xfr#408, to-chk=816/1253) 31,601,321,759  37%  124.63MB/s    0:04:01 (xfr#409, to-chk=815/1253) 31,674,135,824  37%  124.83MB/s    0:04:01 (xfr#410, to-chk=814/1253) 31,692,518,672  37%  153.69MB/s    0:05:31   31,746,949,889  37%  124.73MB/s    0:04:02 (xfr#411, to-chk=813/1253) 31,819,763,954  37%  124.94MB/s    0:04:02 (xfr#412, to-chk=812/1253) 31,892,578,019  38%  125.15MB/s    0:04:03 (xfr#413, to-chk=811/1253) 31,965,392,084  38%  125.36MB/s    0:04:03 (xfr#414, to-chk=810/1253) 32,030,371,028  38%  208.59MB/s    0:04:02   32,038,206,149  38%  125.57MB/s    0:04:03 (xfr#415, to-chk=809/1253) 32,115,874,485  38%  125.51MB/s    0:04:04 (xfr#416, to-chk=808/1253) 32,129,014,453  38%  202.41MB/s    0:04:09   32,193,542,821  38%  125.46MB/s    0:04:04 (xfr#417, to-chk=807/1253) 32,271,211,157  38%  125.50MB/s    0:04:05 (xfr#418, to-chk=806/1253) 32,276,224,661  38%  204.99MB/s    0:04:05   32,348,879,493  38%  125.50MB/s    0:04:05 (xfr#419, to-chk=805/1253) 32,426,547,829  38%  125.55MB/s    0:04:06 (xfr#420, to-chk=804/1253) 32,426,580,597  38%  173.97MB/s    0:04:48   32,504,216,165  38%  125.46MB/s    0:04:07 (xfr#421, to-chk=803/1253) 32,521,026,149  38%  114.35MB/s    0:07:18   32,581,884,501  38%  125.32MB/s    0:04:07 (xfr#422, to-chk=802/1253) 32,615,995,989  38%  107.33MB/s    0:07:46   32,659,552,837  38%  125.01MB/s    0:04:09 (xfr#423, to-chk=801/1253) 32,732,366,902  39%  125.22MB/s    0:04:09 (xfr#424, to-chk=800/1253) 32,770,803,766  39%  109.03MB/s    0:07:37   32,810,035,238  39%  125.07MB/s    0:04:10 (xfr#425, to-chk=799/1253) 32,848,078,886  39%   93.11MB/s    0:08:55   32,887,703,574  39%  125.01MB/s    0:04:10 (xfr#426, to-chk=798/1253) 32,965,371,910  39%  125.05MB/s    0:04:11 (xfr#427, to-chk=797/1253) 32,979,560,454  39%  102.94MB/s    0:08:02   33,043,040,246  39%  125.06MB/s    0:04:11 (xfr#428, to-chk=796/1253) 33,112,803,318  39%  118.54MB/s    0:06:58   33,120,708,582  39%  125.00MB/s    0:04:12 (xfr#429, to-chk=795/1253) 33,198,376,918  39%  124.90MB/s    0:04:13 (xfr#430, to-chk=794/1253) 33,207,584,726  39%  104.14MB/s    0:07:55   33,276,045,254  39%  124.93MB/s    0:04:14 (xfr#431, to-chk=793/1253) 33,353,713,590  39%  124.95MB/s    0:04:14 (xfr#432, to-chk=792/1253) 33,356,367,798  39%  120.97MB/s    0:06:47   33,431,381,926  39%  124.98MB/s    0:04:15 (xfr#433, to-chk=791/1253) 33,509,050,262  39%  125.01MB/s    0:04:15 (xfr#434, to-chk=790/1253) 33,509,869,462  39%  125.81MB/s    0:06:31   33,586,718,598  40%  125.07MB/s    0:04:16 (xfr#435, to-chk=789/1253) 33,664,386,934  40%  125.09MB/s    0:04:16 (xfr#436, to-chk=788/1253) 33,664,419,702  40%  130.12MB/s    0:06:16   33,742,055,270  40%  125.10MB/s    0:04:17 (xfr#437, to-chk=787/1253) 33,817,323,366  40%  143.86MB/s    0:05:39   33,819,723,606  40%  125.16MB/s    0:04:17 (xfr#438, to-chk=786/1253) 33,892,537,671  40%  125.22MB/s    0:04:18 (xfr#439, to-chk=785/1253) 33,970,206,007  40%  125.25MB/s    0:04:18 (xfr#440, to-chk=784/1253) 33,971,025,207  40%  145.09MB/s    0:05:35   34,047,874,343  40%  125.30MB/s    0:04:19 (xfr#441, to-chk=783/1253) 34,125,542,679  40%  125.34MB/s    0:04:19 (xfr#442, to-chk=782/1253) 34,126,886,167  40%  145.69MB/s    0:05:33   34,203,211,015  40%  125.41MB/s    0:04:20 (xfr#443, to-chk=781/1253) 34,243,613,959  40%  136.59MB/s    0:05:54   34,280,879,351  40%  125.05MB/s    0:04:21 (xfr#444, to-chk=780/1253) 34,289,825,015  40%  107.57MB/s    0:07:30   34,358,547,687  40%  124.75MB/s    0:04:22 (xfr#445, to-chk=779/1253) 34,369,328,359  40%   86.90MB/s    0:09:16   34,436,216,023  41%  124.46MB/s    0:04:23 (xfr#446, to-chk=778/1253) 34,456,171,735  41%   71.96MB/s    0:11:10   34,513,884,359  41%  124.46MB/s    0:04:24 (xfr#447, to-chk=777/1253) 34,570,278,087  41%   71.80MB/s    0:11:10   34,591,552,695  41%  124.32MB/s    0:04:25 (xfr#448, to-chk=776/1253) 34,660,136,119  41%   84.27MB/s    0:09:30   34,669,221,031  41%  124.16MB/s    0:04:26 (xfr#449, to-chk=775/1253) 34,731,447,463  41%   86.25MB/s    0:09:16   34,746,889,367  41%  124.03MB/s    0:04:27 (xfr#450, to-chk=774/1253) 34,824,557,703  41%  124.02MB/s    0:04:27 (xfr#451, to-chk=773/1253) 34,833,503,367  41%   87.26MB/s    0:09:08   34,902,226,039  41%  123.77MB/s    0:04:28 (xfr#452, to-chk=772/1253) 34,922,443,895  41%   77.65MB/s    0:10:15   34,979,894,375  41%  123.71MB/s    0:04:29 (xfr#453, to-chk=771/1253) 35,043,628,135  41%   84.54MB/s    0:09:24   35,057,562,711  41%  123.62MB/s    0:04:30 (xfr#454, to-chk=770/1253) 35,135,231,047  41%  123.48MB/s    0:04:31 (xfr#455, to-chk=769/1253) 35,147,748,423  41%   91.77MB/s    0:08:38   35,208,045,112  41%  123.67MB/s    0:04:31 (xfr#456, to-chk=768/1253) 35,285,713,448  42%  123.59MB/s    0:04:32 (xfr#457, to-chk=767/1253) 35,295,412,776  42%  104.86MB/s    0:07:32   35,363,381,784  42%  123.59MB/s    0:04:32 (xfr#458, to-chk=766/1253) 35,395,133,976  42%  112.36MB/s    0:07:01   35,441,050,120  42%  123.48MB/s    0:04:33 (xfr#459, to-chk=765/1253) 35,518,718,456  42%  123.51MB/s    0:04:34 (xfr#460, to-chk=764/1253) 35,536,839,160  42%  117.24MB/s    0:06:42   35,596,386,792  42%  123.53MB/s    0:04:34 (xfr#461, to-chk=763/1253) 35,674,055,128  42%  123.54MB/s    0:04:35 (xfr#462, to-chk=762/1253) 35,676,185,048  42%  125.61MB/s    0:06:14   35,751,723,464  42%  123.37MB/s    0:04:36 (xfr#463, to-chk=761/1253) 35,752,542,664  42%  108.26MB/s    0:07:14   35,823,583,688  42%   98.67MB/s    0:07:55   35,829,391,800  42%  123.08MB/s    0:04:37 (xfr#464, to-chk=760/1253) 35,907,060,136  42%  122.96MB/s    0:04:38 (xfr#465, to-chk=759/1253) 35,909,190,056  42%   85.75MB/s    0:09:06   35,963,978,152  42%   63.31MB/s    0:12:19   35,984,728,472  42%  122.63MB/s    0:04:39 (xfr#466, to-chk=758/1253) 36,028,277,144  42%   59.83MB/s    0:13:01   36,062,396,808  42%  122.36MB/s    0:04:41 (xfr#467, to-chk=757/1253) 36,097,294,728  43%   60.65MB/s    0:12:49   36,140,065,144  43%  122.12MB/s    0:04:42 (xfr#468, to-chk=756/1253) 36,217,733,480  43%  122.14MB/s    0:04:42 (xfr#469, to-chk=755/1253) 36,219,076,968  43%   68.60MB/s    0:11:18   36,295,401,816  43%  122.02MB/s    0:04:43 (xfr#470, to-chk=754/1253) 36,368,215,881  43%  122.21MB/s    0:04:43 (xfr#471, to-chk=753/1253) 36,370,083,657  43%   94.07MB/s    0:08:13   36,445,884,217  43%  122.09MB/s    0:04:44 (xfr#472, to-chk=752/1253) 36,459,810,617  43%  101.72MB/s    0:07:35   36,523,552,553  43%  121.87MB/s    0:04:45 (xfr#473, to-chk=751/1253) 36,526,731,049  43%  102.10MB/s    0:07:32   36,594,102,057  43%   87.06MB/s    0:08:50   36,601,220,889  43%  121.54MB/s    0:04:47 (xfr#474, to-chk=750/1253) 36,677,537,561  43%   71.15MB/s    0:10:47   36,678,889,225  43%  121.45MB/s    0:04:48 (xfr#475, to-chk=749/1253) 36,756,557,561  43%  121.48MB/s    0:04:48 (xfr#476, to-chk=748/1253) 36,827,631,353  43%   80.66MB/s    0:09:29   36,834,225,897  43%  121.44MB/s    0:04:49 (xfr#477, to-chk=747/1253) 36,911,894,233  44%  121.46MB/s    0:04:49 (xfr#478, to-chk=746/1253) 36,944,432,857  44%   91.22MB/s    0:08:22   36,989,562,569  44%  121.14MB/s    0:04:51 (xfr#479, to-chk=745/1253) 36,991,430,345  44%   88.74MB/s    0:08:36   37,067,230,905  44%  121.20MB/s    0:04:51 (xfr#480, to-chk=744/1253) 37,144,899,241  44%  121.31MB/s    0:04:52 (xfr#481, to-chk=743/1253) 37,165,903,529  44%  107.61MB/s    0:07:03   37,222,567,577  44%  121.22MB/s    0:04:52 (xfr#482, to-chk=742/1253) 37,255,204,505  44%   99.53MB/s    0:07:37   37,300,235,913  44%  121.19MB/s    0:04:53 (xfr#483, to-chk=741/1253) 37,374,193,289  44%   99.74MB/s    0:07:35   37,377,904,249  44%  121.10MB/s    0:04:54 (xfr#484, to-chk=740/1253) 37,455,572,585  44%  121.03MB/s    0:04:55 (xfr#485, to-chk=739/1253) 37,487,324,777  44%  115.21MB/s    0:06:33   37,533,240,921  44%  121.10MB/s    0:04:55 (xfr#486, to-chk=738/1253) 37,600,906,841  44%  102.56MB/s    0:07:20   37,610,909,257  44%  121.02MB/s    0:04:56 (xfr#487, to-chk=737/1253) 37,683,293,769  44%  100.53MB/s    0:07:28   37,683,723,322  44%  120.85MB/s    0:04:57 (xfr#488, to-chk=736/1253) 37,749,554,234  45%   87.87MB/s    0:08:32   37,761,391,658  45%  120.66MB/s    0:04:58 (xfr#489, to-chk=735/1253) 37,838,461,994  45%   82.20MB/s    0:09:07   37,839,059,994  45%  120.52MB/s    0:04:59 (xfr#490, to-chk=734/1253) 37,916,728,330  45%  120.43MB/s    0:05:00 (xfr#491, to-chk=733/1253) 37,920,693,258  45%   72.94MB/s    0:10:15   37,994,396,666  45%  120.19MB/s    0:05:01 (xfr#492, to-chk=732/1253) 37,994,953,722  45%   71.34MB/s    0:10:28   38,072,065,002  45%  120.08MB/s    0:05:02 (xfr#493, to-chk=731/1253) 38,081,272,810  45%   76.45MB/s    0:09:45   38,149,733,338  45%  120.07MB/s    0:05:03 (xfr#494, to-chk=730/1253) 38,167,854,042  45%   72.65MB/s    0:10:14   38,227,401,674  45%  119.90MB/s    0:05:04 (xfr#495, to-chk=729/1253) 38,253,910,986  45%   75.59MB/s    0:09:49   38,305,070,010  45%  119.74MB/s    0:05:05 (xfr#496, to-chk=728/1253) 38,382,738,346  45%  119.92MB/s    0:05:05 (xfr#497, to-chk=727/1253) 38,428,384,170  45%   98.37MB/s    0:07:31   38,460,406,682  45%  119.64MB/s    0:05:06 (xfr#498, to-chk=726/1253) 38,471,187,354  45%   88.90MB/s    0:08:18   38,538,075,018  45%  119.56MB/s    0:05:07 (xfr#499, to-chk=725/1253) 38,588,963,722  46%  100.43MB/s    0:07:20   38,615,743,354  46%  119.59MB/s    0:05:07 (xfr#500, to-chk=724/1253) 38,693,411,690  46%  119.64MB/s    0:05:08 (xfr#501, to-chk=723/1253) 38,755,572,586  46%  119.25MB/s    0:06:09   38,771,080,026  46%  119.72MB/s    0:05:08 (xfr#502, to-chk=722/1253) 38,843,894,091  46%  119.89MB/s    0:05:08 (xfr#503, to-chk=721/1253) 38,921,562,427  46%  119.87MB/s    0:05:09 (xfr#504, to-chk=720/1253) 38,925,003,067  46%  117.84MB/s    0:06:12   38,999,230,763  46%  119.88MB/s    0:05:10 (xfr#505, to-chk=719/1253) 39,034,390,827  46%  127.49MB/s    0:05:43   39,076,899,099  46%  119.59MB/s    0:05:11 (xfr#506, to-chk=718/1253) 39,110,715,675  46%  118.16MB/s    0:06:10   39,154,567,435  46%  119.57MB/s    0:05:12 (xfr#507, to-chk=717/1253) 39,205,718,283  46%   99.33MB/s    0:07:19   39,232,235,771  46%  119.42MB/s    0:05:13 (xfr#508, to-chk=716/1253) 39,294,920,955  46%   79.44MB/s    0:09:08   39,309,904,107  46%  119.27MB/s    0:05:14 (xfr#509, to-chk=715/1253) 39,387,269,355  46%   79.24MB/s    0:09:08   39,387,572,443  46%  119.17MB/s    0:05:15 (xfr#510, to-chk=714/1253) 39,465,240,779  47%  119.11MB/s    0:05:15 (xfr#511, to-chk=713/1253) 39,476,545,739  47%   80.65MB/s    0:08:57   39,542,909,115  47%  119.01MB/s    0:05:16 (xfr#512, to-chk=712/1253) 39,581,214,907  47%   85.24MB/s    0:08:27   39,620,577,451  47%  119.00MB/s    0:05:17 (xfr#513, to-chk=711/1253) 39,654,688,939  47%   83.74MB/s    0:08:35   39,698,245,787  47%  118.85MB/s    0:05:18 (xfr#514, to-chk=710/1253) 39,760,668,827  47%   82.32MB/s    0:08:43   39,775,914,123  47%  118.68MB/s    0:05:19 (xfr#515, to-chk=709/1253) 39,817,365,643  47%   76.51MB/s    0:09:22   39,853,582,459  47%  118.45MB/s    0:05:20 (xfr#516, to-chk=708/1253) 39,908,665,467  47%   73.50MB/s    0:09:44   39,931,250,795  47%  118.40MB/s    0:05:21 (xfr#517, to-chk=707/1253) 40,008,919,131  47%  118.36MB/s    0:05:22 (xfr#518, to-chk=706/1253) 40,017,864,795  47%   81.92MB/s    0:08:42   40,086,587,467  47%  118.32MB/s    0:05:23 (xfr#519, to-chk=705/1253) 40,159,401,532  47%  118.48MB/s    0:05:23 (xfr#520, to-chk=704/1253) 40,162,055,740  47%   95.70MB/s    0:07:26   40,222,873,148  47%   96.39MB/s    0:07:22   40,237,069,868  47%  118.21MB/s    0:05:24 (xfr#521, to-chk=703/1253) 40,279,668,268  48%   88.19MB/s    0:08:02   40,314,738,204  48%  117.93MB/s    0:05:26 (xfr#522, to-chk=702/1253) 40,345,441,820  48%   77.87MB/s    0:09:06   40,392,406,540  48%  117.89MB/s    0:05:26 (xfr#523, to-chk=701/1253) 40,466,888,204  48%   72.48MB/s    0:09:44   40,470,074,876  48%  117.80MB/s    0:05:27 (xfr#524, to-chk=700/1253) 40,547,743,212  48%  117.72MB/s    0:05:28 (xfr#525, to-chk=699/1253) 40,549,348,844  48%   77.74MB/s    0:09:04   40,588,408,300  48%   73.26MB/s    0:09:37   40,625,411,548  48%  117.43MB/s    0:05:29 (xfr#526, to-chk=698/1253) 40,668,173,788  48%   76.54MB/s    0:09:11   40,703,079,884  48%  117.38MB/s    0:05:30 (xfr#527, to-chk=697/1253) 40,780,748,220  48%  117.39MB/s    0:05:31 (xfr#528, to-chk=696/1253) 40,800,179,644  48%   79.03MB/s    0:08:52   40,858,416,556  48%  117.22MB/s    0:05:32 (xfr#529, to-chk=695/1253) 40,870,770,092  48%   76.33MB/s    0:09:10   40,936,084,892  48%  117.22MB/s    0:05:33 (xfr#530, to-chk=694/1253) 40,980,419,996  48%   93.42MB/s    0:07:28   41,013,753,228  48%  117.21MB/s    0:05:33 (xfr#531, to-chk=693/1253) 41,091,421,564  48%  117.27MB/s    0:05:34 (xfr#532, to-chk=692/1253) 41,116,882,300  49%  106.98MB/s    0:06:30   41,169,089,900  49%  117.20MB/s    0:05:35 (xfr#533, to-chk=691/1253) 41,222,698,348  49%  100.76MB/s    0:06:53   41,246,758,236  49%  117.13MB/s    0:05:35 (xfr#534, to-chk=690/1253) 41,319,572,301  49%  117.29MB/s    0:05:35 (xfr#535, to-chk=689/1253) 41,376,359,245  49%  120.63MB/s    0:05:44   41,397,240,637  49%  117.12MB/s    0:05:37 (xfr#536, to-chk=688/1253) 41,405,924,157  49%   99.95MB/s    0:06:55   41,474,908,973  49%  117.00MB/s    0:05:38 (xfr#537, to-chk=687/1253) 41,547,555,629  49%   98.57MB/s    0:06:59   41,552,577,309  49%  116.98MB/s    0:05:38 (xfr#538, to-chk=686/1253) 41,619,194,653  49%   90.70MB/s    0:07:35   41,630,245,645  49%  116.85MB/s    0:05:39 (xfr#539, to-chk=685/1253) 41,707,913,981  49%  116.92MB/s    0:05:40 (xfr#540, to-chk=684/1253) 41,763,259,133  49%   88.29MB/s    0:07:45   41,785,582,317  49%  116.91MB/s    0:05:40 (xfr#541, to-chk=683/1253) 41,846,170,349  49%  102.03MB/s    0:06:42   41,863,250,653  49%  116.73MB/s    0:05:42 (xfr#542, to-chk=682/1253) 41,940,918,989  49%  116.78MB/s    0:05:42 (xfr#543, to-chk=681/1253) 41,940,922,816  49%  116.78MB/s    0:05:42 (xfr#544, to-chk=680/1253) 41,940,922,828  49%  116.78MB/s    0:05:42 (xfr#545, to-chk=678/1253) 41,940,922,839  49%  116.78MB/s    0:05:42 (xfr#546, to-chk=677/1253) 41,940,922,857  49%  116.78MB/s    0:05:42 (xfr#547, to-chk=676/1253) 41,940,925,547  49%  116.78MB/s    0:05:42 (xfr#548, to-chk=675/1253) 41,948,298,347  50%   95.28MB/s    0:07:09   42,013,739,612  50%  116.68MB/s    0:05:43 (xfr#549, to-chk=674/1253) 42,036,578,908  50%   99.29MB/s    0:06:51   42,086,553,677  50%  116.69MB/s    0:05:43 (xfr#550, to-chk=673/1253) 42,159,367,742  50%  116.84MB/s    0:05:44 (xfr#551, to-chk=672/1253) 42,226,771,518  50%  106.62MB/s    0:06:21   42,232,181,807  50%  116.77MB/s    0:05:44 (xfr#552, to-chk=671/1253) 42,304,995,872  50%  116.92MB/s    0:05:45 (xfr#553, to-chk=670/1253) 42,377,809,937  50%  116.93MB/s    0:05:45 (xfr#554, to-chk=669/1253) 42,409,103,377  50%  129.49MB/s    0:05:12   42,450,624,002  50%  116.93MB/s    0:05:46 (xfr#555, to-chk=668/1253) 42,510,163,458  50%  127.70MB/s    0:05:16   42,523,438,067  50%  116.88MB/s    0:05:46 (xfr#556, to-chk=667/1253) 42,568,297,459  50%  114.86MB/s    0:05:51   42,601,106,403  50%  116.61MB/s    0:05:48 (xfr#557, to-chk=666/1253) 42,659,335,139  50%   96.63MB/s    0:06:56   42,678,774,739  50%  116.55MB/s    0:05:49 (xfr#558, to-chk=665/1253) 42,756,443,075  50%  116.63MB/s    0:05:49 (xfr#559, to-chk=664/1253) 42,803,923,907  51%   88.10MB/s    0:07:35   42,834,111,411  51%  116.58MB/s    0:05:50 (xfr#560, to-chk=663/1253) 42,877,922,227  51%   81.85MB/s    0:08:09   42,911,779,747  51%  116.47MB/s    0:05:51 (xfr#561, to-chk=662/1253) 42,952,969,123  51%   88.89MB/s    0:07:29   42,989,448,083  51%  116.32MB/s    0:05:52 (xfr#562, to-chk=661/1253) 43,067,116,419  51%  116.27MB/s    0:05:53 (xfr#563, to-chk=660/1253) 43,067,673,475  51%   94.22MB/s    0:07:03   43,144,784,755  51%  116.24MB/s    0:05:53 (xfr#564, to-chk=659/1253) 43,217,598,820  51%  116.39MB/s    0:05:54 (xfr#565, to-chk=658/1253) 43,219,990,884  51%   94.65MB/s    0:06:59   43,295,267,156  51%  116.37MB/s    0:05:54 (xfr#566, to-chk=657/1253) 43,370,010,964  51%  113.63MB/s    0:05:48   43,372,935,492  51%  116.40MB/s    0:05:55 (xfr#567, to-chk=656/1253) 43,450,603,828  51%  116.34MB/s    0:05:56 (xfr#568, to-chk=655/1253) 43,454,568,756  51%  117.02MB/s    0:05:37   43,528,272,164  51%  116.30MB/s    0:05:56 (xfr#569, to-chk=654/1253) 43,599,083,812  51%  124.18MB/s    0:05:16   43,605,940,500  51%  116.36MB/s    0:05:57 (xfr#570, to-chk=653/1253) 43,683,608,836  52%  116.30MB/s    0:05:58 (xfr#571, to-chk=652/1253) 43,699,370,244  52%  113.58MB/s    0:05:45   43,761,277,172  52%  116.24MB/s    0:05:59 (xfr#572, to-chk=651/1253) 43,794,045,172  52%  100.54MB/s    0:06:29   43,838,945,508  52%  116.08MB/s    0:06:00 (xfr#573, to-chk=650/1253) 43,854,706,916  52%   95.28MB/s    0:06:50   43,916,613,844  52%  116.08MB/s    0:06:00 (xfr#574, to-chk=649/1253) 43,994,142,932  52%   94.07MB/s    0:06:54   43,994,282,180  52%  116.10MB/s    0:06:01 (xfr#575, to-chk=648/1253) 44,058,278,084  52%   84.79MB/s    0:07:38   44,071,950,516  52%  115.96MB/s    0:06:02 (xfr#576, to-chk=647/1253) 44,149,618,852  52%  115.87MB/s    0:06:03 (xfr#577, to-chk=646/1253) 44,149,651,620  52%   83.99MB/s    0:07:41   44,212,566,180  52%   78.11MB/s    0:08:15   44,227,287,188  52%  115.62MB/s    0:06:04 (xfr#578, to-chk=645/1253) 44,304,955,524  52%  115.60MB/s    0:06:05 (xfr#579, to-chk=644/1253) 44,377,769,589  52%  115.75MB/s    0:06:05 (xfr#580, to-chk=643/1253) 44,380,685,941  52%   83.52MB/s    0:07:41   44,455,437,925  52%  115.70MB/s    0:06:06 (xfr#581, to-chk=642/1253) 44,478,015,077  53%   88.60MB/s    0:07:14   44,533,106,261  53%  115.65MB/s    0:06:07 (xfr#582, to-chk=641/1253) 44,610,774,597  53%  115.69MB/s    0:06:07 (xfr#583, to-chk=640/1253) 44,618,933,829  53%   98.47MB/s    0:06:29   44,688,442,933  53%  115.61MB/s    0:06:08 (xfr#584, to-chk=639/1253) 44,705,941,045  53%  111.68MB/s    0:05:42   44,757,354,037  53%   86.21MB/s    0:07:23   44,766,111,269  53%  115.38MB/s    0:06:10 (xfr#585, to-chk=638/1253) 44,842,165,797  53%   86.30MB/s    0:07:21   44,843,779,605  53%  115.28MB/s    0:06:10 (xfr#586, to-chk=637/1253) 44,921,447,941  53%  115.23MB/s    0:06:11 (xfr#587, to-chk=636/1253) 44,931,704,325  53%   74.51MB/s    0:08:30   44,999,116,277  53%  115.15MB/s    0:06:12 (xfr#588, to-chk=635/1253) 45,039,257,077  53%   78.80MB/s    0:08:01   45,076,784,613  53%  115.08MB/s    0:06:13 (xfr#589, to-chk=634/1253) 45,144,712,677  53%   91.58MB/s    0:06:53   45,154,452,949  53%  115.08MB/s    0:06:14 (xfr#590, to-chk=633/1253) 45,191,710,165  53%   81.50MB/s    0:07:43   45,232,121,285  53%  114.96MB/s    0:06:15 (xfr#591, to-chk=632/1253) 45,309,789,621  54%  114.98MB/s    0:06:15 (xfr#592, to-chk=631/1253) 45,321,618,869  54%   90.15MB/s    0:06:57   45,387,457,957  54%  114.97MB/s    0:06:16 (xfr#593, to-chk=630/1253) 45,465,126,293  54%  114.99MB/s    0:06:17 (xfr#594, to-chk=629/1253) 45,465,421,205  54%   99.18MB/s    0:06:18   45,542,794,629  54%  114.90MB/s    0:06:18 (xfr#595, to-chk=628/1253) 45,546,497,413  54%   93.39MB/s    0:06:40   45,620,462,965  54%  114.83MB/s    0:06:18 (xfr#596, to-chk=627/1253) 45,693,277,030  54%  114.97MB/s    0:06:19 (xfr#597, to-chk=626/1253) 45,693,834,086  54%  118.12MB/s    0:05:15   45,770,945,366  54%  115.00MB/s    0:06:19 (xfr#598, to-chk=625/1253) 45,848,613,702  54%  115.08MB/s    0:06:19 (xfr#599, to-chk=624/1253) 45,857,821,510  54%  123.82MB/s    0:04:59   45,926,282,038  54%  115.07MB/s    0:06:20 (xfr#600, to-chk=623/1253) 46,003,950,374  54%  115.14MB/s    0:06:21 (xfr#601, to-chk=622/1253) 46,023,709,478  54%  129.04MB/s    0:04:46   46,081,618,710  54%  115.19MB/s    0:06:21 (xfr#602, to-chk=621/1253) 46,139,585,302  55%  135.87MB/s    0:04:31   46,159,287,046  55%  115.11MB/s    0:06:22 (xfr#603, to-chk=620/1253) 46,236,955,382  55%  115.26MB/s    0:06:22 (xfr#604, to-chk=619/1253) 46,276,834,038  55%  131.32MB/s    0:04:39   46,314,623,718  55%  115.17MB/s    0:06:23 (xfr#605, to-chk=618/1253) 46,361,055,974  55%  112.82MB/s    0:05:24   46,392,292,054  55%  115.01MB/s    0:06:24 (xfr#606, to-chk=617/1253) 46,469,960,390  55%  114.99MB/s    0:06:25 (xfr#607, to-chk=616/1253) 46,471,303,878  55%  100.06MB/s    0:06:05   46,547,628,726  55%  114.86MB/s    0:06:26 (xfr#608, to-chk=615/1253) 46,547,661,494  55%   92.07MB/s    0:06:36   46,623,421,110  55%   79.67MB/s    0:07:36   46,625,297,062  55%  114.75MB/s    0:06:27 (xfr#609, to-chk=614/1253) 46,690,210,470  55%   78.28MB/s    0:07:43   46,702,965,398  55%  114.63MB/s    0:06:28 (xfr#610, to-chk=613/1253) 46,780,633,734  55%  114.63MB/s    0:06:29 (xfr#611, to-chk=612/1253) 46,853,447,799  55%  114.76MB/s    0:06:29 (xfr#612, to-chk=611/1253) 46,865,670,263  55%   94.02MB/s    0:06:24   46,931,116,135  55%  114.72MB/s    0:06:30 (xfr#613, to-chk=610/1253) 46,961,885,287  55%   98.83MB/s    0:06:04   47,008,784,471  56%  114.71MB/s    0:06:30 (xfr#614, to-chk=609/1253) 47,084,052,567  56%  109.85MB/s    0:05:27   47,086,452,807  56%  114.70MB/s    0:06:31 (xfr#615, to-chk=608/1253) 47,157,428,295  56%  111.42MB/s    0:05:21   47,164,121,143  56%  114.60MB/s    0:06:32 (xfr#616, to-chk=607/1253) 47,241,789,479  56%  114.74MB/s    0:06:32 (xfr#617, to-chk=606/1253) 47,289,008,167  56%  100.93MB/s    0:05:54   47,319,457,815  56%  114.64MB/s    0:06:33 (xfr#618, to-chk=605/1253) 47,395,250,199  56%  103.32MB/s    0:05:44   47,397,126,151  56%  114.58MB/s    0:06:34 (xfr#619, to-chk=604/1253) 47,474,794,487  56%  114.58MB/s    0:06:35 (xfr#620, to-chk=603/1253) 47,488,098,295  56%   96.36MB/s    0:06:08   47,552,462,823  56%  114.48MB/s    0:06:36 (xfr#621, to-chk=602/1253) 47,579,234,279  56%   99.87MB/s    0:05:54   47,630,131,159  56%  114.46MB/s    0:06:36 (xfr#622, to-chk=601/1253) 47,707,234,263  56%   96.50MB/s    0:06:06   47,707,799,495  56%  114.42MB/s    0:06:37 (xfr#623, to-chk=600/1253) 47,785,467,831  56%  114.40MB/s    0:06:38 (xfr#624, to-chk=599/1253) 47,794,413,495  56%   90.85MB/s    0:06:27   47,860,211,639  57%   84.64MB/s    0:06:55   47,863,136,167  57%  114.20MB/s    0:06:39 (xfr#625, to-chk=598/1253) 47,940,804,503  57%  114.13MB/s    0:06:40 (xfr#626, to-chk=597/1253) 47,943,458,711  57%   83.28MB/s    0:07:01   48,011,616,151  57%   71.08MB/s    0:08:12   48,018,472,839  57%  113.99MB/s    0:06:41 (xfr#627, to-chk=596/1253) 48,046,817,159  57%   59.74MB/s    0:09:45   48,096,141,175  57%  113.84MB/s    0:06:42 (xfr#628, to-chk=595/1253) 48,168,955,240  57%  113.97MB/s    0:06:43 (xfr#629, to-chk=594/1253) 48,194,415,976  57%   78.87MB/s    0:07:21   48,246,623,576  57%  113.82MB/s    0:06:44 (xfr#630, to-chk=593/1253) 48,283,094,360  57%   80.27MB/s    0:07:13   48,324,291,912  57%  113.82MB/s    0:06:44 (xfr#631, to-chk=592/1253) 48,391,433,544  57%   89.84MB/s    0:06:25   48,401,960,248  57%  113.76MB/s    0:06:45 (xfr#632, to-chk=591/1253) 48,479,628,584  57%  113.78MB/s    0:06:46 (xfr#633, to-chk=590/1253) 48,523,439,400  57%  112.15MB/s    0:05:07   48,557,296,920  57%  113.74MB/s    0:06:47 (xfr#634, to-chk=589/1253) 48,634,965,256  57%  113.76MB/s    0:06:47 (xfr#635, to-chk=588/1253) 48,636,046,600  57%  104.30MB/s    0:05:30   48,712,633,592  58%  113.80MB/s    0:06:48 (xfr#636, to-chk=587/1253) 48,750,152,952  58%  108.16MB/s    0:05:17   48,790,301,928  58%  113.77MB/s    0:06:48 (xfr#637, to-chk=586/1253) 48,832,113,896  58%  102.45MB/s    0:05:34   48,867,970,264  58%  113.60MB/s    0:06:50 (xfr#638, to-chk=585/1253) 48,943,762,648  58%   98.22MB/s    0:05:47   48,945,638,600  58%  113.62MB/s    0:06:50 (xfr#639, to-chk=584/1253) 49,023,306,936  58%  113.63MB/s    0:06:51 (xfr#640, to-chk=583/1253) 49,038,281,912  58%   93.72MB/s    0:06:03   49,100,975,272  58%  113.49MB/s    0:06:52 (xfr#641, to-chk=582/1253) 49,115,950,248  58%   86.63MB/s    0:06:31   49,178,643,608  58%  113.44MB/s    0:06:53 (xfr#642, to-chk=581/1253) 49,206,922,392  58%   88.76MB/s    0:06:21   49,256,311,944  58%  113.30MB/s    0:06:54 (xfr#643, to-chk=580/1253) 49,260,014,728  58%   74.82MB/s    0:07:31   49,329,126,009  58%  113.25MB/s    0:06:55 (xfr#644, to-chk=579/1253) 49,378,179,705  58%   75.91MB/s    0:07:23   49,406,794,345  58%  113.12MB/s    0:06:56 (xfr#645, to-chk=578/1253) 49,416,788,585  58%   66.60MB/s    0:08:25   49,484,462,681  58%  112.91MB/s    0:06:57 (xfr#646, to-chk=577/1253) 49,499,699,801  59%   62.80MB/s    0:08:54   49,562,131,017  59%  112.85MB/s    0:06:58 (xfr#647, to-chk=576/1253) 49,616,427,593  59%   73.40MB/s    0:07:35   49,639,799,353  59%  112.83MB/s    0:06:59 (xfr#648, to-chk=575/1253) 49,717,467,689  59%  112.78MB/s    0:07:00 (xfr#649, to-chk=574/1253) 49,723,005,481  59%   75.03MB/s    0:07:24   49,783,036,457  59%   80.68MB/s    0:06:52   49,795,136,025  59%  112.65MB/s    0:07:01 (xfr#650, to-chk=573/1253) 49,862,539,801  59%   82.31MB/s    0:06:43   49,872,804,361  59%  112.56MB/s    0:07:02 (xfr#651, to-chk=572/1253) 49,950,431,753  59%   79.18MB/s    0:06:58   49,950,472,697  59%  112.48MB/s    0:07:03 (xfr#652, to-chk=571/1253) 50,028,141,033  59%  112.46MB/s    0:07:04 (xfr#653, to-chk=570/1253) 50,044,426,729  59%   74.08MB/s    0:07:26   50,105,809,369  59%  112.36MB/s    0:07:05 (xfr#654, to-chk=569/1253) 50,122,357,209  59%   73.90MB/s    0:07:26   50,183,477,705  59%  112.23MB/s    0:07:06 (xfr#655, to-chk=568/1253) 50,193,471,945  59%   71.19MB/s    0:07:42   50,261,146,041  59%  112.12MB/s    0:07:07 (xfr#656, to-chk=567/1253) 50,291,325,369  59%   71.34MB/s    0:07:39   50,338,814,377  60%  112.06MB/s    0:07:08 (xfr#657, to-chk=566/1253) 50,399,992,233  60%   76.41MB/s    0:07:07   50,416,482,713  60%  111.92MB/s    0:07:09 (xfr#658, to-chk=565/1253) 50,436,962,713  60%   71.50MB/s    0:07:36   50,494,151,049  60%  111.86MB/s    0:07:10 (xfr#659, to-chk=564/1253) 50,515,941,769  60%   68.89MB/s    0:07:52   50,571,819,385  60%  111.60MB/s    0:07:12 (xfr#660, to-chk=563/1253) 50,644,633,450  60%  111.72MB/s    0:07:12 (xfr#661, to-chk=562/1253) 50,646,501,226  60%   76.98MB/s    0:07:01   50,722,301,786  60%  111.64MB/s    0:07:13 (xfr#662, to-chk=561/1253) 50,734,131,034  60%   72.21MB/s    0:07:28   50,775,549,786  60%   73.17MB/s    0:07:21   50,799,970,122  60%  111.47MB/s    0:07:14 (xfr#663, to-chk=560/1253) 50,877,638,458  60%  111.43MB/s    0:07:15 (xfr#664, to-chk=559/1253) 50,878,195,514  60%   84.38MB/s    0:06:21   50,955,306,794  60%  111.45MB/s    0:07:16 (xfr#665, to-chk=558/1253) 50,995,971,882  60%   82.72MB/s    0:06:28   51,032,975,130  60%  111.36MB/s    0:07:17 (xfr#666, to-chk=557/1253) 51,053,979,418  60%   73.61MB/s    0:07:15   51,110,643,466  60%  111.24MB/s    0:07:18 (xfr#667, to-chk=556/1253) 51,148,424,970  60%   81.43MB/s    0:06:32   51,188,311,802  61%  111.20MB/s    0:07:19 (xfr#668, to-chk=555/1253) 51,265,980,138  61%  111.21MB/s    0:07:19 (xfr#669, to-chk=554/1253) 51,282,003,690  61%   88.47MB/s    0:05:59   51,343,648,474  61%  111.18MB/s    0:07:20 (xfr#670, to-chk=553/1253) 51,394,537,178  61%   84.15MB/s    0:06:17   51,421,316,810  61%  111.15MB/s    0:07:21 (xfr#671, to-chk=552/1253) 51,482,691,274  61%   93.15MB/s    0:05:39   51,498,985,146  61%  111.03MB/s    0:07:22 (xfr#672, to-chk=551/1253) 51,576,653,482  61%  111.05MB/s    0:07:22 (xfr#673, to-chk=550/1253) 51,579,045,546  61%   98.25MB/s    0:05:21   51,654,321,818  61%  110.99MB/s    0:07:23 (xfr#674, to-chk=549/1253) 51,665,462,938  61%   87.51MB/s    0:05:59   51,731,990,154  61%  111.01MB/s    0:07:24 (xfr#675, to-chk=548/1253) 51,804,804,219  61%  111.13MB/s    0:07:24 (xfr#676, to-chk=547/1253) 51,863,000,187  61%  111.44MB/s    0:04:40   51,882,472,555  61%  111.15MB/s    0:07:25 (xfr#677, to-chk=546/1253) 51,960,140,891  61%  111.19MB/s    0:07:25 (xfr#678, to-chk=545/1253) 52,013,421,659  62%  126.25MB/s    0:04:06   52,037,809,227  62%  111.23MB/s    0:07:26 (xfr#679, to-chk=544/1253) 52,115,477,563  62%  111.21MB/s    0:07:26 (xfr#680, to-chk=543/1253) 52,122,063,931  62%  129.43MB/s    0:03:59   52,193,145,899  62%  111.26MB/s    0:07:27 (xfr#681, to-chk=542/1253) 52,270,814,235  62%  111.30MB/s    0:07:27 (xfr#682, to-chk=541/1253) 52,281,070,619  62%  146.74MB/s    0:03:30   52,348,482,571  62%  111.35MB/s    0:07:28 (xfr#683, to-chk=540/1253) 52,426,150,907  62%  111.41MB/s    0:07:28 (xfr#684, to-chk=539/1253) 52,426,154,734  62%  111.41MB/s    0:07:28 (xfr#685, to-chk=538/1253) 52,426,154,746  62%  111.41MB/s    0:07:28 (xfr#686, to-chk=536/1253) 52,426,154,757  62%  111.41MB/s    0:07:28 (xfr#687, to-chk=535/1253) 52,426,154,775  62%  111.41MB/s    0:07:28 (xfr#688, to-chk=534/1253) 52,426,157,465  62%  111.41MB/s    0:07:28 (xfr#689, to-chk=533/1253) 52,498,971,530  62%  111.53MB/s    0:07:28 (xfr#690, to-chk=532/1253) 52,502,936,458  62%  152.50MB/s    0:03:20   52,571,785,595  62%  111.54MB/s    0:07:29 (xfr#691, to-chk=531/1253) 52,644,599,660  62%  111.66MB/s    0:07:29 (xfr#692, to-chk=530/1253) 52,717,413,725  62%  111.78MB/s    0:07:29 (xfr#693, to-chk=529/1253) 52,757,292,381  62%  177.26MB/s    0:02:51   52,790,227,790  62%  111.83MB/s    0:07:30 (xfr#694, to-chk=528/1253) 52,863,041,855  63%  111.86MB/s    0:07:30 (xfr#695, to-chk=527/1253) 52,935,855,920  63%  111.98MB/s    0:07:30 (xfr#696, to-chk=526/1253) 53,008,669,985  63%  112.10MB/s    0:07:30 (xfr#697, to-chk=525/1253) 53,009,489,185  63%  211.58MB/s    0:02:22   53,083,970,849  63%  191.43MB/s    0:02:37   53,086,338,321  63%  111.99MB/s    0:07:32 (xfr#698, to-chk=524/1253) 53,164,006,657  63%  111.93MB/s    0:07:32 (xfr#699, to-chk=523/1253) 53,164,825,857  63%  157.26MB/s    0:03:10   53,241,674,993  63%  111.92MB/s    0:07:33 (xfr#700, to-chk=522/1253) 53,279,587,569  63%  124.09MB/s    0:04:00   53,319,343,329  63%  111.93MB/s    0:07:34 (xfr#701, to-chk=521/1253) 53,397,011,665  63%  112.06MB/s    0:07:34 (xfr#702, to-chk=520/1253) 53,468,085,457  63%  108.69MB/s    0:04:33   53,474,680,001  63%  112.06MB/s    0:07:35 (xfr#703, to-chk=519/1253) 53,552,348,337  63%  112.07MB/s    0:07:35 (xfr#704, to-chk=518/1253) 53,580,758,193  63%  117.74MB/s    0:04:11   53,630,016,673  63%  112.09MB/s    0:07:36 (xfr#705, to-chk=517/1253) 53,702,830,738  64%  112.21MB/s    0:07:36 (xfr#706, to-chk=516/1253) 53,780,499,074  64%  112.25MB/s    0:07:36 (xfr#707, to-chk=515/1253) 53,785,578,114  64%  147.67MB/s    0:03:19   53,858,167,410  64%  112.24MB/s    0:07:37 (xfr#708, to-chk=514/1253) 53,924,653,682  64%  153.45MB/s    0:03:10   53,935,835,746  64%  112.18MB/s    0:07:38 (xfr#709, to-chk=513/1253) 53,991,705,186  64%  124.03MB/s    0:03:55   54,013,504,082  64%  112.18MB/s    0:07:39 (xfr#710, to-chk=512/1253) 54,091,172,418  64%  112.21MB/s    0:07:39 (xfr#711, to-chk=511/1253) 54,115,846,722  64%  126.63MB/s    0:03:49   54,168,840,754  64%  112.21MB/s    0:07:40 (xfr#712, to-chk=510/1253) 54,246,509,090  64%  112.22MB/s    0:07:40 (xfr#713, to-chk=509/1253) 54,250,342,946  64%  109.98MB/s    0:04:23   54,324,177,426  64%  112.25MB/s    0:07:41 (xfr#714, to-chk=508/1253) 54,401,845,762  64%  112.28MB/s    0:07:42 (xfr#715, to-chk=507/1253) 54,401,976,834  64%  112.96MB/s    0:04:14   54,479,514,098  64%  112.31MB/s    0:07:42 (xfr#716, to-chk=506/1253) 54,547,016,178  65%  132.40MB/s    0:03:36   54,557,182,434  65%  112.34MB/s    0:07:43 (xfr#717, to-chk=505/1253) 54,634,850,770  65%  112.31MB/s    0:07:43 (xfr#718, to-chk=504/1253) 54,641,699,282  65%  125.44MB/s    0:03:47   54,712,519,106  65%  112.35MB/s    0:07:44 (xfr#719, to-chk=503/1253) 54,777,563,586  65%  119.12MB/s    0:03:58   54,790,187,442  65%  112.28MB/s    0:07:45 (xfr#720, to-chk=502/1253) 54,863,001,507  65%  112.40MB/s    0:07:45 (xfr#721, to-chk=501/1253) 54,940,669,843  65%  112.44MB/s    0:07:45 (xfr#722, to-chk=500/1253) 54,984,316,819  65%  131.60MB/s    0:03:34   55,018,338,179  65%  112.49MB/s    0:07:46 (xfr#723, to-chk=499/1253) 55,096,006,515  65%  112.53MB/s    0:07:46 (xfr#724, to-chk=498/1253) 55,162,099,571  65%  139.00MB/s    0:03:21   55,173,674,851  65%  112.58MB/s    0:07:47 (xfr#725, to-chk=497/1253) 55,251,343,187  65%  112.62MB/s    0:07:47 (xfr#726, to-chk=496/1253) 55,307,409,235  65%  150.44MB/s    0:03:05   55,329,011,523  65%  112.65MB/s    0:07:48 (xfr#727, to-chk=495/1253) 55,406,679,859  66%  112.71MB/s    0:07:48 (xfr#728, to-chk=494/1253) 55,484,348,195  66%  112.76MB/s    0:07:49 (xfr#729, to-chk=493/1253) 55,487,002,403  66%  169.27MB/s    0:02:43   55,562,016,531  66%  112.82MB/s    0:07:49 (xfr#730, to-chk=492/1253) 55,634,401,043  66%  155.11MB/s    0:02:57   55,639,684,867  66%  112.82MB/s    0:07:50 (xfr#731, to-chk=491/1253) 55,717,353,203  66%  112.88MB/s    0:07:50 (xfr#732, to-chk=490/1253) 55,795,021,539  66%  112.94MB/s    0:07:51 (xfr#733, to-chk=489/1253) 55,811,307,235  66%  154.90MB/s    0:02:56   55,872,689,875  66%  113.00MB/s    0:07:51 (xfr#734, to-chk=488/1253) 55,950,358,211  66%  113.07MB/s    0:07:51 (xfr#735, to-chk=487/1253) 56,004,392,643  66%  160.98MB/s    0:02:49   56,028,026,547  66%  113.07MB/s    0:07:52 (xfr#736, to-chk=486/1253) 56,105,694,883  66%  113.09MB/s    0:07:53 (xfr#737, to-chk=485/1253) 56,178,508,948  66%  113.21MB/s    0:07:53 (xfr#738, to-chk=484/1253) 56,184,833,172  66%  161.10MB/s    0:02:47   56,256,177,284  67%  113.22MB/s    0:07:53 (xfr#739, to-chk=483/1253) 56,281,638,020  67%  149.38MB/s    0:03:00   56,333,845,620  67%  113.15MB/s    0:07:54 (xfr#740, to-chk=482/1253) 56,411,513,956  67%  113.16MB/s    0:07:55 (xfr#741, to-chk=481/1253) 56,411,546,724  67%  138.20MB/s    0:03:14   56,489,182,292  67%  113.20MB/s    0:07:55 (xfr#742, to-chk=480/1253) 56,566,850,628  67%  113.24MB/s    0:07:56 (xfr#743, to-chk=479/1253) 56,570,553,412  67%  134.65MB/s    0:03:18   56,644,518,964  67%  113.29MB/s    0:07:56 (xfr#744, to-chk=478/1253) 56,722,187,300  67%  113.33MB/s    0:07:57 (xfr#745, to-chk=477/1253) 56,731,919,396  67%  129.92MB/s    0:03:24   56,799,855,636  67%  113.38MB/s    0:07:57 (xfr#746, to-chk=476/1253) 56,877,523,972  67%  113.39MB/s    0:07:58 (xfr#747, to-chk=475/1253) 56,882,275,332  67%  142.53MB/s    0:03:04   56,955,192,308  67%  113.44MB/s    0:07:58 (xfr#748, to-chk=474/1253) 57,032,860,644  67%  113.50MB/s    0:07:59 (xfr#749, to-chk=473/1253) 57,054,389,220  68%  152.96MB/s    0:02:51   57,110,528,980  68%  113.53MB/s    0:07:59 (xfr#750, to-chk=472/1253) 57,188,197,316  68%  113.55MB/s    0:08:00 (xfr#751, to-chk=471/1253) 57,198,977,988  68%  149.53MB/s    0:02:54   57,265,865,652  68%  113.52MB/s    0:08:01 (xfr#752, to-chk=470/1253) 57,321,014,196  68%  140.45MB/s    0:03:04   57,338,679,717  68%  113.56MB/s    0:08:01 (xfr#753, to-chk=469/1253) 57,416,348,053  68%  113.55MB/s    0:08:02 (xfr#754, to-chk=468/1253) 57,439,973,781  68%  132.97MB/s    0:03:14   57,494,016,389  68%  113.59MB/s    0:08:02 (xfr#755, to-chk=467/1253) 57,571,684,725  68%  113.65MB/s    0:08:03 (xfr#756, to-chk=466/1253) 57,631,748,469  68%  137.65MB/s    0:03:06   57,649,353,061  68%  113.70MB/s    0:08:03 (xfr#757, to-chk=465/1253) 57,727,021,397  68%  113.76MB/s    0:08:03 (xfr#758, to-chk=464/1253) 57,804,689,733  68%  113.80MB/s    0:08:04 (xfr#759, to-chk=463/1253) 57,808,916,805  68%  144.77MB/s    0:02:55   57,882,358,069  69%  113.78MB/s    0:08:05 (xfr#760, to-chk=462/1253) 57,925,120,309  69%  142.78MB/s    0:02:57   57,960,026,405  69%  113.81MB/s    0:08:05 (xfr#761, to-chk=461/1253) 58,037,694,741  69%  113.86MB/s    0:08:06 (xfr#762, to-chk=460/1253) 58,091,204,885  69%  154.07MB/s    0:02:43   58,115,363,077  69%  113.89MB/s    0:08:06 (xfr#763, to-chk=459/1253) 58,193,031,413  69%  113.90MB/s    0:08:07 (xfr#764, to-chk=458/1253) 58,227,405,045  69%  140.92MB/s    0:02:57   58,270,699,749  69%  113.89MB/s    0:08:07 (xfr#765, to-chk=457/1253) 58,342,822,117  69%  126.82MB/s    0:03:16   58,348,368,085  69%  113.91MB/s    0:08:08 (xfr#766, to-chk=456/1253) 58,426,036,421  69%  113.96MB/s    0:08:08 (xfr#767, to-chk=455/1253) 58,491,867,333  69%  135.16MB/s    0:03:03   58,503,704,757  69%  113.97MB/s    0:08:09 (xfr#768, to-chk=454/1253) 58,581,373,093  69%  114.03MB/s    0:08:09 (xfr#769, to-chk=453/1253) 58,654,187,158  69%  114.14MB/s    0:08:10 (xfr#770, to-chk=452/1253) 58,679,647,894  69%  140.30MB/s    0:02:55   58,731,855,494  70%  114.14MB/s    0:08:10 (xfr#771, to-chk=451/1253) 58,809,523,830  70%  114.17MB/s    0:08:11 (xfr#772, to-chk=450/1253) 58,822,139,510  70%  140.95MB/s    0:02:53   58,887,192,166  70%  114.16MB/s    0:08:11 (xfr#773, to-chk=449/1253) 58,964,860,502  70%  114.27MB/s    0:08:12 (xfr#774, to-chk=448/1253) 59,024,924,246  70%  161.74MB/s    0:02:30   59,042,528,838  70%  114.31MB/s    0:08:12 (xfr#775, to-chk=447/1253) 59,120,197,174  70%  114.37MB/s    0:08:12 (xfr#776, to-chk=446/1253) 59,154,570,806  70%  147.73MB/s    0:02:43   59,197,865,510  70%  114.23MB/s    0:08:14 (xfr#777, to-chk=445/1253) 59,267,497,510  70%  131.08MB/s    0:03:03   59,275,533,846  70%  114.25MB/s    0:08:14 (xfr#778, to-chk=444/1253) 59,353,202,182  70%  114.30MB/s    0:08:15 (xfr#779, to-chk=443/1253) 59,408,285,190  70%  131.43MB/s    0:03:01   59,430,870,518  70%  114.28MB/s    0:08:15 (xfr#780, to-chk=442/1253) 59,508,538,854  70%  114.29MB/s    0:08:16 (xfr#781, to-chk=441/1253) 59,524,300,262  70%  111.53MB/s    0:03:33   59,586,207,190  71%  114.32MB/s    0:08:17 (xfr#782, to-chk=440/1253) 59,663,875,526  71%  114.33MB/s    0:08:17 (xfr#783, to-chk=439/1253) 59,673,083,334  71%  122.98MB/s    0:03:12   59,741,543,862  71%  114.38MB/s    0:08:18 (xfr#784, to-chk=438/1253) 59,814,357,927  71%  114.48MB/s    0:08:18 (xfr#785, to-chk=437/1253) 59,846,110,119  71%  136.28MB/s    0:02:52   59,892,026,263  71%  114.44MB/s    0:08:19 (xfr#786, to-chk=436/1253) 59,969,694,599  71%  114.46MB/s    0:08:19 (xfr#787, to-chk=435/1253) 59,972,873,095  71%  132.75MB/s    0:02:55   60,047,362,935  71%  114.46MB/s    0:08:20 (xfr#788, to-chk=434/1253) 60,125,031,271  71%  114.50MB/s    0:08:20 (xfr#789, to-chk=433/1253) 60,125,588,327  71%  141.66MB/s    0:02:43   60,202,699,607  71%  114.47MB/s    0:08:21 (xfr#790, to-chk=432/1253) 60,226,063,191  71%  130.54MB/s    0:02:56   60,280,367,943  71%  114.49MB/s    0:08:22 (xfr#791, to-chk=431/1253) 60,358,036,279  71%  114.51MB/s    0:08:22 (xfr#792, to-chk=430/1253) 60,368,816,951  71%  123.79MB/s    0:03:05   60,435,704,615  72%  114.53MB/s    0:08:23 (xfr#793, to-chk=429/1253) 60,465,359,655  72%  116.83MB/s    0:03:15   60,513,372,951  72%  114.40MB/s    0:08:24 (xfr#794, to-chk=428/1253) 60,558,756,631  72%  102.89MB/s    0:03:41   60,591,041,287  72%  114.42MB/s    0:08:25 (xfr#795, to-chk=427/1253) 60,668,709,623  72%  114.40MB/s    0:08:25 (xfr#796, to-chk=426/1253) 60,671,101,687  72%  105.29MB/s    0:03:35   60,746,377,959  72%  114.34MB/s    0:08:26 (xfr#797, to-chk=425/1253) 60,751,129,319  72%   90.76MB/s    0:04:08   60,824,046,295  72%  114.27MB/s    0:08:27 (xfr#798, to-chk=424/1253) 60,838,431,447  72%   88.57MB/s    0:04:14   60,901,714,631  72%  114.27MB/s    0:08:28 (xfr#799, to-chk=423/1253) 60,940,806,855  72%   85.33MB/s    0:04:22   60,979,382,967  72%  114.08MB/s    0:08:29 (xfr#800, to-chk=422/1253) 61,005,367,991  72%   72.32MB/s    0:05:08   61,057,051,303  72%  113.92MB/s    0:08:31 (xfr#801, to-chk=421/1253) 61,061,802,663  72%   66.94MB/s    0:05:32   61,129,865,368  72%  113.84MB/s    0:08:32 (xfr#802, to-chk=420/1253) 61,140,383,896  72%   65.06MB/s    0:05:41   61,207,533,704  72%  113.81MB/s    0:08:32 (xfr#803, to-chk=419/1253) 61,224,605,832  72%   64.76MB/s    0:05:41   61,285,202,040  73%  113.72MB/s    0:08:33 (xfr#804, to-chk=418/1253) 61,297,555,576  73%   68.99MB/s    0:05:19   61,362,870,376  73%  113.69MB/s    0:08:34 (xfr#805, to-chk=417/1253) 61,438,924,904  73%   89.42MB/s    0:04:05   61,440,538,712  73%  113.71MB/s    0:08:35 (xfr#806, to-chk=416/1253) 61,484,611,672  73%   79.87MB/s    0:04:33   61,518,207,048  73%  113.55MB/s    0:08:36 (xfr#807, to-chk=415/1253) 61,569,095,752  73%   76.07MB/s    0:04:46   61,595,875,384  73%  113.46MB/s    0:08:37 (xfr#808, to-chk=414/1253) 61,626,579,000  73%   69.02MB/s    0:05:14   61,673,543,720  73%  113.24MB/s    0:08:39 (xfr#809, to-chk=413/1253) 61,691,402,280  73%   52.93MB/s    0:06:49   61,751,212,056  73%  113.21MB/s    0:08:40 (xfr#810, to-chk=412/1253) 61,828,880,392  73%  113.24MB/s    0:08:40 (xfr#811, to-chk=411/1253) 61,839,661,064  73%   75.77MB/s    0:04:44   61,906,548,728  73%  113.27MB/s    0:08:41 (xfr#812, to-chk=410/1253) 61,984,217,064  73%  113.31MB/s    0:08:41 (xfr#813, to-chk=409/1253) 62,002,862,056  73%   97.24MB/s    0:03:39   62,061,885,400  73%  113.35MB/s    0:08:42 (xfr#814, to-chk=408/1253) 62,139,553,736  74%  113.40MB/s    0:08:42 (xfr#815, to-chk=407/1253) 62,178,908,104  74%  131.32MB/s    0:02:41   62,217,222,072  74%  113.44MB/s    0:08:43 (xfr#816, to-chk=406/1253) 62,290,036,137  74%  113.54MB/s    0:08:43 (xfr#817, to-chk=405/1253) 62,344,955,305  74%  155.55MB/s    0:02:15   62,367,704,473  74%  113.46MB/s    0:08:44 (xfr#818, to-chk=404/1253) 62,445,372,809  74%  113.48MB/s    0:08:44 (xfr#819, to-chk=403/1253) 62,447,764,873  74%  144.69MB/s    0:02:24   62,523,041,145  74%  113.50MB/s    0:08:45 (xfr#820, to-chk=402/1253) 62,600,709,481  74%  113.55MB/s    0:08:45 (xfr#821, to-chk=401/1253) 62,607,033,705  74%  143.51MB/s    0:02:24   62,678,377,817  74%  113.49MB/s    0:08:46 (xfr#822, to-chk=400/1253) 62,689,944,921  74%  121.26MB/s    0:02:50   62,756,046,153  74%  113.46MB/s    0:08:47 (xfr#823, to-chk=399/1253) 62,778,885,449  74%  100.69MB/s    0:03:24   62,833,714,489  74%  113.43MB/s    0:08:48 (xfr#824, to-chk=398/1253) 62,911,382,825  74%  113.43MB/s    0:08:48 (xfr#825, to-chk=397/1253) 62,911,386,652  74%  113.43MB/s    0:08:48 (xfr#826, to-chk=396/1253) 62,911,386,664  74%  113.43MB/s    0:08:48 (xfr#827, to-chk=394/1253) 62,911,386,675  74%  113.43MB/s    0:08:48 (xfr#828, to-chk=393/1253) 62,911,386,693  74%  113.43MB/s    0:08:48 (xfr#829, to-chk=392/1253) 62,911,387,688  74%  113.43MB/s    0:08:48 (xfr#830, to-chk=391/1253) 62,911,518,760  75%  107.84MB/s    0:03:09   62,984,201,753  75%  113.42MB/s    0:08:49 (xfr#831, to-chk=390/1253) 63,002,060,313  75%   90.28MB/s    0:03:45   63,057,015,818  75%  113.40MB/s    0:08:50 (xfr#832, to-chk=389/1253) 63,129,829,883  75%  113.45MB/s    0:08:50 (xfr#833, to-chk=388/1253) 63,179,407,867  75%  111.27MB/s    0:03:01   63,202,643,948  75%  113.47MB/s    0:08:51 (xfr#834, to-chk=387/1253) 63,275,458,013  75%  113.49MB/s    0:08:51 (xfr#835, to-chk=386/1253) 63,319,268,829  75%  125.60MB/s    0:02:39   63,348,272,078  75%  113.52MB/s    0:08:52 (xfr#836, to-chk=385/1253) 63,421,086,143  75%  113.55MB/s    0:08:52 (xfr#837, to-chk=384/1253) 63,490,324,927  75%  134.57MB/s    0:02:27   63,493,900,208  75%  113.59MB/s    0:08:53 (xfr#838, to-chk=383/1253) 63,566,714,273  75%  113.51MB/s    0:08:54 (xfr#839, to-chk=382/1253) 63,566,747,041  75%  133.36MB/s    0:02:28   63,639,528,338  75%  113.50MB/s    0:08:54 (xfr#840, to-chk=381/1253) 63,685,993,362  75%  120.42MB/s    0:02:43   63,712,342,403  75%  113.47MB/s    0:08:55 (xfr#841, to-chk=380/1253) 63,778,763,139  76%  109.22MB/s    0:02:59   63,785,156,468  76%  113.45MB/s    0:08:56 (xfr#842, to-chk=379/1253) 63,857,970,533  76%  113.47MB/s    0:08:56 (xfr#843, to-chk=378/1253) 63,924,063,589  76%  103.08MB/s    0:03:09   63,930,784,598  76%  113.51MB/s    0:08:57 (xfr#844, to-chk=377/1253) 64,003,598,663  76%  113.53MB/s    0:08:57 (xfr#845, to-chk=376/1253) 64,076,412,728  76%  113.58MB/s    0:08:58 (xfr#846, to-chk=375/1253) 64,076,416,555  76%  113.58MB/s    0:08:58 (xfr#847, to-chk=374/1253) 64,076,416,567  76%  113.58MB/s    0:08:58 (xfr#848, to-chk=372/1253) 64,076,416,578  76%  113.58MB/s    0:08:58 (xfr#849, to-chk=371/1253) 64,076,416,596  76%  113.58MB/s    0:08:58 (xfr#850, to-chk=370/1253) 64,076,417,593  76%  113.57MB/s    0:08:58 (xfr#851, to-chk=369/1253) 64,077,236,793  76%  121.53MB/s    0:02:39   64,149,231,658  76%  113.54MB/s    0:08:58 (xfr#852, to-chk=368/1253) 64,167,876,650  76%  114.72MB/s    0:02:47   64,222,045,723  76%  113.50MB/s    0:08:59 (xfr#853, to-chk=367/1253) 64,281,847,323  76%  119.76MB/s    0:02:39   64,294,859,788  76%  113.51MB/s    0:09:00 (xfr#854, to-chk=366/1253) 64,367,673,853  76%  113.48MB/s    0:09:00 (xfr#855, to-chk=365/1253) 64,375,046,653  76%  107.33MB/s    0:02:57   64,440,487,918  76%  113.46MB/s    0:09:01 (xfr#856, to-chk=364/1253) 64,513,301,983  76%  113.50MB/s    0:09:02 (xfr#857, to-chk=363/1253) 64,514,121,183  76%  104.19MB/s    0:03:01   64,586,116,048  76%  113.51MB/s    0:09:02 (xfr#858, to-chk=362/1253) 64,622,783,440  77%  108.49MB/s    0:02:53   64,658,930,113  77%  113.50MB/s    0:09:03 (xfr#859, to-chk=361/1253) 64,731,744,178  77%  113.48MB/s    0:09:04 (xfr#860, to-chk=360/1253) 64,733,611,954  77%  107.68MB/s    0:02:53   64,804,558,243  77%  113.50MB/s    0:09:04 (xfr#861, to-chk=359/1253) 64,864,818,595  77%  116.77MB/s    0:02:39   64,877,372,308  77%  113.49MB/s    0:09:05 (xfr#862, to-chk=358/1253) 64,950,186,373  77%  113.49MB/s    0:09:05 (xfr#863, to-chk=357/1253) 65,004,777,861  77%  116.98MB/s    0:02:37   65,023,000,438  77%  113.53MB/s    0:09:06 (xfr#864, to-chk=356/1253) 65,095,814,503  77%  113.56MB/s    0:09:06 (xfr#865, to-chk=355/1253) 65,122,848,103  77%  117.38MB/s    0:02:36   65,168,628,568  77%  113.54MB/s    0:09:07 (xfr#866, to-chk=354/1253) 65,241,442,633  77%  113.60MB/s    0:09:07 (xfr#867, to-chk=353/1253) 65,241,446,460  77%  113.59MB/s    0:09:07 (xfr#868, to-chk=352/1253) 65,241,446,472  77%  113.59MB/s    0:09:07 (xfr#869, to-chk=350/1253) 65,241,446,483  77%  113.59MB/s    0:09:07 (xfr#870, to-chk=349/1253) 65,241,446,501  77%  113.59MB/s    0:09:07 (xfr#871, to-chk=348/1253) 65,241,447,498  77%  113.59MB/s    0:09:07 (xfr#872, to-chk=347/1253) 65,278,442,570  77%  127.98MB/s    0:02:21   65,314,261,563  77%  113.60MB/s    0:09:08 (xfr#873, to-chk=346/1253) 65,387,075,628  77%  113.63MB/s    0:09:08 (xfr#874, to-chk=345/1253) 65,434,818,604  78%  133.63MB/s    0:02:14   65,459,889,693  78%  113.66MB/s    0:09:09 (xfr#875, to-chk=344/1253) 65,532,703,758  78%  113.69MB/s    0:09:09 (xfr#876, to-chk=343/1253) 65,604,039,694  78%  140.49MB/s    0:02:07   65,605,517,823  78%  113.72MB/s    0:09:10 (xfr#877, to-chk=342/1253) 65,678,331,888  78%  113.77MB/s    0:09:10 (xfr#878, to-chk=341/1253) 65,751,145,953  78%  113.81MB/s    0:09:10 (xfr#879, to-chk=340/1253) 65,777,130,977  78%  155.60MB/s    0:01:53   65,823,960,018  78%  113.85MB/s    0:09:11 (xfr#880, to-chk=339/1253) 65,896,774,083  78%  113.86MB/s    0:09:11 (xfr#881, to-chk=338/1253) 65,906,506,179  78%  149.15MB/s    0:01:57   65,969,588,148  78%  113.86MB/s    0:09:12 (xfr#882, to-chk=337/1253) 66,042,402,213  78%  113.90MB/s    0:09:12 (xfr#883, to-chk=336/1253) 66,077,562,277  78%  152.90MB/s    0:01:53   66,115,216,278  78%  113.95MB/s    0:09:13 (xfr#884, to-chk=335/1253) 66,188,030,343  78%  113.97MB/s    0:09:13 (xfr#885, to-chk=334/1253) 66,239,443,335  78%  151.15MB/s    0:01:53   66,260,844,408  78%  114.01MB/s    0:09:14 (xfr#886, to-chk=333/1253) 66,333,658,473  79%  114.05MB/s    0:09:14 (xfr#887, to-chk=332/1253) 66,379,828,585  79%  143.62MB/s    0:01:59   66,406,472,538  79%  114.04MB/s    0:09:15 (xfr#888, to-chk=331/1253) 66,406,476,365  79%  114.04MB/s    0:09:15 (xfr#889, to-chk=330/1253) 66,406,476,377  79%  114.04MB/s    0:09:15 (xfr#890, to-chk=328/1253) 66,406,476,388  79%  114.04MB/s    0:09:15 (xfr#891, to-chk=327/1253) 66,406,476,406  79%  114.04MB/s    0:09:15 (xfr#892, to-chk=326/1253) 66,406,477,403  79%  114.04MB/s    0:09:15 (xfr#893, to-chk=325/1253) 66,475,355,739  79%  135.69MB/s    0:02:05   66,479,291,468  79%  113.99MB/s    0:09:16 (xfr#894, to-chk=324/1253) 66,552,105,533  79%  114.02MB/s    0:09:16 (xfr#895, to-chk=323/1253) 66,624,919,598  79%  114.05MB/s    0:09:17 (xfr#896, to-chk=322/1253) 66,627,835,950  79%  130.87MB/s    0:02:08   66,697,733,663  79%  114.07MB/s    0:09:17 (xfr#897, to-chk=321/1253) 66,770,547,728  79%  114.09MB/s    0:09:18 (xfr#898, to-chk=320/1253) 66,773,201,936  79%  126.91MB/s    0:02:11   66,843,361,793  79%  114.13MB/s    0:09:18 (xfr#899, to-chk=319/1253) 66,916,175,858  79%  114.18MB/s    0:09:18 (xfr#900, to-chk=318/1253) 66,957,103,090  79%  137.12MB/s    0:02:00   66,988,989,923  79%  114.21MB/s    0:09:19 (xfr#901, to-chk=317/1253) 67,061,803,988  79%  114.23MB/s    0:09:19 (xfr#902, to-chk=316/1253) 67,083,070,420  79%  143.88MB/s    0:01:54   67,134,618,053  80%  114.24MB/s    0:09:20 (xfr#903, to-chk=315/1253) 67,207,432,118  80%  114.23MB/s    0:09:21 (xfr#904, to-chk=314/1253) 67,211,397,046  80%  138.65MB/s    0:01:57   67,280,246,183  80%  114.24MB/s    0:09:21 (xfr#905, to-chk=313/1253) 67,353,060,248  80%  114.26MB/s    0:09:22 (xfr#906, to-chk=312/1253) 67,355,190,168  80%  138.24MB/s    0:01:56   67,425,874,313  80%  114.30MB/s    0:09:22 (xfr#907, to-chk=311/1253) 67,498,688,378  80%  114.34MB/s    0:09:23 (xfr#908, to-chk=310/1253) 67,520,216,954  80%  133.82MB/s    0:01:59   67,571,502,443  80%  114.37MB/s    0:09:23 (xfr#909, to-chk=309/1253) 67,571,506,270  80%  114.37MB/s    0:09:23 (xfr#910, to-chk=308/1253) 67,571,506,282  80%  114.37MB/s    0:09:23 (xfr#911, to-chk=306/1253) 67,571,506,293  80%  114.37MB/s    0:09:23 (xfr#912, to-chk=305/1253) 67,571,506,311  80%  114.37MB/s    0:09:23 (xfr#913, to-chk=304/1253) 67,571,507,308  80%  114.37MB/s    0:09:23 (xfr#914, to-chk=303/1253) 67,644,321,373  80%  114.37MB/s    0:09:24 (xfr#915, to-chk=302/1253) 67,647,270,493  80%  134.52MB/s    0:01:57   67,717,135,438  80%  114.38MB/s    0:09:24 (xfr#916, to-chk=301/1253) 67,789,949,503  80%  114.43MB/s    0:09:24 (xfr#917, to-chk=300/1253) 67,802,335,807  80%  140.89MB/s    0:01:51   67,862,763,568  80%  114.45MB/s    0:09:25 (xfr#918, to-chk=299/1253) 67,935,577,633  80%  114.46MB/s    0:09:26 (xfr#919, to-chk=298/1253) 67,950,716,449  81%  141.98MB/s    0:01:49   68,008,391,698  81%  114.48MB/s    0:09:26 (xfr#920, to-chk=297/1253) 68,081,205,763  81%  114.51MB/s    0:09:27 (xfr#921, to-chk=296/1253) 68,103,684,611  81%  139.21MB/s    0:01:50   68,154,019,828  81%  114.55MB/s    0:09:27 (xfr#922, to-chk=295/1253) 68,213,559,284  81%  135.01MB/s    0:01:53   68,226,833,893  81%  114.50MB/s    0:09:28 (xfr#923, to-chk=294/1253) 68,299,647,958  81%  114.49MB/s    0:09:28 (xfr#924, to-chk=293/1253) 68,333,562,838  81%  126.65MB/s    0:01:59   68,372,462,023  81%  114.52MB/s    0:09:29 (xfr#925, to-chk=292/1253) 68,445,276,088  81%  114.55MB/s    0:09:29 (xfr#926, to-chk=291/1253) 68,481,746,872  81%  126.61MB/s    0:01:58   68,518,090,153  81%  114.56MB/s    0:09:30 (xfr#927, to-chk=290/1253) 68,590,904,218  81%  114.59MB/s    0:09:30 (xfr#928, to-chk=289/1253) 68,652,016,538  81%  130.73MB/s    0:01:53   68,663,718,283  81%  114.63MB/s    0:09:31 (xfr#929, to-chk=288/1253) 68,736,532,348  81%  114.65MB/s    0:09:31 (xfr#930, to-chk=287/1253) 68,736,536,175  81%  114.64MB/s    0:09:31 (xfr#931, to-chk=286/1253) 68,736,536,187  81%  114.64MB/s    0:09:31 (xfr#932, to-chk=284/1253) 68,736,536,198  81%  114.64MB/s    0:09:31 (xfr#933, to-chk=283/1253) 68,736,536,216  81%  114.64MB/s    0:09:31 (xfr#934, to-chk=282/1253) 68,736,537,213  81%  114.64MB/s    0:09:31 (xfr#935, to-chk=281/1253) 68,768,682,621  81%  132.42MB/s    0:01:51   68,809,351,278  82%  114.63MB/s    0:09:32 (xfr#936, to-chk=280/1253) 68,882,165,343  82%  114.64MB/s    0:09:33 (xfr#937, to-chk=279/1253) 68,902,186,591  82%  135.64MB/s    0:01:47   68,954,979,408  82%  114.68MB/s    0:09:33 (xfr#938, to-chk=278/1253) 69,027,793,473  82%  114.72MB/s    0:09:33 (xfr#939, to-chk=277/1253) 69,071,669,825  82%  140.72MB/s    0:01:42   69,100,607,538  82%  114.74MB/s    0:09:34 (xfr#940, to-chk=276/1253) 69,173,421,603  82%  114.76MB/s    0:09:34 (xfr#941, to-chk=275/1253) 69,211,203,107  82%  133.42MB/s    0:01:47   69,246,235,668  82%  114.78MB/s    0:09:35 (xfr#942, to-chk=274/1253) 69,319,049,733  82%  114.80MB/s    0:09:35 (xfr#943, to-chk=273/1253) 69,334,483,461  82%  135.00MB/s    0:01:45   69,391,863,798  82%  114.78MB/s    0:09:36 (xfr#944, to-chk=272/1253) 69,464,677,863  82%  114.78MB/s    0:09:37 (xfr#945, to-chk=271/1253) 69,467,069,927  82%  134.54MB/s    0:01:44   69,537,491,928  82%  114.73MB/s    0:09:38 (xfr#946, to-chk=270/1253) 69,548,796,888  82%  113.56MB/s    0:02:03   69,610,305,993  82%  114.75MB/s    0:09:38 (xfr#947, to-chk=269/1253) 69,658,835,401  83%  105.41MB/s    0:02:11   69,683,120,058  83%  114.70MB/s    0:09:39 (xfr#948, to-chk=268/1253) 69,713,561,530  83%   86.84MB/s    0:02:39   69,755,934,123  83%  114.53MB/s    0:09:40 (xfr#949, to-chk=267/1253) 69,787,162,027  83%   73.17MB/s    0:03:08   69,828,748,188  83%  114.48MB/s    0:09:41 (xfr#950, to-chk=266/1253) 69,901,562,253  83%  114.51MB/s    0:09:42 (xfr#951, to-chk=265/1253) 69,901,566,080  83%  114.50MB/s    0:09:42 (xfr#952, to-chk=264/1253) 69,901,566,092  83%  114.50MB/s    0:09:42 (xfr#953, to-chk=262/1253) 69,901,566,103  83%  114.50MB/s    0:09:42 (xfr#954, to-chk=261/1253) 69,901,566,121  83%  114.50MB/s    0:09:42 (xfr#955, to-chk=260/1253) 69,901,567,118  83%  114.50MB/s    0:09:42 (xfr#956, to-chk=259/1253) 69,907,104,910  83%   81.92MB/s    0:02:46   69,974,381,183  83%  114.49MB/s    0:09:42 (xfr#957, to-chk=258/1253) 70,028,743,295  83%   85.46MB/s    0:02:38   70,047,195,248  83%  114.49MB/s    0:09:43 (xfr#958, to-chk=257/1253) 70,120,009,313  83%  114.53MB/s    0:09:43 (xfr#959, to-chk=256/1253) 70,192,823,378  83%  114.57MB/s    0:09:44 (xfr#960, to-chk=255/1253) 70,207,503,442  83%  117.32MB/s    0:01:53   70,265,637,443  83%  114.62MB/s    0:09:44 (xfr#961, to-chk=254/1253) 70,338,451,508  83%  114.67MB/s    0:09:45 (xfr#962, to-chk=253/1253) 70,411,265,573  83%  114.72MB/s    0:09:45 (xfr#963, to-chk=252/1253) 70,415,492,645  83%  149.66MB/s    0:01:27   70,484,079,638  84%  114.77MB/s    0:09:45 (xfr#964, to-chk=251/1253) 70,556,893,703  84%  114.76MB/s    0:09:46 (xfr#965, to-chk=250/1253) 70,558,761,479  84%  154.98MB/s    0:01:23   70,629,707,768  84%  114.78MB/s    0:09:46 (xfr#966, to-chk=249/1253) 70,702,521,833  84%  114.80MB/s    0:09:47 (xfr#967, to-chk=248/1253) 70,704,913,897  84%  160.53MB/s    0:01:20   70,775,335,898  84%  114.84MB/s    0:09:47 (xfr#968, to-chk=247/1253) 70,848,149,963  84%  114.87MB/s    0:09:48 (xfr#969, to-chk=246/1253) 70,886,062,539  84%  161.10MB/s    0:01:18   70,920,964,028  84%  114.92MB/s    0:09:48 (xfr#970, to-chk=245/1253) 70,993,778,093  84%  114.97MB/s    0:09:48 (xfr#971, to-chk=244/1253) 71,066,592,158  84%  115.00MB/s    0:09:49 (xfr#972, to-chk=243/1253) 71,066,595,985  84%  115.00MB/s    0:09:49 (xfr#973, to-chk=242/1253) 71,066,595,997  84%  115.00MB/s    0:09:49 (xfr#974, to-chk=240/1253) 71,066,596,008  84%  115.00MB/s    0:09:49 (xfr#975, to-chk=239/1253) 71,066,596,026  84%  115.00MB/s    0:09:49 (xfr#976, to-chk=238/1253) 71,066,597,023  84%  114.99MB/s    0:09:49 (xfr#977, to-chk=237/1253) 71,066,629,791  84%  154.16MB/s    0:01:21   71,139,411,088  84%  114.99MB/s    0:09:50 (xfr#978, to-chk=236/1253) 71,154,386,064  84%  141.09MB/s    0:01:28   71,212,225,153  84%  114.97MB/s    0:09:50 (xfr#979, to-chk=235/1253) 71,285,039,218  84%  114.97MB/s    0:09:51 (xfr#980, to-chk=234/1253) 71,290,577,010  84%  137.98MB/s    0:01:29   71,357,853,283  85%  114.97MB/s    0:09:51 (xfr#981, to-chk=233/1253) 71,418,179,171  85%  123.32MB/s    0:01:38   71,430,667,348  85%  114.96MB/s    0:09:52 (xfr#982, to-chk=232/1253) 71,503,481,413  85%  115.00MB/s    0:09:52 (xfr#983, to-chk=231/1253) 71,565,380,165  85%  116.04MB/s    0:01:43   71,576,295,478  85%  115.00MB/s    0:09:53 (xfr#984, to-chk=230/1253) 71,649,109,543  85%  115.01MB/s    0:09:54 (xfr#985, to-chk=229/1253) 71,671,948,839  85%  120.45MB/s    0:01:38   71,721,923,608  85%  115.01MB/s    0:09:54 (xfr#986, to-chk=228/1253) 71,794,737,673  85%  115.01MB/s    0:09:55 (xfr#987, to-chk=227/1253) 71,799,226,889  85%  118.72MB/s    0:01:39   71,867,551,738  85%  115.00MB/s    0:09:56 (xfr#988, to-chk=226/1253) 71,923,716,090  85%  119.96MB/s    0:01:37   71,940,365,803  85%  114.96MB/s    0:09:56 (xfr#989, to-chk=225/1253) 72,013,179,868  85%  114.98MB/s    0:09:57 (xfr#990, to-chk=224/1253) 72,045,718,492  85%  114.01MB/s    0:01:41   72,085,993,933  85%  115.02MB/s    0:09:57 (xfr#991, to-chk=223/1253) 72,158,807,998  86%  115.05MB/s    0:09:58 (xfr#992, to-chk=222/1253) 72,231,622,063  86%  115.09MB/s    0:09:58 (xfr#993, to-chk=221/1253) 72,231,625,890  86%  132.54MB/s    0:01:25   72,231,625,890  86%  115.09MB/s    0:09:58 (xfr#994, to-chk=220/1253) 72,231,625,890  86%  115.09MB/s    0:09:58 (xfr#994, to-chk=220/1253) 72,231,625,890  86%  115.09MB/s    0:09:58 (xfr#994, to-chk=220/1253) 72,231,625,902  86%  115.09MB/s    0:09:58 (xfr#995, to-chk=218/1253) 72,231,625,913  86%  115.09MB/s    0:09:58 (xfr#996, to-chk=217/1253) 72,231,625,931  86%  115.09MB/s    0:09:58 (xfr#997, to-chk=216/1253) 72,231,626,928  86%  115.09MB/s    0:09:58 (xfr#998, to-chk=215/1253) 72,304,440,993  86%  115.11MB/s    0:09:59 (xfr#999, to-chk=214/1253) 72,363,980,449  86%  134.28MB/s    0:01:23   72,377,255,058  86%  115.12MB/s    0:09:59 (xfr#1000, to-chk=213/1253) 72,450,069,123  86%  115.14MB/s    0:10:00 (xfr#1001, to-chk=212/1253) 72,522,883,188  86%  115.18MB/s    0:10:00 (xfr#1002, to-chk=211/1253) 72,530,255,988  86%  144.00MB/s    0:01:16   72,595,697,253  86%  115.23MB/s    0:10:00 (xfr#1003, to-chk=210/1253) 72,668,511,318  86%  115.22MB/s    0:10:01 (xfr#1004, to-chk=209/1253) 72,672,083,030  86%  148.70MB/s    0:01:13   72,741,325,383  86%  115.25MB/s    0:10:01 (xfr#1005, to-chk=208/1253) 72,814,139,448  86%  115.28MB/s    0:10:02 (xfr#1006, to-chk=207/1253) 72,819,152,952  86%  139.87MB/s    0:01:17   72,886,953,513  86%  115.23MB/s    0:10:03 (xfr#1007, to-chk=206/1253) 72,917,165,609  86%  131.72MB/s    0:01:21   72,959,767,578  86%  115.23MB/s    0:10:03 (xfr#1008, to-chk=205/1253) 73,032,581,643  87%  115.25MB/s    0:10:04 (xfr#1009, to-chk=204/1253) 73,044,476,427  87%  122.60MB/s    0:01:26   73,105,395,708  87%  115.27MB/s    0:10:04 (xfr#1010, to-chk=203/1253) 73,178,209,773  87%  115.28MB/s    0:10:05 (xfr#1011, to-chk=202/1253) 73,185,844,717  87%  122.28MB/s    0:01:25   73,251,023,838  87%  115.25MB/s    0:10:06 (xfr#1012, to-chk=201/1253) 73,286,708,190  87%  110.45MB/s    0:01:33   73,323,837,903  87%  115.22MB/s    0:10:06 (xfr#1013, to-chk=200/1253) 73,391,503,823  87%  111.92MB/s    0:01:31   73,396,651,968  87%  115.20MB/s    0:10:07 (xfr#1014, to-chk=199/1253) 73,396,655,795  87%  115.20MB/s    0:10:07 (xfr#1015, to-chk=198/1253) 73,396,655,807  87%  115.20MB/s    0:10:07 (xfr#1016, to-chk=196/1253) 73,396,655,818  87%  115.20MB/s    0:10:07 (xfr#1017, to-chk=195/1253) 73,396,655,836  87%  115.20MB/s    0:10:07 (xfr#1018, to-chk=194/1253) 73,396,656,833  87%  115.19MB/s    0:10:07 (xfr#1019, to-chk=193/1253) 73,469,470,898  87%  115.14MB/s    0:10:08 (xfr#1020, to-chk=192/1253) 73,471,338,674  87%  100.64MB/s    0:01:41   73,542,284,963  87%  115.11MB/s    0:10:09 (xfr#1021, to-chk=191/1253) 73,570,989,731  87%   90.96MB/s    0:01:50   73,615,099,028  87%  115.09MB/s    0:10:10 (xfr#1022, to-chk=190/1253) 73,675,162,772  87%   92.45MB/s    0:01:47   73,687,913,093  87%  115.08MB/s    0:10:10 (xfr#1023, to-chk=189/1253) 73,760,727,158  87%  115.10MB/s    0:10:11 (xfr#1024, to-chk=188/1253) 73,833,541,223  88%  115.13MB/s    0:10:11 (xfr#1025, to-chk=187/1253) 73,833,836,135  88%  105.28MB/s    0:01:33   73,906,355,288  88%  115.18MB/s    0:10:11 (xfr#1026, to-chk=186/1253) 73,979,169,353  88%  115.22MB/s    0:10:12 (xfr#1027, to-chk=185/1253) 73,996,700,233  88%  125.16MB/s    0:01:17   74,051,983,418  88%  115.23MB/s    0:10:12 (xfr#1028, to-chk=184/1253) 74,124,797,483  88%  115.24MB/s    0:10:13 (xfr#1029, to-chk=183/1253) 74,143,868,459  88%  136.48MB/s    0:01:09   74,197,611,548  88%  115.28MB/s    0:10:13 (xfr#1030, to-chk=182/1253) 74,270,425,613  88%  115.29MB/s    0:10:14 (xfr#1031, to-chk=181/1253) 74,301,751,821  88%  149.35MB/s    0:01:02   74,343,239,678  88%  115.33MB/s    0:10:14 (xfr#1032, to-chk=180/1253) 74,416,053,743  88%  115.37MB/s    0:10:15 (xfr#1033, to-chk=179/1253) 74,488,867,808  88%  115.42MB/s    0:10:15 (xfr#1034, to-chk=178/1253) 74,499,648,480  88%  158.86MB/s    0:00:57   74,561,681,873  88%  115.46MB/s    0:10:15 (xfr#1035, to-chk=177/1253) 74,561,685,700  88%  115.46MB/s    0:10:15 (xfr#1036, to-chk=176/1253) 74,561,685,712  88%  115.46MB/s    0:10:15 (xfr#1037, to-chk=174/1253) 74,561,685,723  88%  115.46MB/s    0:10:15 (xfr#1038, to-chk=173/1253) 74,561,685,741  88%  115.46MB/s    0:10:15 (xfr#1039, to-chk=172/1253) 74,561,686,736  88%  115.46MB/s    0:10:15 (xfr#1040, to-chk=171/1253) 74,634,500,801  88%  115.48MB/s    0:10:16 (xfr#1041, to-chk=170/1253) 74,659,273,409  89%  158.09MB/s    0:00:56   74,707,314,866  89%  115.51MB/s    0:10:16 (xfr#1042, to-chk=169/1253) 74,780,128,931  89%  115.55MB/s    0:10:17 (xfr#1043, to-chk=168/1253) 74,852,942,996  89%  115.60MB/s    0:10:17 (xfr#1044, to-chk=167/1253) 74,857,890,964  89%  170.36MB/s    0:00:51   74,925,757,061  89%  115.64MB/s    0:10:17 (xfr#1045, to-chk=166/1253) 74,998,571,126  89%  115.67MB/s    0:10:18 (xfr#1046, to-chk=165/1253) 75,038,449,782  89%  175.69MB/s    0:00:49   75,071,385,191  89%  115.69MB/s    0:10:18 (xfr#1047, to-chk=164/1253) 75,144,199,256  89%  115.69MB/s    0:10:19 (xfr#1048, to-chk=163/1253) 75,150,261,336  89%  155.16MB/s    0:00:54   75,217,013,321  89%  115.70MB/s    0:10:19 (xfr#1049, to-chk=162/1253) 75,289,827,386  89%  115.72MB/s    0:10:20 (xfr#1050, to-chk=161/1253) 75,294,054,458  89%  151.34MB/s    0:00:55   75,362,641,451  89%  115.76MB/s    0:10:20 (xfr#1051, to-chk=160/1253) 75,435,455,516  89%  115.79MB/s    0:10:21 (xfr#1052, to-chk=159/1253) 75,476,907,036  89%  142.05MB/s    0:00:57   75,508,269,581  90%  115.79MB/s    0:10:21 (xfr#1053, to-chk=158/1253) 75,581,083,646  90%  115.79MB/s    0:10:22 (xfr#1054, to-chk=157/1253) 75,623,550,974  90%  134.33MB/s    0:01:00   75,653,897,711  90%  115.84MB/s    0:10:22 (xfr#1055, to-chk=156/1253) 75,726,711,776  90%  115.85MB/s    0:10:23 (xfr#1056, to-chk=155/1253) 75,726,715,603  90%  115.85MB/s    0:10:23 (xfr#1057, to-chk=154/1253) 75,726,715,615  90%  115.85MB/s    0:10:23 (xfr#1058, to-chk=152/1253) 75,726,715,626  90%  115.85MB/s    0:10:23 (xfr#1059, to-chk=151/1253) 75,726,715,644  90%  115.85MB/s    0:10:23 (xfr#1060, to-chk=150/1253) 75,726,716,639  90%  115.85MB/s    0:10:23 (xfr#1061, to-chk=149/1253) 75,767,119,583  90%  141.45MB/s    0:00:56   75,799,530,704  90%  115.86MB/s    0:10:23 (xfr#1062, to-chk=148/1253) 75,872,344,769  90%  115.85MB/s    0:10:24 (xfr#1063, to-chk=147/1253) 75,903,802,049  90%  139.82MB/s    0:00:55   75,945,158,834  90%  115.90MB/s    0:10:24 (xfr#1064, to-chk=146/1253) 76,017,972,899  90%  115.95MB/s    0:10:25 (xfr#1065, to-chk=145/1253) 76,090,786,964  90%  115.99MB/s    0:10:25 (xfr#1066, to-chk=144/1253) 76,105,761,940  90%  149.89MB/s    0:00:50   76,163,601,029  90%  116.03MB/s    0:10:25 (xfr#1067, to-chk=143/1253) 76,236,415,094  90%  116.08MB/s    0:10:26 (xfr#1068, to-chk=142/1253) 76,309,229,159  90%  116.13MB/s    0:10:26 (xfr#1069, to-chk=141/1253) 76,311,621,223  90%  163.84MB/s    0:00:45   76,382,043,224  91%  116.13MB/s    0:10:27 (xfr#1070, to-chk=140/1253) 76,454,857,289  91%  116.15MB/s    0:10:27 (xfr#1071, to-chk=139/1253) 76,455,676,489  91%  164.16MB/s    0:00:44   76,527,671,354  91%  116.20MB/s    0:10:28 (xfr#1072, to-chk=138/1253) 76,581,836,858  91%  161.66MB/s    0:00:44   76,600,485,419  91%  116.17MB/s    0:10:28 (xfr#1073, to-chk=137/1253) 76,673,299,484  91%  116.19MB/s    0:10:29 (xfr#1074, to-chk=136/1253) 76,746,113,549  91%  116.24MB/s    0:10:29 (xfr#1075, to-chk=135/1253) 76,755,419,661  91%  154.89MB/s    0:00:44   76,818,927,614  91%  116.28MB/s    0:10:30 (xfr#1076, to-chk=134/1253) 76,891,741,679  91%  116.31MB/s    0:10:30 (xfr#1077, to-chk=133/1253) 76,891,745,506  91%  116.31MB/s    0:10:30 (xfr#1078, to-chk=132/1253) 76,891,745,518  91%  116.31MB/s    0:10:30 (xfr#1079, to-chk=130/1253) 76,891,745,529  91%  116.31MB/s    0:10:30 (xfr#1080, to-chk=129/1253) 76,891,745,547  91%  116.31MB/s    0:10:30 (xfr#1081, to-chk=128/1253) 76,891,746,542  91%  116.31MB/s    0:10:30 (xfr#1082, to-chk=127/1253) 76,906,000,622  91%  141.82MB/s    0:00:48   76,964,560,607  91%  116.32MB/s    0:10:31 (xfr#1083, to-chk=126/1253) 77,037,374,672  91%  116.33MB/s    0:10:31 (xfr#1084, to-chk=125/1253) 77,081,447,632  91%  149.31MB/s    0:00:44   77,110,188,737  91%  116.39MB/s    0:10:31 (xfr#1085, to-chk=124/1253) 77,183,002,802  92%  116.42MB/s    0:10:32 (xfr#1086, to-chk=123/1253) 77,208,463,538  92%  149.51MB/s    0:00:43   77,255,816,867  92%  116.40MB/s    0:10:32 (xfr#1087, to-chk=122/1253) 77,328,630,932  92%  116.44MB/s    0:10:33 (xfr#1088, to-chk=121/1253) 77,401,444,997  92%  116.48MB/s    0:10:33 (xfr#1089, to-chk=120/1253) 77,405,672,069  92%  155.03MB/s    0:00:40   77,474,259,062  92%  116.53MB/s    0:10:34 (xfr#1090, to-chk=119/1253) 77,547,073,127  92%  116.54MB/s    0:10:34 (xfr#1091, to-chk=118/1253) 77,562,834,535  92%  156.60MB/s    0:00:39   77,619,887,192  92%  116.58MB/s    0:10:34 (xfr#1092, to-chk=117/1253) 77,692,701,257  92%  116.61MB/s    0:10:35 (xfr#1093, to-chk=116/1253) 77,748,931,145  92%  159.14MB/s    0:00:37   77,765,515,322  92%  116.64MB/s    0:10:35 (xfr#1094, to-chk=115/1253) 77,838,329,387  92%  116.68MB/s    0:10:36 (xfr#1095, to-chk=114/1253) 77,911,143,452  92%  116.73MB/s    0:10:36 (xfr#1096, to-chk=113/1253) 77,943,944,220  92%  175.35MB/s    0:00:33   77,983,957,517  92%  116.77MB/s    0:10:36 (xfr#1097, to-chk=112/1253) 78,056,771,582  93%  116.81MB/s    0:10:37 (xfr#1098, to-chk=111/1253) 78,056,775,409  93%  116.81MB/s    0:10:37 (xfr#1099, to-chk=110/1253) 78,056,775,421  93%  116.81MB/s    0:10:37 (xfr#1100, to-chk=108/1253) 78,056,775,432  93%  116.81MB/s    0:10:37 (xfr#1101, to-chk=107/1253) 78,056,775,450  93%  116.81MB/s    0:10:37 (xfr#1102, to-chk=106/1253) 78,056,776,445  93%  116.81MB/s    0:10:37 (xfr#1103, to-chk=105/1253) 78,082,761,469  93%  156.43MB/s    0:00:36   78,129,590,510  93%  116.76MB/s    0:10:38 (xfr#1104, to-chk=104/1253) 78,202,404,575  93%  116.79MB/s    0:10:38 (xfr#1105, to-chk=103/1253) 78,250,409,695  93%  158.85MB/s    0:00:34   78,275,218,640  93%  116.83MB/s    0:10:38 (xfr#1106, to-chk=102/1253) 78,348,032,705  93%  116.86MB/s    0:10:39 (xfr#1107, to-chk=101/1253) 78,420,846,770  93%  116.90MB/s    0:10:39 (xfr#1108, to-chk=100/1253) 78,431,365,298  93%  157.66MB/s    0:00:33   78,493,660,835  93%  116.94MB/s    0:10:40 (xfr#1109, to-chk=99/1253)  78,566,474,900  93%  116.97MB/s    0:10:40 (xfr#1110, to-chk=98/1253) 78,572,274,836  93%  145.06MB/s    0:00:35   78,639,288,965  93%  116.95MB/s    0:10:41 (xfr#1111, to-chk=97/1253) 78,712,103,030  93%  116.96MB/s    0:10:41 (xfr#1112, to-chk=96/1253) 78,713,970,806  93%  150.49MB/s    0:00:33   78,784,917,095  93%  116.98MB/s    0:10:42 (xfr#1113, to-chk=95/1253) 78,835,805,799  93%  137.98MB/s    0:00:35   78,857,731,160  94%  116.95MB/s    0:10:43 (xfr#1114, to-chk=94/1253) 78,930,545,225  94%  116.96MB/s    0:10:43 (xfr#1115, to-chk=93/1253) 78,979,336,777  94%  129.16MB/s    0:00:37   79,003,359,290  94%  116.99MB/s    0:10:44 (xfr#1116, to-chk=92/1253) 79,076,173,355  94%  116.98MB/s    0:10:44 (xfr#1117, to-chk=91/1253) 79,110,907,435  94%  127.05MB/s    0:00:36   79,148,987,420  94%  117.01MB/s    0:10:45 (xfr#1118, to-chk=90/1253) 79,221,801,485  94%  117.04MB/s    0:10:45 (xfr#1119, to-chk=89/1253) 79,221,805,312  94%  117.04MB/s    0:10:45 (xfr#1120, to-chk=88/1253) 79,221,805,324  94%  117.04MB/s    0:10:45 (xfr#1121, to-chk=86/1253) 79,221,805,335  94%  117.04MB/s    0:10:45 (xfr#1122, to-chk=85/1253) 79,221,805,353  94%  117.04MB/s    0:10:45 (xfr#1123, to-chk=84/1253) 79,221,806,348  94%  117.04MB/s    0:10:45 (xfr#1124, to-chk=83/1253) 79,262,209,292  94%  129.32MB/s    0:00:34   79,294,620,413  94%  117.05MB/s    0:10:46 (xfr#1125, to-chk=82/1253) 79,367,434,478  94%  117.04MB/s    0:10:46 (xfr#1126, to-chk=81/1253) 79,387,750,638  94%  131.69MB/s    0:00:33   79,440,248,543  94%  117.06MB/s    0:10:47 (xfr#1127, to-chk=80/1253) 79,513,062,608  94%  117.07MB/s    0:10:47 (xfr#1128, to-chk=79/1253) 79,555,955,920  94%  137.58MB/s    0:00:30   79,585,876,673  94%  117.12MB/s    0:10:48 (xfr#1129, to-chk=78/1253) 79,658,690,738  94%  117.16MB/s    0:10:48 (xfr#1130, to-chk=77/1253) 79,731,504,803  95%  117.20MB/s    0:10:48 (xfr#1131, to-chk=76/1253) 79,758,800,547  95%  154.59MB/s    0:00:26   79,804,318,868  95%  117.25MB/s    0:10:49 (xfr#1132, to-chk=75/1253) 79,877,132,933  95%  117.26MB/s    0:10:49 (xfr#1133, to-chk=74/1253) 79,916,749,445  95%  156.17MB/s    0:00:24   79,949,946,998  95%  117.29MB/s    0:10:50 (xfr#1134, to-chk=73/1253) 80,022,761,063  95%  117.31MB/s    0:10:50 (xfr#1135, to-chk=72/1253) 80,095,575,128  95%  117.36MB/s    0:10:50 (xfr#1136, to-chk=71/1253) 80,100,064,344  95%  169.41MB/s    0:00:21   80,168,389,193  95%  117.39MB/s    0:10:51 (xfr#1137, to-chk=70/1253) 80,241,203,258  95%  117.42MB/s    0:10:51 (xfr#1138, to-chk=69/1253) 80,292,091,962  95%  175.03MB/s    0:00:20   80,314,017,323  95%  117.47MB/s    0:10:52 (xfr#1139, to-chk=68/1253) 80,386,831,388  95%  117.50MB/s    0:10:52 (xfr#1140, to-chk=67/1253) 80,386,835,215  95%  117.50MB/s    0:10:52 (xfr#1141, to-chk=66/1253) 80,386,835,227  95%  117.50MB/s    0:10:52 (xfr#1142, to-chk=64/1253) 80,386,835,238  95%  117.50MB/s    0:10:52 (xfr#1143, to-chk=63/1253) 80,386,835,256  95%  117.50MB/s    0:10:52 (xfr#1144, to-chk=62/1253) 80,386,836,251  95%  117.50MB/s    0:10:52 (xfr#1145, to-chk=61/1253) 80,443,229,979  95%  162.73MB/s    0:00:20   80,459,650,316  95%  117.50MB/s    0:10:53 (xfr#1146, to-chk=60/1253) 80,532,464,381  96%  117.51MB/s    0:10:53 (xfr#1147, to-chk=59/1253) 80,551,633,661  96%  150.95MB/s    0:00:21   80,605,278,446  96%  117.50MB/s    0:10:54 (xfr#1148, to-chk=58/1253) 80,678,092,511  96%  117.49MB/s    0:10:54 (xfr#1149, to-chk=57/1253) 80,683,106,015  96%  138.66MB/s    0:00:22   80,750,906,576  96%  117.50MB/s    0:10:55 (xfr#1150, to-chk=56/1253) 80,823,720,641  96%  117.53MB/s    0:10:55 (xfr#1151, to-chk=55/1253) 80,841,317,057  96%  130.62MB/s    0:00:22   80,896,534,706  96%  117.56MB/s    0:10:56 (xfr#1152, to-chk=54/1253) 80,969,348,771  96%  117.60MB/s    0:10:56 (xfr#1153, to-chk=53/1253) 81,003,198,115  96%  133.17MB/s    0:00:21   81,042,162,836  96%  117.61MB/s    0:10:57 (xfr#1154, to-chk=52/1253) 81,114,976,901  96%  117.64MB/s    0:10:57 (xfr#1155, to-chk=51/1253) 81,177,662,085  96%  148.85MB/s    0:00:17   81,187,790,966  96%  117.67MB/s    0:10:57 (xfr#1156, to-chk=50/1253) 81,260,605,031  96%  117.69MB/s    0:10:58 (xfr#1157, to-chk=49/1253) 81,295,437,415  96%  146.06MB/s    0:00:17   81,333,419,096  96%  117.68MB/s    0:10:59 (xfr#1158, to-chk=48/1253) 81,406,233,161  97%  117.70MB/s    0:10:59 (xfr#1159, to-chk=47/1253) 81,463,708,233  97%  148.46MB/s    0:00:15   81,479,047,226  97%  117.74MB/s    0:10:59 (xfr#1160, to-chk=46/1253) 81,551,861,291  97%  117.77MB/s    0:11:00 (xfr#1161, to-chk=45/1253) 81,551,865,118  97%  117.77MB/s    0:11:00 (xfr#1162, to-chk=44/1253) 81,551,865,130  97%  117.77MB/s    0:11:00 (xfr#1163, to-chk=42/1253) 81,551,865,141  97%  117.77MB/s    0:11:00 (xfr#1164, to-chk=41/1253) 81,551,865,159  97%  117.77MB/s    0:11:00 (xfr#1165, to-chk=40/1253) 81,551,866,154  97%  117.76MB/s    0:11:00 (xfr#1166, to-chk=39/1253) 81,613,863,210  97%  145.67MB/s    0:00:15   81,624,680,219  97%  117.77MB/s    0:11:00 (xfr#1167, to-chk=38/1253) 81,697,494,284  97%  117.78MB/s    0:11:01 (xfr#1168, to-chk=37/1253) 81,770,308,349  97%  117.81MB/s    0:11:01 (xfr#1169, to-chk=36/1253) 81,770,341,117  97%  141.31MB/s    0:00:14   81,843,122,414  97%  117.84MB/s    0:11:02 (xfr#1170, to-chk=35/1253) 81,915,936,479  97%  117.88MB/s    0:11:02 (xfr#1171, to-chk=34/1253) 81,949,523,679  97%  155.95MB/s    0:00:12   81,988,750,544  97%  117.91MB/s    0:11:03 (xfr#1172, to-chk=33/1253) 82,061,564,609  97%  117.94MB/s    0:11:03 (xfr#1173, to-chk=32/1253) 82,131,393,217  97%  159.19MB/s    0:00:10   82,134,378,674  97%  117.97MB/s    0:11:03 (xfr#1174, to-chk=31/1253) 82,207,192,739  98%  117.97MB/s    0:11:04 (xfr#1175, to-chk=30/1253) 82,216,662,691  98%  139.23MB/s    0:00:11   82,280,006,804  98%  117.90MB/s    0:11:05 (xfr#1176, to-chk=29/1253) 82,352,820,869  98%  117.92MB/s    0:11:06 (xfr#1177, to-chk=28/1253) 82,353,640,069  98%  134.59MB/s    0:00:11   82,425,634,934  98%  117.93MB/s    0:11:06 (xfr#1178, to-chk=27/1253) 82,498,448,999  98%  117.95MB/s    0:11:07 (xfr#1179, to-chk=26/1253) 82,505,035,367  98%  128.06MB/s    0:00:10   82,571,263,064  98%  117.99MB/s    0:11:07 (xfr#1180, to-chk=25/1253) 82,644,077,129  98%  118.02MB/s    0:11:07 (xfr#1181, to-chk=24/1253) 82,684,709,449  98%  127.55MB/s    0:00:09   82,716,891,194  98%  118.05MB/s    0:11:08 (xfr#1182, to-chk=23/1253) 82,716,895,021  98%  118.05MB/s    0:11:08 (xfr#1183, to-chk=22/1253) 82,716,895,033  98%  118.05MB/s    0:11:08 (xfr#1184, to-chk=20/1253) 82,716,895,044  98%  118.05MB/s    0:11:08 (xfr#1185, to-chk=19/1253) 82,716,895,062  98%  118.05MB/s    0:11:08 (xfr#1186, to-chk=18/1253) 82,716,896,057  98%  118.05MB/s    0:11:08 (xfr#1187, to-chk=17/1253) 82,789,710,122  98%  118.05MB/s    0:11:08 (xfr#1188, to-chk=16/1253) 82,802,325,802  98%  138.70MB/s    0:00:07   82,862,524,187  98%  118.06MB/s    0:11:09 (xfr#1189, to-chk=15/1253) 82,935,338,252  98%  118.09MB/s    0:11:09 (xfr#1190, to-chk=14/1253) 82,994,877,708  98%  152.12MB/s    0:00:05   83,008,152,317  98%  118.13MB/s    0:11:10 (xfr#1191, to-chk=13/1253) 83,080,966,382  99%  118.16MB/s    0:11:10 (xfr#1192, to-chk=12/1253) 83,153,780,447  99%  118.20MB/s    0:11:10 (xfr#1193, to-chk=11/1253) 83,191,561,951  99%  163.03MB/s    0:00:04   83,226,594,512  99%  118.25MB/s    0:11:11 (xfr#1194, to-chk=10/1253) 83,299,408,577  99%  118.30MB/s    0:11:11 (xfr#1195, to-chk=9/1253)  83,372,222,642  99%  118.31MB/s    0:11:12 (xfr#1196, to-chk=8/1253) 83,373,566,130  99%  163.50MB/s    0:00:03   83,445,036,707  99%  118.33MB/s    0:11:12 (xfr#1197, to-chk=7/1253) 83,517,850,772  99%  118.36MB/s    0:11:12 (xfr#1198, to-chk=6/1253) 83,543,573,652  99%  176.73MB/s    0:00:01   83,590,664,837  99%  118.39MB/s    0:11:13 (xfr#1199, to-chk=5/1253) 83,663,478,902  99%  118.38MB/s    0:11:13 (xfr#1200, to-chk=4/1253) 83,673,210,998  99%  161.73MB/s    0:00:01   83,736,292,967  99%  118.40MB/s    0:11:14 (xfr#1201, to-chk=3/1253) 83,809,107,032  99%  118.43MB/s    0:11:14 (xfr#1202, to-chk=2/1253) 83,849,346,136  99%  156.87MB/s    0:00:00   83,881,921,097  99%  118.47MB/s    0:11:15 (xfr#1203, to-chk=1/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253) 83,881,924,924 100%  118.47MB/s    0:11:15 (xfr#1204, to-chk=0/1253)
